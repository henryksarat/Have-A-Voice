//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditBoard_Board", "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Board), "AuditBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditBoard), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditBoard_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "AuditBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditBoard), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditBoardReplies_BoardReply", "BoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.BoardReply), "AuditBoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditBoardReply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditBoardReplies_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "AuditBoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditBoardReply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditIssueReplyComments_IssueReplyComments", "IssueReplyComment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.IssueReplyComment), "AuditIssueReplyComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditIssueReplyComment), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditIssueReplyComments_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "AuditIssueReplyComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditIssueReplyComment), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditIssueReplys_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "AuditIssueReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditIssueReply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditIssues_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "AuditIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditIssue), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Board_OwnerUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Board), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Board_PostedUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Board), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_BoardReply_Board", "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Board), "BoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.BoardReply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_BoardReply_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "BoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.BoardReply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_ErrorLog_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "ErrorLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.ErrorLog), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Events_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Event), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Feedback_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Feedback", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Feedback), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_FilteredCityState_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "FilteredCityState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.FilteredCityState), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_FilteredZipCode_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "FilteredZipCode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.FilteredZipCode), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueComplaints_FiledByUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "IssueComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueDisposition_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "IssueDisposition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueDisposition), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplyCommentComplaints_FiledByUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "IssueReplyCommentComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReplyCommentComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyComment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.IssueReplyComment), "IssueReplyCommentComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReplyCommentComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplyComments_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "IssueReplyComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReplyComment), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplyComplaints_FiledByUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "IssueReplyComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReplyComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplyDisposition_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "IssueReplyDisposition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReplyDisposition), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Message_Users_FromUserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Message), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Message_Users_ToUserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Message), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Replys_Messages", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Message), "Reply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Reply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_RolePermissions_Permissions", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Permission), "RolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.RolePermission), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_ProfileComplaints_FiledByUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "ProfileComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.ProfileComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_ProfileComplaints_TowardUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "ProfileComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.ProfileComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Replys_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Reply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Reply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Restrictions_Users_CreatedByUserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Restriction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Restriction), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Roles_Restrictions", "Restriction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Restriction), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Role), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_RolePermissions_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Role), "RolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.RolePermission), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_UserRoles_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Role), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.UserRole), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_UserRoles_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.UserRole), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_WhoIsOnline_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "WhoIsOnline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.WhoIsOnline), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_BoardViewedState_Board", "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Board), "BoardViewedState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.BoardViewedState), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_BoardViewedState_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "BoardViewedState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.BoardViewedState), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditIssues_Issues", "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Issue), "AuditIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditIssue), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueComplaints_Issues", "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Issue), "IssueComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueDisposition_Issues", "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Issue), "IssueDisposition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueDisposition), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Issues_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Issue), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuditIssueReplys_IssueReplys", "IssueReply", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.IssueReply), "AuditIssueReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuditIssueReply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplyComments_IssueReplys", "IssueReply", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.IssueReply), "IssueReplyComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReplyComment), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplyComplaints_IssueReplys", "IssueReply", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.IssueReply), "IssueReplyComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReplyComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplyDisposition_IssueReplys", "IssueReply", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.IssueReply), "IssueReplyDisposition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReplyDisposition), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplys_Issues", "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Issue), "IssueReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_IssueReplys_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "IssueReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.IssueReply), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Friends_FriendUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Friend", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Friend), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Friends_SourceUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Friend", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Friend), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_AuthorityVerification_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "AuthorityVerification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.AuthorityVerification), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_PhotoAlbum_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "PhotoAlbum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.PhotoAlbum), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Photos_PhotoAlbum", "PhotoAlbum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.PhotoAlbum), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Photo), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Photos_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Photo), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_PhotoComplaints_Photos", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.Photo), "PhotoComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.PhotoComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_PhotoComplaints_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "PhotoComplaint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.PhotoComplaint), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Fans_FanUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Fan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Fan), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_Fans_SourceUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "Fan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.Fan), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_UserPrivacyGroups_PrivacyGroup1", "PrivacyGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.PrivacyGroup), "UserPrivacyGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.UserPrivacyGroup), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_PrivacySettings_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "PrivacySetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.PrivacySetting), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_UserPrivacyGroups_PrivacySettings", "PrivacySetting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.PrivacySetting), "UserPrivacyGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.UserPrivacyGroup), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacyGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.UserPrivacyGroup), "UserPrivacySetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.UserPrivacySetting), true)]
[assembly: EdmRelationshipAttribute("HaveAVoice.Models", "FK_UserPrivacySettings_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaveAVoice.Models.User), "UserPrivacySetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaveAVoice.Models.UserPrivacySetting), true)]

#endregion

namespace HaveAVoice.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HaveAVoiceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HaveAVoiceEntities object using the connection string found in the 'HaveAVoiceEntities' section of the application configuration file.
        /// </summary>
        public HaveAVoiceEntities() : base("name=HaveAVoiceEntities", "HaveAVoiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HaveAVoiceEntities object.
        /// </summary>
        public HaveAVoiceEntities(string connectionString) : base(connectionString, "HaveAVoiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HaveAVoiceEntities object.
        /// </summary>
        public HaveAVoiceEntities(EntityConnection connection) : base(connection, "HaveAVoiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditBoard> AuditBoards
        {
            get
            {
                if ((_AuditBoards == null))
                {
                    _AuditBoards = base.CreateObjectSet<AuditBoard>("AuditBoards");
                }
                return _AuditBoards;
            }
        }
        private ObjectSet<AuditBoard> _AuditBoards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditBoardReply> AuditBoardReplies
        {
            get
            {
                if ((_AuditBoardReplies == null))
                {
                    _AuditBoardReplies = base.CreateObjectSet<AuditBoardReply>("AuditBoardReplies");
                }
                return _AuditBoardReplies;
            }
        }
        private ObjectSet<AuditBoardReply> _AuditBoardReplies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditIssueReplyComment> AuditIssueReplyComments
        {
            get
            {
                if ((_AuditIssueReplyComments == null))
                {
                    _AuditIssueReplyComments = base.CreateObjectSet<AuditIssueReplyComment>("AuditIssueReplyComments");
                }
                return _AuditIssueReplyComments;
            }
        }
        private ObjectSet<AuditIssueReplyComment> _AuditIssueReplyComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditIssueReply> AuditIssueReplys
        {
            get
            {
                if ((_AuditIssueReplys == null))
                {
                    _AuditIssueReplys = base.CreateObjectSet<AuditIssueReply>("AuditIssueReplys");
                }
                return _AuditIssueReplys;
            }
        }
        private ObjectSet<AuditIssueReply> _AuditIssueReplys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditIssue> AuditIssues
        {
            get
            {
                if ((_AuditIssues == null))
                {
                    _AuditIssues = base.CreateObjectSet<AuditIssue>("AuditIssues");
                }
                return _AuditIssues;
            }
        }
        private ObjectSet<AuditIssue> _AuditIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Board> Boards
        {
            get
            {
                if ((_Boards == null))
                {
                    _Boards = base.CreateObjectSet<Board>("Boards");
                }
                return _Boards;
            }
        }
        private ObjectSet<Board> _Boards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BoardReply> BoardReplies
        {
            get
            {
                if ((_BoardReplies == null))
                {
                    _BoardReplies = base.CreateObjectSet<BoardReply>("BoardReplies");
                }
                return _BoardReplies;
            }
        }
        private ObjectSet<BoardReply> _BoardReplies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorLog> ErrorLogs
        {
            get
            {
                if ((_ErrorLogs == null))
                {
                    _ErrorLogs = base.CreateObjectSet<ErrorLog>("ErrorLogs");
                }
                return _ErrorLogs;
            }
        }
        private ObjectSet<ErrorLog> _ErrorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feedback> Feedbacks
        {
            get
            {
                if ((_Feedbacks == null))
                {
                    _Feedbacks = base.CreateObjectSet<Feedback>("Feedbacks");
                }
                return _Feedbacks;
            }
        }
        private ObjectSet<Feedback> _Feedbacks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilteredCityState> FilteredCityStates
        {
            get
            {
                if ((_FilteredCityStates == null))
                {
                    _FilteredCityStates = base.CreateObjectSet<FilteredCityState>("FilteredCityStates");
                }
                return _FilteredCityStates;
            }
        }
        private ObjectSet<FilteredCityState> _FilteredCityStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilteredZipCode> FilteredZipCodes
        {
            get
            {
                if ((_FilteredZipCodes == null))
                {
                    _FilteredZipCodes = base.CreateObjectSet<FilteredZipCode>("FilteredZipCodes");
                }
                return _FilteredZipCodes;
            }
        }
        private ObjectSet<FilteredZipCode> _FilteredZipCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueComplaint> IssueComplaints
        {
            get
            {
                if ((_IssueComplaints == null))
                {
                    _IssueComplaints = base.CreateObjectSet<IssueComplaint>("IssueComplaints");
                }
                return _IssueComplaints;
            }
        }
        private ObjectSet<IssueComplaint> _IssueComplaints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueDisposition> IssueDispositions
        {
            get
            {
                if ((_IssueDispositions == null))
                {
                    _IssueDispositions = base.CreateObjectSet<IssueDisposition>("IssueDispositions");
                }
                return _IssueDispositions;
            }
        }
        private ObjectSet<IssueDisposition> _IssueDispositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueReplyCommentComplaint> IssueReplyCommentComplaints
        {
            get
            {
                if ((_IssueReplyCommentComplaints == null))
                {
                    _IssueReplyCommentComplaints = base.CreateObjectSet<IssueReplyCommentComplaint>("IssueReplyCommentComplaints");
                }
                return _IssueReplyCommentComplaints;
            }
        }
        private ObjectSet<IssueReplyCommentComplaint> _IssueReplyCommentComplaints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueReplyComment> IssueReplyComments
        {
            get
            {
                if ((_IssueReplyComments == null))
                {
                    _IssueReplyComments = base.CreateObjectSet<IssueReplyComment>("IssueReplyComments");
                }
                return _IssueReplyComments;
            }
        }
        private ObjectSet<IssueReplyComment> _IssueReplyComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueReplyComplaint> IssueReplyComplaints
        {
            get
            {
                if ((_IssueReplyComplaints == null))
                {
                    _IssueReplyComplaints = base.CreateObjectSet<IssueReplyComplaint>("IssueReplyComplaints");
                }
                return _IssueReplyComplaints;
            }
        }
        private ObjectSet<IssueReplyComplaint> _IssueReplyComplaints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueReplyDisposition> IssueReplyDispositions
        {
            get
            {
                if ((_IssueReplyDispositions == null))
                {
                    _IssueReplyDispositions = base.CreateObjectSet<IssueReplyDisposition>("IssueReplyDispositions");
                }
                return _IssueReplyDispositions;
            }
        }
        private ObjectSet<IssueReplyDisposition> _IssueReplyDispositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProfileComplaint> ProfileComplaints
        {
            get
            {
                if ((_ProfileComplaints == null))
                {
                    _ProfileComplaints = base.CreateObjectSet<ProfileComplaint>("ProfileComplaints");
                }
                return _ProfileComplaints;
            }
        }
        private ObjectSet<ProfileComplaint> _ProfileComplaints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reply> Replys
        {
            get
            {
                if ((_Replys == null))
                {
                    _Replys = base.CreateObjectSet<Reply>("Replys");
                }
                return _Replys;
            }
        }
        private ObjectSet<Reply> _Replys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Restriction> Restrictions
        {
            get
            {
                if ((_Restrictions == null))
                {
                    _Restrictions = base.CreateObjectSet<Restriction>("Restrictions");
                }
                return _Restrictions;
            }
        }
        private ObjectSet<Restriction> _Restrictions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RolePermission> RolePermissions
        {
            get
            {
                if ((_RolePermissions == null))
                {
                    _RolePermissions = base.CreateObjectSet<RolePermission>("RolePermissions");
                }
                return _RolePermissions;
            }
        }
        private ObjectSet<RolePermission> _RolePermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Timezone> Timezones
        {
            get
            {
                if ((_Timezones == null))
                {
                    _Timezones = base.CreateObjectSet<Timezone>("Timezones");
                }
                return _Timezones;
            }
        }
        private ObjectSet<Timezone> _Timezones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WhoIsOnline> WhoIsOnlines
        {
            get
            {
                if ((_WhoIsOnlines == null))
                {
                    _WhoIsOnlines = base.CreateObjectSet<WhoIsOnline>("WhoIsOnlines");
                }
                return _WhoIsOnlines;
            }
        }
        private ObjectSet<WhoIsOnline> _WhoIsOnlines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BoardViewedState> BoardViewedStates
        {
            get
            {
                if ((_BoardViewedStates == null))
                {
                    _BoardViewedStates = base.CreateObjectSet<BoardViewedState>("BoardViewedStates");
                }
                return _BoardViewedStates;
            }
        }
        private ObjectSet<BoardViewedState> _BoardViewedStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Issue> Issues
        {
            get
            {
                if ((_Issues == null))
                {
                    _Issues = base.CreateObjectSet<Issue>("Issues");
                }
                return _Issues;
            }
        }
        private ObjectSet<Issue> _Issues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueReply> IssueReplys
        {
            get
            {
                if ((_IssueReplys == null))
                {
                    _IssueReplys = base.CreateObjectSet<IssueReply>("IssueReplys");
                }
                return _IssueReplys;
            }
        }
        private ObjectSet<IssueReply> _IssueReplys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Friend> Friends
        {
            get
            {
                if ((_Friends == null))
                {
                    _Friends = base.CreateObjectSet<Friend>("Friends");
                }
                return _Friends;
            }
        }
        private ObjectSet<Friend> _Friends;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuthorityVerification> AuthorityVerifications
        {
            get
            {
                if ((_AuthorityVerifications == null))
                {
                    _AuthorityVerifications = base.CreateObjectSet<AuthorityVerification>("AuthorityVerifications");
                }
                return _AuthorityVerifications;
            }
        }
        private ObjectSet<AuthorityVerification> _AuthorityVerifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhotoAlbum> PhotoAlbums
        {
            get
            {
                if ((_PhotoAlbums == null))
                {
                    _PhotoAlbums = base.CreateObjectSet<PhotoAlbum>("PhotoAlbums");
                }
                return _PhotoAlbums;
            }
        }
        private ObjectSet<PhotoAlbum> _PhotoAlbums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhotoComplaint> PhotoComplaints
        {
            get
            {
                if ((_PhotoComplaints == null))
                {
                    _PhotoComplaints = base.CreateObjectSet<PhotoComplaint>("PhotoComplaints");
                }
                return _PhotoComplaints;
            }
        }
        private ObjectSet<PhotoComplaint> _PhotoComplaints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fan> Fans
        {
            get
            {
                if ((_Fans == null))
                {
                    _Fans = base.CreateObjectSet<Fan>("Fans");
                }
                return _Fans;
            }
        }
        private ObjectSet<Fan> _Fans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivacyGroup> PrivacyGroups
        {
            get
            {
                if ((_PrivacyGroups == null))
                {
                    _PrivacyGroups = base.CreateObjectSet<PrivacyGroup>("PrivacyGroups");
                }
                return _PrivacyGroups;
            }
        }
        private ObjectSet<PrivacyGroup> _PrivacyGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivacySetting> PrivacySettings
        {
            get
            {
                if ((_PrivacySettings == null))
                {
                    _PrivacySettings = base.CreateObjectSet<PrivacySetting>("PrivacySettings");
                }
                return _PrivacySettings;
            }
        }
        private ObjectSet<PrivacySetting> _PrivacySettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPrivacyGroup> UserPrivacyGroups
        {
            get
            {
                if ((_UserPrivacyGroups == null))
                {
                    _UserPrivacyGroups = base.CreateObjectSet<UserPrivacyGroup>("UserPrivacyGroups");
                }
                return _UserPrivacyGroups;
            }
        }
        private ObjectSet<UserPrivacyGroup> _UserPrivacyGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPrivacySetting> UserPrivacySettings
        {
            get
            {
                if ((_UserPrivacySettings == null))
                {
                    _UserPrivacySettings = base.CreateObjectSet<UserPrivacySetting>("UserPrivacySettings");
                }
                return _UserPrivacySettings;
            }
        }
        private ObjectSet<UserPrivacySetting> _UserPrivacySettings;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditBoards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditBoards(AuditBoard auditBoard)
        {
            base.AddObject("AuditBoards", auditBoard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditBoardReplies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditBoardReplies(AuditBoardReply auditBoardReply)
        {
            base.AddObject("AuditBoardReplies", auditBoardReply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditIssueReplyComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditIssueReplyComments(AuditIssueReplyComment auditIssueReplyComment)
        {
            base.AddObject("AuditIssueReplyComments", auditIssueReplyComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditIssueReplys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditIssueReplys(AuditIssueReply auditIssueReply)
        {
            base.AddObject("AuditIssueReplys", auditIssueReply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditIssues(AuditIssue auditIssue)
        {
            base.AddObject("AuditIssues", auditIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Boards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoards(Board board)
        {
            base.AddObject("Boards", board);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BoardReplies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoardReplies(BoardReply boardReply)
        {
            base.AddObject("BoardReplies", boardReply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorLogs(ErrorLog errorLog)
        {
            base.AddObject("ErrorLogs", errorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Feedbacks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedbacks(Feedback feedback)
        {
            base.AddObject("Feedbacks", feedback);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilteredCityStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilteredCityStates(FilteredCityState filteredCityState)
        {
            base.AddObject("FilteredCityStates", filteredCityState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilteredZipCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilteredZipCodes(FilteredZipCode filteredZipCode)
        {
            base.AddObject("FilteredZipCodes", filteredZipCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueComplaints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueComplaints(IssueComplaint issueComplaint)
        {
            base.AddObject("IssueComplaints", issueComplaint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueDispositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueDispositions(IssueDisposition issueDisposition)
        {
            base.AddObject("IssueDispositions", issueDisposition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueReplyCommentComplaints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueReplyCommentComplaints(IssueReplyCommentComplaint issueReplyCommentComplaint)
        {
            base.AddObject("IssueReplyCommentComplaints", issueReplyCommentComplaint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueReplyComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueReplyComments(IssueReplyComment issueReplyComment)
        {
            base.AddObject("IssueReplyComments", issueReplyComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueReplyComplaints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueReplyComplaints(IssueReplyComplaint issueReplyComplaint)
        {
            base.AddObject("IssueReplyComplaints", issueReplyComplaint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueReplyDispositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueReplyDispositions(IssueReplyDisposition issueReplyDisposition)
        {
            base.AddObject("IssueReplyDispositions", issueReplyDisposition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProfileComplaints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfileComplaints(ProfileComplaint profileComplaint)
        {
            base.AddObject("ProfileComplaints", profileComplaint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Replys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReplys(Reply reply)
        {
            base.AddObject("Replys", reply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Restrictions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRestrictions(Restriction restriction)
        {
            base.AddObject("Restrictions", restriction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RolePermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRolePermissions(RolePermission rolePermission)
        {
            base.AddObject("RolePermissions", rolePermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Timezones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimezones(Timezone timezone)
        {
            base.AddObject("Timezones", timezone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WhoIsOnlines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWhoIsOnlines(WhoIsOnline whoIsOnline)
        {
            base.AddObject("WhoIsOnlines", whoIsOnline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BoardViewedStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoardViewedStates(BoardViewedState boardViewedState)
        {
            base.AddObject("BoardViewedStates", boardViewedState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Issues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssues(Issue issue)
        {
            base.AddObject("Issues", issue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueReplys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueReplys(IssueReply issueReply)
        {
            base.AddObject("IssueReplys", issueReply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Friends EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFriends(Friend friend)
        {
            base.AddObject("Friends", friend);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuthorityVerifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthorityVerifications(AuthorityVerification authorityVerification)
        {
            base.AddObject("AuthorityVerifications", authorityVerification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhotoAlbums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotoAlbums(PhotoAlbum photoAlbum)
        {
            base.AddObject("PhotoAlbums", photoAlbum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhotoComplaints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotoComplaints(PhotoComplaint photoComplaint)
        {
            base.AddObject("PhotoComplaints", photoComplaint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Fans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFans(Fan fan)
        {
            base.AddObject("Fans", fan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivacyGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivacyGroups(PrivacyGroup privacyGroup)
        {
            base.AddObject("PrivacyGroups", privacyGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivacySettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivacySettings(PrivacySetting privacySetting)
        {
            base.AddObject("PrivacySettings", privacySetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPrivacyGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPrivacyGroups(UserPrivacyGroup userPrivacyGroup)
        {
            base.AddObject("UserPrivacyGroups", userPrivacyGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPrivacySettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPrivacySettings(UserPrivacySetting userPrivacySetting)
        {
            base.AddObject("UserPrivacySettings", userPrivacySetting);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="AuditBoard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditBoard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditBoard object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="boardId">Initial value of the BoardId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="updatedByUserId">Initial value of the UpdatedByUserId property.</param>
        public static AuditBoard CreateAuditBoard(global::System.Int32 id, global::System.Int32 boardId, global::System.String message, global::System.DateTime dateTimeStamp, global::System.Int32 updatedByUserId)
        {
            AuditBoard auditBoard = new AuditBoard();
            auditBoard.Id = id;
            auditBoard.BoardId = boardId;
            auditBoard.Message = message;
            auditBoard.DateTimeStamp = dateTimeStamp;
            auditBoard.UpdatedByUserId = updatedByUserId;
            return auditBoard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardId
        {
            get
            {
                return _BoardId;
            }
            set
            {
                OnBoardIdChanging(value);
                ReportPropertyChanging("BoardId");
                _BoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardId");
                OnBoardIdChanged();
            }
        }
        private global::System.Int32 _BoardId;
        partial void OnBoardIdChanging(global::System.Int32 value);
        partial void OnBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnUpdatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditBoard_Board", "Board")]
        public Board Board
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_AuditBoard_Board", "Board").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_AuditBoard_Board", "Board").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Board> BoardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_AuditBoard_Board", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Board>("HaveAVoice.Models.FK_AuditBoard_Board", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditBoard_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditBoard_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditBoard_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditBoard_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_AuditBoard_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="AuditBoardReply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditBoardReply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditBoardReply object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="boardReplyId">Initial value of the BoardReplyId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="updatedByUserId">Initial value of the UpdatedByUserId property.</param>
        public static AuditBoardReply CreateAuditBoardReply(global::System.Int32 id, global::System.Int32 boardReplyId, global::System.String message, global::System.DateTime dateTimeStamp, global::System.Int32 updatedByUserId)
        {
            AuditBoardReply auditBoardReply = new AuditBoardReply();
            auditBoardReply.Id = id;
            auditBoardReply.BoardReplyId = boardReplyId;
            auditBoardReply.Message = message;
            auditBoardReply.DateTimeStamp = dateTimeStamp;
            auditBoardReply.UpdatedByUserId = updatedByUserId;
            return auditBoardReply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardReplyId
        {
            get
            {
                return _BoardReplyId;
            }
            set
            {
                OnBoardReplyIdChanging(value);
                ReportPropertyChanging("BoardReplyId");
                _BoardReplyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardReplyId");
                OnBoardReplyIdChanged();
            }
        }
        private global::System.Int32 _BoardReplyId;
        partial void OnBoardReplyIdChanging(global::System.Int32 value);
        partial void OnBoardReplyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnUpdatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditBoardReplies_BoardReply", "BoardReply")]
        public BoardReply BoardReply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardReply>("HaveAVoice.Models.FK_AuditBoardReplies_BoardReply", "BoardReply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardReply>("HaveAVoice.Models.FK_AuditBoardReplies_BoardReply", "BoardReply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoardReply> BoardReplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardReply>("HaveAVoice.Models.FK_AuditBoardReplies_BoardReply", "BoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoardReply>("HaveAVoice.Models.FK_AuditBoardReplies_BoardReply", "BoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditBoardReplies_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditBoardReplies_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditBoardReplies_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditBoardReplies_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_AuditBoardReplies_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="AuditIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditIssue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="updatedByUserId">Initial value of the UpdatedByUserId property.</param>
        public static AuditIssue CreateAuditIssue(global::System.Int32 id, global::System.Int32 issueId, global::System.String title, global::System.String description, global::System.DateTime dateTimeStamp, global::System.Int32 updatedByUserId)
        {
            AuditIssue auditIssue = new AuditIssue();
            auditIssue.Id = id;
            auditIssue.IssueId = issueId;
            auditIssue.Title = title;
            auditIssue.Description = description;
            auditIssue.DateTimeStamp = dateTimeStamp;
            auditIssue.UpdatedByUserId = updatedByUserId;
            return auditIssue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Int32 _IssueId;
        partial void OnIssueIdChanging(global::System.Int32 value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnUpdatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssues_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssues_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssues_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssues_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_AuditIssues_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssues_Issues", "Issue")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_AuditIssues_Issues", "Issue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_AuditIssues_Issues", "Issue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_AuditIssues_Issues", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("HaveAVoice.Models.FK_AuditIssues_Issues", "Issue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="AuditIssueReply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditIssueReply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditIssueReply object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="issueReplyId">Initial value of the IssueReplyId property.</param>
        /// <param name="reply">Initial value of the Reply property.</param>
        /// <param name="disposition">Initial value of the Disposition property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="updatedByUserId">Initial value of the UpdatedByUserId property.</param>
        public static AuditIssueReply CreateAuditIssueReply(global::System.Int32 id, global::System.Int32 issueReplyId, global::System.String reply, global::System.Int32 disposition, global::System.DateTime dateTimeStamp, global::System.Int32 updatedByUserId)
        {
            AuditIssueReply auditIssueReply = new AuditIssueReply();
            auditIssueReply.Id = id;
            auditIssueReply.IssueReplyId = issueReplyId;
            auditIssueReply.Reply = reply;
            auditIssueReply.Disposition = disposition;
            auditIssueReply.DateTimeStamp = dateTimeStamp;
            auditIssueReply.UpdatedByUserId = updatedByUserId;
            return auditIssueReply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReplyId
        {
            get
            {
                return _IssueReplyId;
            }
            set
            {
                OnIssueReplyIdChanging(value);
                ReportPropertyChanging("IssueReplyId");
                _IssueReplyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyId");
                OnIssueReplyIdChanged();
            }
        }
        private global::System.Int32 _IssueReplyId;
        partial void OnIssueReplyIdChanging(global::System.Int32 value);
        partial void OnIssueReplyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reply
        {
            get
            {
                return _Reply;
            }
            set
            {
                OnReplyChanging(value);
                ReportPropertyChanging("Reply");
                _Reply = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reply");
                OnReplyChanged();
            }
        }
        private global::System.String _Reply;
        partial void OnReplyChanging(global::System.String value);
        partial void OnReplyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Disposition
        {
            get
            {
                return _Disposition;
            }
            set
            {
                OnDispositionChanging(value);
                ReportPropertyChanging("Disposition");
                _Disposition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disposition");
                OnDispositionChanged();
            }
        }
        private global::System.Int32 _Disposition;
        partial void OnDispositionChanging(global::System.Int32 value);
        partial void OnDispositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnUpdatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssueReplys_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssueReplys_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssueReplys_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssueReplys_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_AuditIssueReplys_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssueReplys_IssueReplys", "IssueReply")]
        public IssueReply IssueReply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_AuditIssueReplys_IssueReplys", "IssueReply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_AuditIssueReplys_IssueReplys", "IssueReply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueReply> IssueReplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_AuditIssueReplys_IssueReplys", "IssueReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueReply>("HaveAVoice.Models.FK_AuditIssueReplys_IssueReplys", "IssueReply", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="AuditIssueReplyComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditIssueReplyComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditIssueReplyComment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="issueReplyCommentId">Initial value of the IssueReplyCommentId property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="updatedByUserId">Initial value of the UpdatedByUserId property.</param>
        public static AuditIssueReplyComment CreateAuditIssueReplyComment(global::System.Int32 id, global::System.Int32 issueReplyCommentId, global::System.String comment, global::System.DateTime dateTimeStamp, global::System.Int32 updatedByUserId)
        {
            AuditIssueReplyComment auditIssueReplyComment = new AuditIssueReplyComment();
            auditIssueReplyComment.Id = id;
            auditIssueReplyComment.IssueReplyCommentId = issueReplyCommentId;
            auditIssueReplyComment.Comment = comment;
            auditIssueReplyComment.DateTimeStamp = dateTimeStamp;
            auditIssueReplyComment.UpdatedByUserId = updatedByUserId;
            return auditIssueReplyComment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReplyCommentId
        {
            get
            {
                return _IssueReplyCommentId;
            }
            set
            {
                OnIssueReplyCommentIdChanging(value);
                ReportPropertyChanging("IssueReplyCommentId");
                _IssueReplyCommentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyCommentId");
                OnIssueReplyCommentIdChanged();
            }
        }
        private global::System.Int32 _IssueReplyCommentId;
        partial void OnIssueReplyCommentIdChanging(global::System.Int32 value);
        partial void OnIssueReplyCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnUpdatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssueReplyComments_IssueReplyComments", "IssueReplyComment")]
        public IssueReplyComment IssueReplyComment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReplyComment>("HaveAVoice.Models.FK_AuditIssueReplyComments_IssueReplyComments", "IssueReplyComment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReplyComment>("HaveAVoice.Models.FK_AuditIssueReplyComments_IssueReplyComments", "IssueReplyComment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueReplyComment> IssueReplyCommentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReplyComment>("HaveAVoice.Models.FK_AuditIssueReplyComments_IssueReplyComments", "IssueReplyComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueReplyComment>("HaveAVoice.Models.FK_AuditIssueReplyComments_IssueReplyComments", "IssueReplyComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssueReplyComments_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssueReplyComments_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssueReplyComments_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuditIssueReplyComments_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_AuditIssueReplyComments_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="AuthorityVerification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuthorityVerification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuthorityVerification object.
        /// </summary>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        /// <param name="verified">Initial value of the Verified property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        public static AuthorityVerification CreateAuthorityVerification(global::System.String email, global::System.Int32 createdByUserId, global::System.String token, global::System.Boolean verified, global::System.DateTime dateTimeStamp)
        {
            AuthorityVerification authorityVerification = new AuthorityVerification();
            authorityVerification.Email = email;
            authorityVerification.CreatedByUserId = createdByUserId;
            authorityVerification.Token = token;
            authorityVerification.Verified = verified;
            authorityVerification.DateTimeStamp = dateTimeStamp;
            return authorityVerification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Verified
        {
            get
            {
                return _Verified;
            }
            set
            {
                OnVerifiedChanging(value);
                ReportPropertyChanging("Verified");
                _Verified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Verified");
                OnVerifiedChanged();
            }
        }
        private global::System.Boolean _Verified;
        partial void OnVerifiedChanging(global::System.Boolean value);
        partial void OnVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuthorityVerification_Users", "User")]
        public User CreatedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuthorityVerification_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuthorityVerification_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_AuthorityVerification_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_AuthorityVerification_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Board")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Board : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Board object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerUserId">Initial value of the OwnerUserId property.</param>
        /// <param name="postedUserId">Initial value of the PostedUserId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Board CreateBoard(global::System.Int32 id, global::System.Int32 ownerUserId, global::System.Int32 postedUserId, global::System.String message, global::System.DateTime dateTimeStamp, global::System.Boolean deleted)
        {
            Board board = new Board();
            board.Id = id;
            board.OwnerUserId = ownerUserId;
            board.PostedUserId = postedUserId;
            board.Message = message;
            board.DateTimeStamp = dateTimeStamp;
            board.Deleted = deleted;
            return board;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerUserId
        {
            get
            {
                return _OwnerUserId;
            }
            set
            {
                OnOwnerUserIdChanging(value);
                ReportPropertyChanging("OwnerUserId");
                _OwnerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerUserId");
                OnOwnerUserIdChanged();
            }
        }
        private global::System.Int32 _OwnerUserId;
        partial void OnOwnerUserIdChanging(global::System.Int32 value);
        partial void OnOwnerUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostedUserId
        {
            get
            {
                return _PostedUserId;
            }
            set
            {
                OnPostedUserIdChanging(value);
                ReportPropertyChanging("PostedUserId");
                _PostedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedUserId");
                OnPostedUserIdChanged();
            }
        }
        private global::System.Int32 _PostedUserId;
        partial void OnPostedUserIdChanging(global::System.Int32 value);
        partial void OnPostedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDateTimeStamp
        {
            get
            {
                return _UpdatedDateTimeStamp;
            }
            set
            {
                OnUpdatedDateTimeStampChanging(value);
                ReportPropertyChanging("UpdatedDateTimeStamp");
                _UpdatedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDateTimeStamp");
                OnUpdatedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDateTimeStamp;
        partial void OnUpdatedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditBoard_Board", "AuditBoard")]
        public EntityCollection<AuditBoard> AuditBoards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditBoard>("HaveAVoice.Models.FK_AuditBoard_Board", "AuditBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditBoard>("HaveAVoice.Models.FK_AuditBoard_Board", "AuditBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Board_OwnerUserId_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Board_OwnerUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Board_OwnerUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Board_OwnerUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Board_OwnerUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Board_PostedUserId_Users", "User")]
        public User PostedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Board_PostedUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Board_PostedUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> PostedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Board_PostedUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Board_PostedUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_BoardReply_Board", "BoardReply")]
        public EntityCollection<BoardReply> BoardReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardReply>("HaveAVoice.Models.FK_BoardReply_Board", "BoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardReply>("HaveAVoice.Models.FK_BoardReply_Board", "BoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_BoardViewedState_Board", "BoardViewedState")]
        public EntityCollection<BoardViewedState> BoardViewedStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardViewedState>("HaveAVoice.Models.FK_BoardViewedState_Board", "BoardViewedState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardViewedState>("HaveAVoice.Models.FK_BoardViewedState_Board", "BoardViewedState", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="BoardReply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BoardReply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BoardReply object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="boardId">Initial value of the BoardId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static BoardReply CreateBoardReply(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 boardId, global::System.String message, global::System.DateTime dateTimeStamp, global::System.Boolean deleted)
        {
            BoardReply boardReply = new BoardReply();
            boardReply.Id = id;
            boardReply.UserId = userId;
            boardReply.BoardId = boardId;
            boardReply.Message = message;
            boardReply.DateTimeStamp = dateTimeStamp;
            boardReply.Deleted = deleted;
            return boardReply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardId
        {
            get
            {
                return _BoardId;
            }
            set
            {
                OnBoardIdChanging(value);
                ReportPropertyChanging("BoardId");
                _BoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardId");
                OnBoardIdChanged();
            }
        }
        private global::System.Int32 _BoardId;
        partial void OnBoardIdChanging(global::System.Int32 value);
        partial void OnBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDateTimeStamp
        {
            get
            {
                return _UpdatedDateTimeStamp;
            }
            set
            {
                OnUpdatedDateTimeStampChanging(value);
                ReportPropertyChanging("UpdatedDateTimeStamp");
                _UpdatedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDateTimeStamp");
                OnUpdatedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDateTimeStamp;
        partial void OnUpdatedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditBoardReplies_BoardReply", "AuditBoardReply")]
        public EntityCollection<AuditBoardReply> AuditBoardReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditBoardReply>("HaveAVoice.Models.FK_AuditBoardReplies_BoardReply", "AuditBoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditBoardReply>("HaveAVoice.Models.FK_AuditBoardReplies_BoardReply", "AuditBoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_BoardReply_Board", "Board")]
        public Board Board
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_BoardReply_Board", "Board").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_BoardReply_Board", "Board").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Board> BoardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_BoardReply_Board", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Board>("HaveAVoice.Models.FK_BoardReply_Board", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_BoardReply_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_BoardReply_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_BoardReply_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_BoardReply_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_BoardReply_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="BoardViewedState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BoardViewedState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BoardViewedState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="boardId">Initial value of the BoardId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="viewed">Initial value of the Viewed property.</param>
        public static BoardViewedState CreateBoardViewedState(global::System.Int32 id, global::System.Int32 boardId, global::System.Int32 userId, global::System.Boolean viewed)
        {
            BoardViewedState boardViewedState = new BoardViewedState();
            boardViewedState.Id = id;
            boardViewedState.BoardId = boardId;
            boardViewedState.UserId = userId;
            boardViewedState.Viewed = viewed;
            return boardViewedState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardId
        {
            get
            {
                return _BoardId;
            }
            set
            {
                OnBoardIdChanging(value);
                ReportPropertyChanging("BoardId");
                _BoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardId");
                OnBoardIdChanged();
            }
        }
        private global::System.Int32 _BoardId;
        partial void OnBoardIdChanging(global::System.Int32 value);
        partial void OnBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Viewed
        {
            get
            {
                return _Viewed;
            }
            set
            {
                OnViewedChanging(value);
                ReportPropertyChanging("Viewed");
                _Viewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Viewed");
                OnViewedChanged();
            }
        }
        private global::System.Boolean _Viewed;
        partial void OnViewedChanging(global::System.Boolean value);
        partial void OnViewedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_BoardViewedState_Board", "Board")]
        public Board Board
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_BoardViewedState_Board", "Board").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_BoardViewedState_Board", "Board").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Board> BoardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("HaveAVoice.Models.FK_BoardViewedState_Board", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Board>("HaveAVoice.Models.FK_BoardViewedState_Board", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_BoardViewedState_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_BoardViewedState_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_BoardViewedState_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_BoardViewedState_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_BoardViewedState_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="ErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="exception">Initial value of the Exception property.</param>
        /// <param name="innerException">Initial value of the InnerException property.</param>
        /// <param name="stackTrace">Initial value of the StackTrace property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="details">Initial value of the Details property.</param>
        public static ErrorLog CreateErrorLog(global::System.Int32 id, global::System.String exception, global::System.String innerException, global::System.String stackTrace, global::System.Int32 userId, global::System.DateTime dateTimeStamp, global::System.String details)
        {
            ErrorLog errorLog = new ErrorLog();
            errorLog.Id = id;
            errorLog.Exception = exception;
            errorLog.InnerException = innerException;
            errorLog.StackTrace = stackTrace;
            errorLog.UserId = userId;
            errorLog.DateTimeStamp = dateTimeStamp;
            errorLog.Details = details;
            return errorLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InnerException
        {
            get
            {
                return _InnerException;
            }
            set
            {
                OnInnerExceptionChanging(value);
                ReportPropertyChanging("InnerException");
                _InnerException = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InnerException");
                OnInnerExceptionChanged();
            }
        }
        private global::System.String _InnerException;
        partial void OnInnerExceptionChanging(global::System.String value);
        partial void OnInnerExceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StackTrace
        {
            get
            {
                return _StackTrace;
            }
            set
            {
                OnStackTraceChanging(value);
                ReportPropertyChanging("StackTrace");
                _StackTrace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StackTrace");
                OnStackTraceChanged();
            }
        }
        private global::System.String _StackTrace;
        partial void OnStackTraceChanging(global::System.String value);
        partial void OnStackTraceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_ErrorLog_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ErrorLog_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ErrorLog_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ErrorLog_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_ErrorLog_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="information">Initial value of the Information property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime date, global::System.String information, global::System.Boolean deleted)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.UserId = userId;
            @event.Date = date;
            @event.Information = information;
            @event.Deleted = deleted;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Information
        {
            get
            {
                return _Information;
            }
            set
            {
                OnInformationChanging(value);
                ReportPropertyChanging("Information");
                _Information = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Information");
                OnInformationChanged();
            }
        }
        private global::System.String _Information;
        partial void OnInformationChanging(global::System.String value);
        partial void OnInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedUserId
        {
            get
            {
                return _DeletedUserId;
            }
            set
            {
                OnDeletedUserIdChanging(value);
                ReportPropertyChanging("DeletedUserId");
                _DeletedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedUserId");
                OnDeletedUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedUserId;
        partial void OnDeletedUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Events_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Events_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Events_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Events_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Events_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Fan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fan object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sourceUserId">Initial value of the SourceUserId property.</param>
        /// <param name="fanUserId">Initial value of the FanUserId property.</param>
        public static Fan CreateFan(global::System.Int32 id, global::System.Int32 sourceUserId, global::System.Int32 fanUserId)
        {
            Fan fan = new Fan();
            fan.Id = id;
            fan.SourceUserId = sourceUserId;
            fan.FanUserId = fanUserId;
            return fan;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceUserId
        {
            get
            {
                return _SourceUserId;
            }
            set
            {
                OnSourceUserIdChanging(value);
                ReportPropertyChanging("SourceUserId");
                _SourceUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceUserId");
                OnSourceUserIdChanged();
            }
        }
        private global::System.Int32 _SourceUserId;
        partial void OnSourceUserIdChanging(global::System.Int32 value);
        partial void OnSourceUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FanUserId
        {
            get
            {
                return _FanUserId;
            }
            set
            {
                OnFanUserIdChanging(value);
                ReportPropertyChanging("FanUserId");
                _FanUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FanUserId");
                OnFanUserIdChanged();
            }
        }
        private global::System.Int32 _FanUserId;
        partial void OnFanUserIdChanging(global::System.Int32 value);
        partial void OnFanUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Fans_FanUserId_Users", "User")]
        public User FanUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Fans_FanUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Fans_FanUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FanUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Fans_FanUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Fans_FanUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Fans_SourceUserId_Users", "User")]
        public User SourceUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Fans_SourceUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Fans_SourceUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SourceUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Fans_SourceUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Fans_SourceUserId_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Feedback")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feedback : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feedback object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Feedback CreateFeedback(global::System.Int32 id, global::System.String text, global::System.DateTime dateTimeStamp, global::System.Int32 userId)
        {
            Feedback feedback = new Feedback();
            feedback.Id = id;
            feedback.Text = text;
            feedback.DateTimeStamp = dateTimeStamp;
            feedback.UserId = userId;
            return feedback;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Feedback_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Feedback_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Feedback_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Feedback_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Feedback_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="FilteredCityState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilteredCityState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilteredCityState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static FilteredCityState CreateFilteredCityState(global::System.Int32 id, global::System.Int32 userId, global::System.String city, global::System.String state)
        {
            FilteredCityState filteredCityState = new FilteredCityState();
            filteredCityState.Id = id;
            filteredCityState.UserId = userId;
            filteredCityState.City = city;
            filteredCityState.State = state;
            return filteredCityState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_FilteredCityState_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_FilteredCityState_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_FilteredCityState_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_FilteredCityState_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_FilteredCityState_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="FilteredZipCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilteredZipCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilteredZipCode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        public static FilteredZipCode CreateFilteredZipCode(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 zipCode)
        {
            FilteredZipCode filteredZipCode = new FilteredZipCode();
            filteredZipCode.Id = id;
            filteredZipCode.UserId = userId;
            filteredZipCode.ZipCode = zipCode;
            return filteredZipCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.Int32 _ZipCode;
        partial void OnZipCodeChanging(global::System.Int32 value);
        partial void OnZipCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_FilteredZipCode_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_FilteredZipCode_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_FilteredZipCode_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_FilteredZipCode_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_FilteredZipCode_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Friend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Friend : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Friend object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="friendUserId">Initial value of the FriendUserId property.</param>
        /// <param name="sourceUserId">Initial value of the SourceUserId property.</param>
        /// <param name="approved">Initial value of the Approved property.</param>
        public static Friend CreateFriend(global::System.Int32 id, global::System.Int32 friendUserId, global::System.Int32 sourceUserId, global::System.Boolean approved)
        {
            Friend friend = new Friend();
            friend.Id = id;
            friend.FriendUserId = friendUserId;
            friend.SourceUserId = sourceUserId;
            friend.Approved = approved;
            return friend;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FriendUserId
        {
            get
            {
                return _FriendUserId;
            }
            set
            {
                OnFriendUserIdChanging(value);
                ReportPropertyChanging("FriendUserId");
                _FriendUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FriendUserId");
                OnFriendUserIdChanged();
            }
        }
        private global::System.Int32 _FriendUserId;
        partial void OnFriendUserIdChanging(global::System.Int32 value);
        partial void OnFriendUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceUserId
        {
            get
            {
                return _SourceUserId;
            }
            set
            {
                OnSourceUserIdChanging(value);
                ReportPropertyChanging("SourceUserId");
                _SourceUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceUserId");
                OnSourceUserIdChanged();
            }
        }
        private global::System.Int32 _SourceUserId;
        partial void OnSourceUserIdChanging(global::System.Int32 value);
        partial void OnSourceUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private global::System.Boolean _Approved;
        partial void OnApprovedChanging(global::System.Boolean value);
        partial void OnApprovedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Friends_FriendUserId_Users", "User")]
        public User FriendUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Friends_FriendUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Friends_FriendUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FriendUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Friends_FriendUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Friends_FriendUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Friends_SourceUserId_Users", "User")]
        public User SourceUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Friends_SourceUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Friends_SourceUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SourceUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Friends_SourceUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Friends_SourceUserId_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Issue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Issue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Issue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Issue CreateIssue(global::System.Int32 id, global::System.String title, global::System.String description, global::System.String city, global::System.String state, global::System.DateTime dateTimeStamp, global::System.Int32 userId, global::System.Boolean deleted)
        {
            Issue issue = new Issue();
            issue.Id = id;
            issue.Title = title;
            issue.Description = description;
            issue.City = city;
            issue.State = state;
            issue.DateTimeStamp = dateTimeStamp;
            issue.UserId = userId;
            issue.Deleted = deleted;
            return issue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private Nullable<global::System.Int32> _Zip;
        partial void OnZipChanging(Nullable<global::System.Int32> value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDateTimeStamp
        {
            get
            {
                return _UpdatedDateTimeStamp;
            }
            set
            {
                OnUpdatedDateTimeStampChanging(value);
                ReportPropertyChanging("UpdatedDateTimeStamp");
                _UpdatedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDateTimeStamp");
                OnUpdatedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDateTimeStamp;
        partial void OnUpdatedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssues_Issues", "AuditIssue")]
        public EntityCollection<AuditIssue> AuditIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditIssue>("HaveAVoice.Models.FK_AuditIssues_Issues", "AuditIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditIssue>("HaveAVoice.Models.FK_AuditIssues_Issues", "AuditIssue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueComplaints_Issues", "IssueComplaint")]
        public EntityCollection<IssueComplaint> IssueComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueComplaint>("HaveAVoice.Models.FK_IssueComplaints_Issues", "IssueComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueComplaint>("HaveAVoice.Models.FK_IssueComplaints_Issues", "IssueComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueDisposition_Issues", "IssueDisposition")]
        public EntityCollection<IssueDisposition> IssueDispositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueDisposition>("HaveAVoice.Models.FK_IssueDisposition_Issues", "IssueDisposition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueDisposition>("HaveAVoice.Models.FK_IssueDisposition_Issues", "IssueDisposition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Issues_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Issues_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Issues_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Issues_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Issues_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplys_Issues", "IssueReply")]
        public EntityCollection<IssueReply> IssueReplys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReply>("HaveAVoice.Models.FK_IssueReplys_Issues", "IssueReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReply>("HaveAVoice.Models.FK_IssueReplys_Issues", "IssueReply", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="IssueComplaint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueComplaint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueComplaint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="filedByUserId">Initial value of the FiledByUserId property.</param>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="complaint">Initial value of the Complaint property.</param>
        public static IssueComplaint CreateIssueComplaint(global::System.Int32 id, global::System.Int32 filedByUserId, global::System.Int32 issueId, global::System.String complaint)
        {
            IssueComplaint issueComplaint = new IssueComplaint();
            issueComplaint.Id = id;
            issueComplaint.FiledByUserId = filedByUserId;
            issueComplaint.IssueId = issueId;
            issueComplaint.Complaint = complaint;
            return issueComplaint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiledByUserId
        {
            get
            {
                return _FiledByUserId;
            }
            set
            {
                OnFiledByUserIdChanging(value);
                ReportPropertyChanging("FiledByUserId");
                _FiledByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiledByUserId");
                OnFiledByUserIdChanged();
            }
        }
        private global::System.Int32 _FiledByUserId;
        partial void OnFiledByUserIdChanging(global::System.Int32 value);
        partial void OnFiledByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Int32 _IssueId;
        partial void OnIssueIdChanging(global::System.Int32 value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Complaint
        {
            get
            {
                return _Complaint;
            }
            set
            {
                OnComplaintChanging(value);
                ReportPropertyChanging("Complaint");
                _Complaint = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Complaint");
                OnComplaintChanged();
            }
        }
        private global::System.String _Complaint;
        partial void OnComplaintChanging(global::System.String value);
        partial void OnComplaintChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueComplaints_FiledByUserId_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueComplaints_FiledByUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueComplaints_FiledByUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueComplaints_FiledByUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_IssueComplaints_FiledByUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueComplaints_Issues", "Issue")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueComplaints_Issues", "Issue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueComplaints_Issues", "Issue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueComplaints_Issues", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("HaveAVoice.Models.FK_IssueComplaints_Issues", "Issue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="IssueDisposition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueDisposition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueDisposition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="disposition">Initial value of the Disposition property.</param>
        public static IssueDisposition CreateIssueDisposition(global::System.Int32 id, global::System.Int32 issueId, global::System.Int32 userId, global::System.Int32 disposition)
        {
            IssueDisposition issueDisposition = new IssueDisposition();
            issueDisposition.Id = id;
            issueDisposition.IssueId = issueId;
            issueDisposition.UserId = userId;
            issueDisposition.Disposition = disposition;
            return issueDisposition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Int32 _IssueId;
        partial void OnIssueIdChanging(global::System.Int32 value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Disposition
        {
            get
            {
                return _Disposition;
            }
            set
            {
                OnDispositionChanging(value);
                ReportPropertyChanging("Disposition");
                _Disposition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disposition");
                OnDispositionChanged();
            }
        }
        private global::System.Int32 _Disposition;
        partial void OnDispositionChanging(global::System.Int32 value);
        partial void OnDispositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueDisposition_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueDisposition_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueDisposition_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueDisposition_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_IssueDisposition_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueDisposition_Issues", "Issue")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueDisposition_Issues", "Issue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueDisposition_Issues", "Issue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueDisposition_Issues", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("HaveAVoice.Models.FK_IssueDisposition_Issues", "Issue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="IssueReply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueReply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueReply object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="issueId">Initial value of the IssueId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="reply">Initial value of the Reply property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="disposition">Initial value of the Disposition property.</param>
        /// <param name="anonymous">Initial value of the Anonymous property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static IssueReply CreateIssueReply(global::System.Int32 id, global::System.Int32 issueId, global::System.Int32 userId, global::System.String reply, global::System.String city, global::System.String state, global::System.Int32 disposition, global::System.Boolean anonymous, global::System.DateTime dateTimeStamp, global::System.Boolean deleted)
        {
            IssueReply issueReply = new IssueReply();
            issueReply.Id = id;
            issueReply.IssueId = issueId;
            issueReply.UserId = userId;
            issueReply.Reply = reply;
            issueReply.City = city;
            issueReply.State = state;
            issueReply.Disposition = disposition;
            issueReply.Anonymous = anonymous;
            issueReply.DateTimeStamp = dateTimeStamp;
            issueReply.Deleted = deleted;
            return issueReply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueId
        {
            get
            {
                return _IssueId;
            }
            set
            {
                OnIssueIdChanging(value);
                ReportPropertyChanging("IssueId");
                _IssueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueId");
                OnIssueIdChanged();
            }
        }
        private global::System.Int32 _IssueId;
        partial void OnIssueIdChanging(global::System.Int32 value);
        partial void OnIssueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Reply
        {
            get
            {
                return _Reply;
            }
            set
            {
                OnReplyChanging(value);
                ReportPropertyChanging("Reply");
                _Reply = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Reply");
                OnReplyChanged();
            }
        }
        private global::System.String _Reply;
        partial void OnReplyChanging(global::System.String value);
        partial void OnReplyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private Nullable<global::System.Int32> _Zip;
        partial void OnZipChanging(Nullable<global::System.Int32> value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Disposition
        {
            get
            {
                return _Disposition;
            }
            set
            {
                OnDispositionChanging(value);
                ReportPropertyChanging("Disposition");
                _Disposition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disposition");
                OnDispositionChanged();
            }
        }
        private global::System.Int32 _Disposition;
        partial void OnDispositionChanging(global::System.Int32 value);
        partial void OnDispositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Anonymous
        {
            get
            {
                return _Anonymous;
            }
            set
            {
                OnAnonymousChanging(value);
                ReportPropertyChanging("Anonymous");
                _Anonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Anonymous");
                OnAnonymousChanged();
            }
        }
        private global::System.Boolean _Anonymous;
        partial void OnAnonymousChanging(global::System.Boolean value);
        partial void OnAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedUserId
        {
            get
            {
                return _UpdatedUserId;
            }
            set
            {
                OnUpdatedUserIdChanging(value);
                ReportPropertyChanging("UpdatedUserId");
                _UpdatedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedUserId");
                OnUpdatedUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedUserId;
        partial void OnUpdatedUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDateTimeStamp
        {
            get
            {
                return _UpdatedDateTimeStamp;
            }
            set
            {
                OnUpdatedDateTimeStampChanging(value);
                ReportPropertyChanging("UpdatedDateTimeStamp");
                _UpdatedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDateTimeStamp");
                OnUpdatedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDateTimeStamp;
        partial void OnUpdatedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssueReplys_IssueReplys", "AuditIssueReply")]
        public EntityCollection<AuditIssueReply> AuditIssueReplys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditIssueReply>("HaveAVoice.Models.FK_AuditIssueReplys_IssueReplys", "AuditIssueReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditIssueReply>("HaveAVoice.Models.FK_AuditIssueReplys_IssueReplys", "AuditIssueReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyComments_IssueReplys", "IssueReplyComment")]
        public EntityCollection<IssueReplyComment> IssueReplyComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReplyComment>("HaveAVoice.Models.FK_IssueReplyComments_IssueReplys", "IssueReplyComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReplyComment>("HaveAVoice.Models.FK_IssueReplyComments_IssueReplys", "IssueReplyComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyComplaints_IssueReplys", "IssueReplyComplaint")]
        public EntityCollection<IssueReplyComplaint> IssueReplyComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReplyComplaint>("HaveAVoice.Models.FK_IssueReplyComplaints_IssueReplys", "IssueReplyComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReplyComplaint>("HaveAVoice.Models.FK_IssueReplyComplaints_IssueReplys", "IssueReplyComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyDisposition_IssueReplys", "IssueReplyDisposition")]
        public EntityCollection<IssueReplyDisposition> IssueReplyDispositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReplyDisposition>("HaveAVoice.Models.FK_IssueReplyDisposition_IssueReplys", "IssueReplyDisposition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReplyDisposition>("HaveAVoice.Models.FK_IssueReplyDisposition_IssueReplys", "IssueReplyDisposition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplys_Issues", "Issue")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueReplys_Issues", "Issue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueReplys_Issues", "Issue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("HaveAVoice.Models.FK_IssueReplys_Issues", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("HaveAVoice.Models.FK_IssueReplys_Issues", "Issue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplys_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplys_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplys_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplys_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_IssueReplys_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="IssueReplyComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueReplyComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueReplyComment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="issueReplyId">Initial value of the IssueReplyId property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static IssueReplyComment CreateIssueReplyComment(global::System.Int32 id, global::System.Int32 issueReplyId, global::System.String comment, global::System.DateTime dateTimeStamp, global::System.Int32 userId, global::System.Boolean deleted)
        {
            IssueReplyComment issueReplyComment = new IssueReplyComment();
            issueReplyComment.Id = id;
            issueReplyComment.IssueReplyId = issueReplyId;
            issueReplyComment.Comment = comment;
            issueReplyComment.DateTimeStamp = dateTimeStamp;
            issueReplyComment.UserId = userId;
            issueReplyComment.Deleted = deleted;
            return issueReplyComment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReplyId
        {
            get
            {
                return _IssueReplyId;
            }
            set
            {
                OnIssueReplyIdChanging(value);
                ReportPropertyChanging("IssueReplyId");
                _IssueReplyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyId");
                OnIssueReplyIdChanged();
            }
        }
        private global::System.Int32 _IssueReplyId;
        partial void OnIssueReplyIdChanging(global::System.Int32 value);
        partial void OnIssueReplyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDateTimeStamp
        {
            get
            {
                return _UpdatedDateTimeStamp;
            }
            set
            {
                OnUpdatedDateTimeStampChanging(value);
                ReportPropertyChanging("UpdatedDateTimeStamp");
                _UpdatedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDateTimeStamp");
                OnUpdatedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDateTimeStamp;
        partial void OnUpdatedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssueReplyComments_IssueReplyComments", "AuditIssueReplyComment")]
        public EntityCollection<AuditIssueReplyComment> AuditIssueReplyComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditIssueReplyComment>("HaveAVoice.Models.FK_AuditIssueReplyComments_IssueReplyComments", "AuditIssueReplyComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditIssueReplyComment>("HaveAVoice.Models.FK_AuditIssueReplyComments_IssueReplyComments", "AuditIssueReplyComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyCommentComplaint")]
        public EntityCollection<IssueReplyCommentComplaint> IssueReplyCommentComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReplyCommentComplaint>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyCommentComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReplyCommentComplaint>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyCommentComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyComments_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyComments_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyComments_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyComments_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyComments_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyComments_IssueReplys", "IssueReply")]
        public IssueReply IssueReply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyComments_IssueReplys", "IssueReply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyComments_IssueReplys", "IssueReply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueReply> IssueReplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyComments_IssueReplys", "IssueReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyComments_IssueReplys", "IssueReply", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="IssueReplyCommentComplaint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueReplyCommentComplaint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueReplyCommentComplaint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="filedByUserId">Initial value of the FiledByUserId property.</param>
        /// <param name="issueReplyCommentId">Initial value of the IssueReplyCommentId property.</param>
        /// <param name="complaint">Initial value of the Complaint property.</param>
        public static IssueReplyCommentComplaint CreateIssueReplyCommentComplaint(global::System.Int32 id, global::System.Int32 filedByUserId, global::System.Int32 issueReplyCommentId, global::System.String complaint)
        {
            IssueReplyCommentComplaint issueReplyCommentComplaint = new IssueReplyCommentComplaint();
            issueReplyCommentComplaint.Id = id;
            issueReplyCommentComplaint.FiledByUserId = filedByUserId;
            issueReplyCommentComplaint.IssueReplyCommentId = issueReplyCommentId;
            issueReplyCommentComplaint.Complaint = complaint;
            return issueReplyCommentComplaint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiledByUserId
        {
            get
            {
                return _FiledByUserId;
            }
            set
            {
                OnFiledByUserIdChanging(value);
                ReportPropertyChanging("FiledByUserId");
                _FiledByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiledByUserId");
                OnFiledByUserIdChanged();
            }
        }
        private global::System.Int32 _FiledByUserId;
        partial void OnFiledByUserIdChanging(global::System.Int32 value);
        partial void OnFiledByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReplyCommentId
        {
            get
            {
                return _IssueReplyCommentId;
            }
            set
            {
                OnIssueReplyCommentIdChanging(value);
                ReportPropertyChanging("IssueReplyCommentId");
                _IssueReplyCommentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyCommentId");
                OnIssueReplyCommentIdChanged();
            }
        }
        private global::System.Int32 _IssueReplyCommentId;
        partial void OnIssueReplyCommentIdChanging(global::System.Int32 value);
        partial void OnIssueReplyCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Complaint
        {
            get
            {
                return _Complaint;
            }
            set
            {
                OnComplaintChanging(value);
                ReportPropertyChanging("Complaint");
                _Complaint = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Complaint");
                OnComplaintChanged();
            }
        }
        private global::System.String _Complaint;
        partial void OnComplaintChanging(global::System.String value);
        partial void OnComplaintChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyCommentComplaints_FiledByUserId_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_FiledByUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_FiledByUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_FiledByUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_FiledByUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyComment")]
        public IssueReplyComment IssueReplyComment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReplyComment>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyComment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReplyComment>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyComment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueReplyComment> IssueReplyCommentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReplyComment>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueReplyComment>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_IssueReplyComments", "IssueReplyComment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="IssueReplyComplaint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueReplyComplaint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueReplyComplaint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="filedByUserId">Initial value of the FiledByUserId property.</param>
        /// <param name="issueReplyId">Initial value of the IssueReplyId property.</param>
        /// <param name="complaint">Initial value of the Complaint property.</param>
        public static IssueReplyComplaint CreateIssueReplyComplaint(global::System.Int32 id, global::System.Int32 filedByUserId, global::System.Int32 issueReplyId, global::System.String complaint)
        {
            IssueReplyComplaint issueReplyComplaint = new IssueReplyComplaint();
            issueReplyComplaint.Id = id;
            issueReplyComplaint.FiledByUserId = filedByUserId;
            issueReplyComplaint.IssueReplyId = issueReplyId;
            issueReplyComplaint.Complaint = complaint;
            return issueReplyComplaint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiledByUserId
        {
            get
            {
                return _FiledByUserId;
            }
            set
            {
                OnFiledByUserIdChanging(value);
                ReportPropertyChanging("FiledByUserId");
                _FiledByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiledByUserId");
                OnFiledByUserIdChanged();
            }
        }
        private global::System.Int32 _FiledByUserId;
        partial void OnFiledByUserIdChanging(global::System.Int32 value);
        partial void OnFiledByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReplyId
        {
            get
            {
                return _IssueReplyId;
            }
            set
            {
                OnIssueReplyIdChanging(value);
                ReportPropertyChanging("IssueReplyId");
                _IssueReplyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyId");
                OnIssueReplyIdChanged();
            }
        }
        private global::System.Int32 _IssueReplyId;
        partial void OnIssueReplyIdChanging(global::System.Int32 value);
        partial void OnIssueReplyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Complaint
        {
            get
            {
                return _Complaint;
            }
            set
            {
                OnComplaintChanging(value);
                ReportPropertyChanging("Complaint");
                _Complaint = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Complaint");
                OnComplaintChanged();
            }
        }
        private global::System.String _Complaint;
        partial void OnComplaintChanging(global::System.String value);
        partial void OnComplaintChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyComplaints_FiledByUserId_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyComplaints_FiledByUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyComplaints_FiledByUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyComplaints_FiledByUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyComplaints_FiledByUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyComplaints_IssueReplys", "IssueReply")]
        public IssueReply IssueReply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyComplaints_IssueReplys", "IssueReply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyComplaints_IssueReplys", "IssueReply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueReply> IssueReplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyComplaints_IssueReplys", "IssueReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyComplaints_IssueReplys", "IssueReply", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="IssueReplyDisposition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueReplyDisposition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueReplyDisposition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="issueReplyId">Initial value of the IssueReplyId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="disposition">Initial value of the Disposition property.</param>
        public static IssueReplyDisposition CreateIssueReplyDisposition(global::System.Int32 id, global::System.Int32 issueReplyId, global::System.Int32 userId, global::System.Int32 disposition)
        {
            IssueReplyDisposition issueReplyDisposition = new IssueReplyDisposition();
            issueReplyDisposition.Id = id;
            issueReplyDisposition.IssueReplyId = issueReplyId;
            issueReplyDisposition.UserId = userId;
            issueReplyDisposition.Disposition = disposition;
            return issueReplyDisposition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReplyId
        {
            get
            {
                return _IssueReplyId;
            }
            set
            {
                OnIssueReplyIdChanging(value);
                ReportPropertyChanging("IssueReplyId");
                _IssueReplyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyId");
                OnIssueReplyIdChanged();
            }
        }
        private global::System.Int32 _IssueReplyId;
        partial void OnIssueReplyIdChanging(global::System.Int32 value);
        partial void OnIssueReplyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Disposition
        {
            get
            {
                return _Disposition;
            }
            set
            {
                OnDispositionChanging(value);
                ReportPropertyChanging("Disposition");
                _Disposition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disposition");
                OnDispositionChanged();
            }
        }
        private global::System.Int32 _Disposition;
        partial void OnDispositionChanging(global::System.Int32 value);
        partial void OnDispositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyDisposition_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyDisposition_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyDisposition_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyDisposition_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_IssueReplyDisposition_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyDisposition_IssueReplys", "IssueReply")]
        public IssueReply IssueReply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyDisposition_IssueReplys", "IssueReply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyDisposition_IssueReplys", "IssueReply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueReply> IssueReplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyDisposition_IssueReplys", "IssueReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueReply>("HaveAVoice.Models.FK_IssueReplyDisposition_IssueReplys", "IssueReply", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="toViewed">Initial value of the ToViewed property.</param>
        /// <param name="fromViewed">Initial value of the FromViewed property.</param>
        /// <param name="toDeleted">Initial value of the ToDeleted property.</param>
        /// <param name="fromDeleted">Initial value of the FromDeleted property.</param>
        /// <param name="repliedTo">Initial value of the RepliedTo property.</param>
        public static Message CreateMessage(global::System.Int32 id, global::System.Int32 toUserId, global::System.Int32 fromUserId, global::System.String subject, global::System.String body, global::System.DateTime dateTimeStamp, global::System.Boolean toViewed, global::System.Boolean fromViewed, global::System.Boolean toDeleted, global::System.Boolean fromDeleted, global::System.Boolean repliedTo)
        {
            Message message = new Message();
            message.Id = id;
            message.ToUserId = toUserId;
            message.FromUserId = fromUserId;
            message.Subject = subject;
            message.Body = body;
            message.DateTimeStamp = dateTimeStamp;
            message.ToViewed = toViewed;
            message.FromViewed = fromViewed;
            message.ToDeleted = toDeleted;
            message.FromDeleted = fromDeleted;
            message.RepliedTo = repliedTo;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int32 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int32 value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ToViewed
        {
            get
            {
                return _ToViewed;
            }
            set
            {
                OnToViewedChanging(value);
                ReportPropertyChanging("ToViewed");
                _ToViewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToViewed");
                OnToViewedChanged();
            }
        }
        private global::System.Boolean _ToViewed;
        partial void OnToViewedChanging(global::System.Boolean value);
        partial void OnToViewedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FromViewed
        {
            get
            {
                return _FromViewed;
            }
            set
            {
                OnFromViewedChanging(value);
                ReportPropertyChanging("FromViewed");
                _FromViewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromViewed");
                OnFromViewedChanged();
            }
        }
        private global::System.Boolean _FromViewed;
        partial void OnFromViewedChanging(global::System.Boolean value);
        partial void OnFromViewedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ToDeleted
        {
            get
            {
                return _ToDeleted;
            }
            set
            {
                OnToDeletedChanging(value);
                ReportPropertyChanging("ToDeleted");
                _ToDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDeleted");
                OnToDeletedChanged();
            }
        }
        private global::System.Boolean _ToDeleted;
        partial void OnToDeletedChanging(global::System.Boolean value);
        partial void OnToDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FromDeleted
        {
            get
            {
                return _FromDeleted;
            }
            set
            {
                OnFromDeletedChanging(value);
                ReportPropertyChanging("FromDeleted");
                _FromDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDeleted");
                OnFromDeletedChanged();
            }
        }
        private global::System.Boolean _FromDeleted;
        partial void OnFromDeletedChanging(global::System.Boolean value);
        partial void OnFromDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RepliedTo
        {
            get
            {
                return _RepliedTo;
            }
            set
            {
                OnRepliedToChanging(value);
                ReportPropertyChanging("RepliedTo");
                _RepliedTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepliedTo");
                OnRepliedToChanged();
            }
        }
        private global::System.Boolean _RepliedTo;
        partial void OnRepliedToChanging(global::System.Boolean value);
        partial void OnRepliedToChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Message_Users_FromUserId", "User")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Message_Users_FromUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Message_Users_FromUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Message_Users_FromUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Message_Users_FromUserId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Message_Users_ToUserId", "User")]
        public User ToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Message_Users_ToUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Message_Users_ToUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ToUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Message_Users_ToUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Message_Users_ToUserId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Replys_Messages", "Reply")]
        public EntityCollection<Reply> Replys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reply>("HaveAVoice.Models.FK_Replys_Messages", "Reply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reply>("HaveAVoice.Models.FK_Replys_Messages", "Reply", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Permission CreatePermission(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Boolean deleted)
        {
            Permission permission = new Permission();
            permission.Id = id;
            permission.Name = name;
            permission.Description = description;
            permission.Deleted = deleted;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EditByUserId
        {
            get
            {
                return _EditByUserId;
            }
            set
            {
                OnEditByUserIdChanging(value);
                ReportPropertyChanging("EditByUserId");
                _EditByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditByUserId");
                OnEditByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EditByUserId;
        partial void OnEditByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnEditByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_RolePermissions_Permissions", "RolePermission")]
        public EntityCollection<RolePermission> RolePermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolePermission>("HaveAVoice.Models.FK_RolePermissions_Permissions", "RolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolePermission>("HaveAVoice.Models.FK_RolePermissions_Permissions", "RolePermission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uploadedByUserId">Initial value of the UploadedByUserId property.</param>
        /// <param name="photoAlbumId">Initial value of the PhotoAlbumId property.</param>
        /// <param name="imageName">Initial value of the ImageName property.</param>
        /// <param name="profilePicture">Initial value of the ProfilePicture property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="albumCover">Initial value of the AlbumCover property.</param>
        public static Photo CreatePhoto(global::System.Int32 id, global::System.Int32 uploadedByUserId, global::System.Int32 photoAlbumId, global::System.String imageName, global::System.Boolean profilePicture, global::System.DateTime dateTimeStamp, global::System.Boolean albumCover)
        {
            Photo photo = new Photo();
            photo.Id = id;
            photo.UploadedByUserId = uploadedByUserId;
            photo.PhotoAlbumId = photoAlbumId;
            photo.ImageName = imageName;
            photo.ProfilePicture = profilePicture;
            photo.DateTimeStamp = dateTimeStamp;
            photo.AlbumCover = albumCover;
            return photo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UploadedByUserId
        {
            get
            {
                return _UploadedByUserId;
            }
            set
            {
                OnUploadedByUserIdChanging(value);
                ReportPropertyChanging("UploadedByUserId");
                _UploadedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedByUserId");
                OnUploadedByUserIdChanged();
            }
        }
        private global::System.Int32 _UploadedByUserId;
        partial void OnUploadedByUserIdChanging(global::System.Int32 value);
        partial void OnUploadedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoAlbumId
        {
            get
            {
                return _PhotoAlbumId;
            }
            set
            {
                OnPhotoAlbumIdChanging(value);
                ReportPropertyChanging("PhotoAlbumId");
                _PhotoAlbumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoAlbumId");
                OnPhotoAlbumIdChanged();
            }
        }
        private global::System.Int32 _PhotoAlbumId;
        partial void OnPhotoAlbumIdChanging(global::System.Int32 value);
        partial void OnPhotoAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ProfilePicture
        {
            get
            {
                return _ProfilePicture;
            }
            set
            {
                OnProfilePictureChanging(value);
                ReportPropertyChanging("ProfilePicture");
                _ProfilePicture = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfilePicture");
                OnProfilePictureChanged();
            }
        }
        private global::System.Boolean _ProfilePicture;
        partial void OnProfilePictureChanging(global::System.Boolean value);
        partial void OnProfilePictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AlbumCover
        {
            get
            {
                return _AlbumCover;
            }
            set
            {
                OnAlbumCoverChanging(value);
                ReportPropertyChanging("AlbumCover");
                _AlbumCover = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumCover");
                OnAlbumCoverChanged();
            }
        }
        private global::System.Boolean _AlbumCover;
        partial void OnAlbumCoverChanging(global::System.Boolean value);
        partial void OnAlbumCoverChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Photos_PhotoAlbum", "PhotoAlbum")]
        public PhotoAlbum PhotoAlbum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("HaveAVoice.Models.FK_Photos_PhotoAlbum", "PhotoAlbum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("HaveAVoice.Models.FK_Photos_PhotoAlbum", "PhotoAlbum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhotoAlbum> PhotoAlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("HaveAVoice.Models.FK_Photos_PhotoAlbum", "PhotoAlbum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhotoAlbum>("HaveAVoice.Models.FK_Photos_PhotoAlbum", "PhotoAlbum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Photos_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Photos_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Photos_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Photos_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Photos_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_PhotoComplaints_Photos", "PhotoComplaint")]
        public EntityCollection<PhotoComplaint> PhotoComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhotoComplaint>("HaveAVoice.Models.FK_PhotoComplaints_Photos", "PhotoComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhotoComplaint>("HaveAVoice.Models.FK_PhotoComplaints_Photos", "PhotoComplaint", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="PhotoAlbum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhotoAlbum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhotoAlbum object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static PhotoAlbum CreatePhotoAlbum(global::System.Int32 id, global::System.String name, global::System.Int32 createdByUserId)
        {
            PhotoAlbum photoAlbum = new PhotoAlbum();
            photoAlbum.Id = id;
            photoAlbum.Name = name;
            photoAlbum.CreatedByUserId = createdByUserId;
            return photoAlbum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_PhotoAlbum_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PhotoAlbum_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PhotoAlbum_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PhotoAlbum_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_PhotoAlbum_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Photos_PhotoAlbum", "Photo")]
        public EntityCollection<Photo> Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("HaveAVoice.Models.FK_Photos_PhotoAlbum", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("HaveAVoice.Models.FK_Photos_PhotoAlbum", "Photo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="PhotoComplaint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhotoComplaint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhotoComplaint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="filedByUserId">Initial value of the FiledByUserId property.</param>
        /// <param name="photoId">Initial value of the PhotoId property.</param>
        /// <param name="complaint">Initial value of the Complaint property.</param>
        public static PhotoComplaint CreatePhotoComplaint(global::System.Int32 id, global::System.Int32 filedByUserId, global::System.Int32 photoId, global::System.String complaint)
        {
            PhotoComplaint photoComplaint = new PhotoComplaint();
            photoComplaint.Id = id;
            photoComplaint.FiledByUserId = filedByUserId;
            photoComplaint.PhotoId = photoId;
            photoComplaint.Complaint = complaint;
            return photoComplaint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiledByUserId
        {
            get
            {
                return _FiledByUserId;
            }
            set
            {
                OnFiledByUserIdChanging(value);
                ReportPropertyChanging("FiledByUserId");
                _FiledByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiledByUserId");
                OnFiledByUserIdChanged();
            }
        }
        private global::System.Int32 _FiledByUserId;
        partial void OnFiledByUserIdChanging(global::System.Int32 value);
        partial void OnFiledByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoId
        {
            get
            {
                return _PhotoId;
            }
            set
            {
                OnPhotoIdChanging(value);
                ReportPropertyChanging("PhotoId");
                _PhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoId");
                OnPhotoIdChanged();
            }
        }
        private global::System.Int32 _PhotoId;
        partial void OnPhotoIdChanging(global::System.Int32 value);
        partial void OnPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Complaint
        {
            get
            {
                return _Complaint;
            }
            set
            {
                OnComplaintChanging(value);
                ReportPropertyChanging("Complaint");
                _Complaint = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Complaint");
                OnComplaintChanged();
            }
        }
        private global::System.String _Complaint;
        partial void OnComplaintChanging(global::System.String value);
        partial void OnComplaintChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_PhotoComplaints_Photos", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("HaveAVoice.Models.FK_PhotoComplaints_Photos", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("HaveAVoice.Models.FK_PhotoComplaints_Photos", "Photo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("HaveAVoice.Models.FK_PhotoComplaints_Photos", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("HaveAVoice.Models.FK_PhotoComplaints_Photos", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_PhotoComplaints_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PhotoComplaints_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PhotoComplaints_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PhotoComplaints_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_PhotoComplaints_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="PrivacyGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivacyGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivacyGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PrivacyGroup CreatePrivacyGroup(global::System.Int32 id, global::System.String name, global::System.String description)
        {
            PrivacyGroup privacyGroup = new PrivacyGroup();
            privacyGroup.Id = id;
            privacyGroup.Name = name;
            privacyGroup.Description = description;
            return privacyGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DefaultGroup
        {
            get
            {
                return _DefaultGroup;
            }
            set
            {
                OnDefaultGroupChanging(value);
                ReportPropertyChanging("DefaultGroup");
                _DefaultGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultGroup");
                OnDefaultGroupChanged();
            }
        }
        private Nullable<global::System.Boolean> _DefaultGroup;
        partial void OnDefaultGroupChanging(Nullable<global::System.Boolean> value);
        partial void OnDefaultGroupChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserPrivacyGroups_PrivacyGroup1", "UserPrivacyGroup")]
        public EntityCollection<UserPrivacyGroup> UserPrivacyGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPrivacyGroup>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacyGroup1", "UserPrivacyGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPrivacyGroup>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacyGroup1", "UserPrivacyGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="PrivacySetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivacySetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivacySetting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PrivacySetting CreatePrivacySetting(global::System.Int32 id, global::System.Int32 createdByUserId, global::System.String name, global::System.String description)
        {
            PrivacySetting privacySetting = new PrivacySetting();
            privacySetting.Id = id;
            privacySetting.CreatedByUserId = createdByUserId;
            privacySetting.Name = name;
            privacySetting.Description = description;
            return privacySetting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_PrivacySettings_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PrivacySettings_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PrivacySettings_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_PrivacySettings_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_PrivacySettings_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserPrivacyGroups_PrivacySettings", "UserPrivacyGroup")]
        public EntityCollection<UserPrivacyGroup> UserPrivacyGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPrivacyGroup>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacySettings", "UserPrivacyGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPrivacyGroup>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacySettings", "UserPrivacyGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="ProfileComplaint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProfileComplaint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProfileComplaint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="filedByUserId">Initial value of the FiledByUserId property.</param>
        /// <param name="towardUserId">Initial value of the TowardUserId property.</param>
        /// <param name="complaint">Initial value of the Complaint property.</param>
        public static ProfileComplaint CreateProfileComplaint(global::System.Int32 id, global::System.Int32 filedByUserId, global::System.Int32 towardUserId, global::System.String complaint)
        {
            ProfileComplaint profileComplaint = new ProfileComplaint();
            profileComplaint.Id = id;
            profileComplaint.FiledByUserId = filedByUserId;
            profileComplaint.TowardUserId = towardUserId;
            profileComplaint.Complaint = complaint;
            return profileComplaint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiledByUserId
        {
            get
            {
                return _FiledByUserId;
            }
            set
            {
                OnFiledByUserIdChanging(value);
                ReportPropertyChanging("FiledByUserId");
                _FiledByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiledByUserId");
                OnFiledByUserIdChanged();
            }
        }
        private global::System.Int32 _FiledByUserId;
        partial void OnFiledByUserIdChanging(global::System.Int32 value);
        partial void OnFiledByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TowardUserId
        {
            get
            {
                return _TowardUserId;
            }
            set
            {
                OnTowardUserIdChanging(value);
                ReportPropertyChanging("TowardUserId");
                _TowardUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TowardUserId");
                OnTowardUserIdChanged();
            }
        }
        private global::System.Int32 _TowardUserId;
        partial void OnTowardUserIdChanging(global::System.Int32 value);
        partial void OnTowardUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Complaint
        {
            get
            {
                return _Complaint;
            }
            set
            {
                OnComplaintChanging(value);
                ReportPropertyChanging("Complaint");
                _Complaint = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Complaint");
                OnComplaintChanged();
            }
        }
        private global::System.String _Complaint;
        partial void OnComplaintChanging(global::System.String value);
        partial void OnComplaintChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_ProfileComplaints_FiledByUserId_Users", "User")]
        public User FiledByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ProfileComplaints_FiledByUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ProfileComplaints_FiledByUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FiledByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ProfileComplaints_FiledByUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_ProfileComplaints_FiledByUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_ProfileComplaints_TowardUserId_Users", "User")]
        public User TowardsUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ProfileComplaints_TowardUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ProfileComplaints_TowardUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> TowardsUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_ProfileComplaints_TowardUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_ProfileComplaints_TowardUserId_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Reply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reply object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="replyUserId">Initial value of the ReplyUserId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        public static Reply CreateReply(global::System.Int32 id, global::System.Int32 replyUserId, global::System.Int32 messageId, global::System.String body, global::System.DateTime dateTimeStamp)
        {
            Reply reply = new Reply();
            reply.Id = id;
            reply.ReplyUserId = replyUserId;
            reply.MessageId = messageId;
            reply.Body = body;
            reply.DateTimeStamp = dateTimeStamp;
            return reply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReplyUserId
        {
            get
            {
                return _ReplyUserId;
            }
            set
            {
                OnReplyUserIdChanging(value);
                ReportPropertyChanging("ReplyUserId");
                _ReplyUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReplyUserId");
                OnReplyUserIdChanged();
            }
        }
        private global::System.Int32 _ReplyUserId;
        partial void OnReplyUserIdChanging(global::System.Int32 value);
        partial void OnReplyUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                OnMessageIdChanging(value);
                ReportPropertyChanging("MessageId");
                _MessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageId");
                OnMessageIdChanged();
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Replys_Messages", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("HaveAVoice.Models.FK_Replys_Messages", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("HaveAVoice.Models.FK_Replys_Messages", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("HaveAVoice.Models.FK_Replys_Messages", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("HaveAVoice.Models.FK_Replys_Messages", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Replys_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Replys_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Replys_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Replys_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Replys_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Restriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Restriction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Restriction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="issuePostsWithinTimeLimit">Initial value of the IssuePostsWithinTimeLimit property.</param>
        /// <param name="issuePostsTimeLimit">Initial value of the IssuePostsTimeLimit property.</param>
        /// <param name="issuePostsWaitTimeBeforePostSeconds">Initial value of the IssuePostsWaitTimeBeforePostSeconds property.</param>
        /// <param name="issueReportsBeforeLockout">Initial value of the IssueReportsBeforeLockout property.</param>
        /// <param name="issueReplyPostsWithinTimeLimit">Initial value of the IssueReplyPostsWithinTimeLimit property.</param>
        /// <param name="issueReplyPostsTimeLimit">Initial value of the IssueReplyPostsTimeLimit property.</param>
        /// <param name="issueReplyPostsWaitTimeBeforePostSeconds">Initial value of the IssueReplyPostsWaitTimeBeforePostSeconds property.</param>
        /// <param name="issueReplyCommentPostsWithinTimeLimit">Initial value of the IssueReplyCommentPostsWithinTimeLimit property.</param>
        /// <param name="issueReplyCommentPostsTimeLimit">Initial value of the IssueReplyCommentPostsTimeLimit property.</param>
        /// <param name="issueReplyCommentPostsWaitTimeBeforePostSeconds">Initial value of the IssueReplyCommentPostsWaitTimeBeforePostSeconds property.</param>
        /// <param name="mergeIssueRequestWithinTimeLimit">Initial value of the MergeIssueRequestWithinTimeLimit property.</param>
        /// <param name="mergeIssueRequestTimeLimit">Initial value of the MergeIssueRequestTimeLimit property.</param>
        /// <param name="mergeIssueRequestWaitTimeBeforePostSeconds">Initial value of the MergeIssueRequestWaitTimeBeforePostSeconds property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Restriction CreateRestriction(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Int32 issuePostsWithinTimeLimit, global::System.Int64 issuePostsTimeLimit, global::System.Int64 issuePostsWaitTimeBeforePostSeconds, global::System.Int32 issueReportsBeforeLockout, global::System.Int32 issueReplyPostsWithinTimeLimit, global::System.Int64 issueReplyPostsTimeLimit, global::System.Int64 issueReplyPostsWaitTimeBeforePostSeconds, global::System.Int32 issueReplyCommentPostsWithinTimeLimit, global::System.Int64 issueReplyCommentPostsTimeLimit, global::System.Int64 issueReplyCommentPostsWaitTimeBeforePostSeconds, global::System.Int32 mergeIssueRequestWithinTimeLimit, global::System.Int64 mergeIssueRequestTimeLimit, global::System.Int64 mergeIssueRequestWaitTimeBeforePostSeconds, global::System.Int32 createdByUserId, global::System.Boolean deleted)
        {
            Restriction restriction = new Restriction();
            restriction.Id = id;
            restriction.Name = name;
            restriction.Description = description;
            restriction.IssuePostsWithinTimeLimit = issuePostsWithinTimeLimit;
            restriction.IssuePostsTimeLimit = issuePostsTimeLimit;
            restriction.IssuePostsWaitTimeBeforePostSeconds = issuePostsWaitTimeBeforePostSeconds;
            restriction.IssueReportsBeforeLockout = issueReportsBeforeLockout;
            restriction.IssueReplyPostsWithinTimeLimit = issueReplyPostsWithinTimeLimit;
            restriction.IssueReplyPostsTimeLimit = issueReplyPostsTimeLimit;
            restriction.IssueReplyPostsWaitTimeBeforePostSeconds = issueReplyPostsWaitTimeBeforePostSeconds;
            restriction.IssueReplyCommentPostsWithinTimeLimit = issueReplyCommentPostsWithinTimeLimit;
            restriction.IssueReplyCommentPostsTimeLimit = issueReplyCommentPostsTimeLimit;
            restriction.IssueReplyCommentPostsWaitTimeBeforePostSeconds = issueReplyCommentPostsWaitTimeBeforePostSeconds;
            restriction.MergeIssueRequestWithinTimeLimit = mergeIssueRequestWithinTimeLimit;
            restriction.MergeIssueRequestTimeLimit = mergeIssueRequestTimeLimit;
            restriction.MergeIssueRequestWaitTimeBeforePostSeconds = mergeIssueRequestWaitTimeBeforePostSeconds;
            restriction.CreatedByUserId = createdByUserId;
            restriction.Deleted = deleted;
            return restriction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssuePostsWithinTimeLimit
        {
            get
            {
                return _IssuePostsWithinTimeLimit;
            }
            set
            {
                OnIssuePostsWithinTimeLimitChanging(value);
                ReportPropertyChanging("IssuePostsWithinTimeLimit");
                _IssuePostsWithinTimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuePostsWithinTimeLimit");
                OnIssuePostsWithinTimeLimitChanged();
            }
        }
        private global::System.Int32 _IssuePostsWithinTimeLimit;
        partial void OnIssuePostsWithinTimeLimitChanging(global::System.Int32 value);
        partial void OnIssuePostsWithinTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuePostsTimeLimit
        {
            get
            {
                return _IssuePostsTimeLimit;
            }
            set
            {
                OnIssuePostsTimeLimitChanging(value);
                ReportPropertyChanging("IssuePostsTimeLimit");
                _IssuePostsTimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuePostsTimeLimit");
                OnIssuePostsTimeLimitChanged();
            }
        }
        private global::System.Int64 _IssuePostsTimeLimit;
        partial void OnIssuePostsTimeLimitChanging(global::System.Int64 value);
        partial void OnIssuePostsTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssuePostsWaitTimeBeforePostSeconds
        {
            get
            {
                return _IssuePostsWaitTimeBeforePostSeconds;
            }
            set
            {
                OnIssuePostsWaitTimeBeforePostSecondsChanging(value);
                ReportPropertyChanging("IssuePostsWaitTimeBeforePostSeconds");
                _IssuePostsWaitTimeBeforePostSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuePostsWaitTimeBeforePostSeconds");
                OnIssuePostsWaitTimeBeforePostSecondsChanged();
            }
        }
        private global::System.Int64 _IssuePostsWaitTimeBeforePostSeconds;
        partial void OnIssuePostsWaitTimeBeforePostSecondsChanging(global::System.Int64 value);
        partial void OnIssuePostsWaitTimeBeforePostSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReportsBeforeLockout
        {
            get
            {
                return _IssueReportsBeforeLockout;
            }
            set
            {
                OnIssueReportsBeforeLockoutChanging(value);
                ReportPropertyChanging("IssueReportsBeforeLockout");
                _IssueReportsBeforeLockout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReportsBeforeLockout");
                OnIssueReportsBeforeLockoutChanged();
            }
        }
        private global::System.Int32 _IssueReportsBeforeLockout;
        partial void OnIssueReportsBeforeLockoutChanging(global::System.Int32 value);
        partial void OnIssueReportsBeforeLockoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReplyPostsWithinTimeLimit
        {
            get
            {
                return _IssueReplyPostsWithinTimeLimit;
            }
            set
            {
                OnIssueReplyPostsWithinTimeLimitChanging(value);
                ReportPropertyChanging("IssueReplyPostsWithinTimeLimit");
                _IssueReplyPostsWithinTimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyPostsWithinTimeLimit");
                OnIssueReplyPostsWithinTimeLimitChanged();
            }
        }
        private global::System.Int32 _IssueReplyPostsWithinTimeLimit;
        partial void OnIssueReplyPostsWithinTimeLimitChanging(global::System.Int32 value);
        partial void OnIssueReplyPostsWithinTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssueReplyPostsTimeLimit
        {
            get
            {
                return _IssueReplyPostsTimeLimit;
            }
            set
            {
                OnIssueReplyPostsTimeLimitChanging(value);
                ReportPropertyChanging("IssueReplyPostsTimeLimit");
                _IssueReplyPostsTimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyPostsTimeLimit");
                OnIssueReplyPostsTimeLimitChanged();
            }
        }
        private global::System.Int64 _IssueReplyPostsTimeLimit;
        partial void OnIssueReplyPostsTimeLimitChanging(global::System.Int64 value);
        partial void OnIssueReplyPostsTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssueReplyPostsWaitTimeBeforePostSeconds
        {
            get
            {
                return _IssueReplyPostsWaitTimeBeforePostSeconds;
            }
            set
            {
                OnIssueReplyPostsWaitTimeBeforePostSecondsChanging(value);
                ReportPropertyChanging("IssueReplyPostsWaitTimeBeforePostSeconds");
                _IssueReplyPostsWaitTimeBeforePostSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyPostsWaitTimeBeforePostSeconds");
                OnIssueReplyPostsWaitTimeBeforePostSecondsChanged();
            }
        }
        private global::System.Int64 _IssueReplyPostsWaitTimeBeforePostSeconds;
        partial void OnIssueReplyPostsWaitTimeBeforePostSecondsChanging(global::System.Int64 value);
        partial void OnIssueReplyPostsWaitTimeBeforePostSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssueReplyCommentPostsWithinTimeLimit
        {
            get
            {
                return _IssueReplyCommentPostsWithinTimeLimit;
            }
            set
            {
                OnIssueReplyCommentPostsWithinTimeLimitChanging(value);
                ReportPropertyChanging("IssueReplyCommentPostsWithinTimeLimit");
                _IssueReplyCommentPostsWithinTimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyCommentPostsWithinTimeLimit");
                OnIssueReplyCommentPostsWithinTimeLimitChanged();
            }
        }
        private global::System.Int32 _IssueReplyCommentPostsWithinTimeLimit;
        partial void OnIssueReplyCommentPostsWithinTimeLimitChanging(global::System.Int32 value);
        partial void OnIssueReplyCommentPostsWithinTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssueReplyCommentPostsTimeLimit
        {
            get
            {
                return _IssueReplyCommentPostsTimeLimit;
            }
            set
            {
                OnIssueReplyCommentPostsTimeLimitChanging(value);
                ReportPropertyChanging("IssueReplyCommentPostsTimeLimit");
                _IssueReplyCommentPostsTimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyCommentPostsTimeLimit");
                OnIssueReplyCommentPostsTimeLimitChanged();
            }
        }
        private global::System.Int64 _IssueReplyCommentPostsTimeLimit;
        partial void OnIssueReplyCommentPostsTimeLimitChanging(global::System.Int64 value);
        partial void OnIssueReplyCommentPostsTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IssueReplyCommentPostsWaitTimeBeforePostSeconds
        {
            get
            {
                return _IssueReplyCommentPostsWaitTimeBeforePostSeconds;
            }
            set
            {
                OnIssueReplyCommentPostsWaitTimeBeforePostSecondsChanging(value);
                ReportPropertyChanging("IssueReplyCommentPostsWaitTimeBeforePostSeconds");
                _IssueReplyCommentPostsWaitTimeBeforePostSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueReplyCommentPostsWaitTimeBeforePostSeconds");
                OnIssueReplyCommentPostsWaitTimeBeforePostSecondsChanged();
            }
        }
        private global::System.Int64 _IssueReplyCommentPostsWaitTimeBeforePostSeconds;
        partial void OnIssueReplyCommentPostsWaitTimeBeforePostSecondsChanging(global::System.Int64 value);
        partial void OnIssueReplyCommentPostsWaitTimeBeforePostSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MergeIssueRequestWithinTimeLimit
        {
            get
            {
                return _MergeIssueRequestWithinTimeLimit;
            }
            set
            {
                OnMergeIssueRequestWithinTimeLimitChanging(value);
                ReportPropertyChanging("MergeIssueRequestWithinTimeLimit");
                _MergeIssueRequestWithinTimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MergeIssueRequestWithinTimeLimit");
                OnMergeIssueRequestWithinTimeLimitChanged();
            }
        }
        private global::System.Int32 _MergeIssueRequestWithinTimeLimit;
        partial void OnMergeIssueRequestWithinTimeLimitChanging(global::System.Int32 value);
        partial void OnMergeIssueRequestWithinTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MergeIssueRequestTimeLimit
        {
            get
            {
                return _MergeIssueRequestTimeLimit;
            }
            set
            {
                OnMergeIssueRequestTimeLimitChanging(value);
                ReportPropertyChanging("MergeIssueRequestTimeLimit");
                _MergeIssueRequestTimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MergeIssueRequestTimeLimit");
                OnMergeIssueRequestTimeLimitChanged();
            }
        }
        private global::System.Int64 _MergeIssueRequestTimeLimit;
        partial void OnMergeIssueRequestTimeLimitChanging(global::System.Int64 value);
        partial void OnMergeIssueRequestTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MergeIssueRequestWaitTimeBeforePostSeconds
        {
            get
            {
                return _MergeIssueRequestWaitTimeBeforePostSeconds;
            }
            set
            {
                OnMergeIssueRequestWaitTimeBeforePostSecondsChanging(value);
                ReportPropertyChanging("MergeIssueRequestWaitTimeBeforePostSeconds");
                _MergeIssueRequestWaitTimeBeforePostSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MergeIssueRequestWaitTimeBeforePostSeconds");
                OnMergeIssueRequestWaitTimeBeforePostSecondsChanged();
            }
        }
        private global::System.Int64 _MergeIssueRequestWaitTimeBeforePostSeconds;
        partial void OnMergeIssueRequestWaitTimeBeforePostSecondsChanging(global::System.Int64 value);
        partial void OnMergeIssueRequestWaitTimeBeforePostSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EditedByUserId
        {
            get
            {
                return _EditedByUserId;
            }
            set
            {
                OnEditedByUserIdChanging(value);
                ReportPropertyChanging("EditedByUserId");
                _EditedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedByUserId");
                OnEditedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EditedByUserId;
        partial void OnEditedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnEditedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EditedDateTimeStamp
        {
            get
            {
                return _EditedDateTimeStamp;
            }
            set
            {
                OnEditedDateTimeStampChanging(value);
                ReportPropertyChanging("EditedDateTimeStamp");
                _EditedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedDateTimeStamp");
                OnEditedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _EditedDateTimeStamp;
        partial void OnEditedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnEditedDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedDateTimeStamp
        {
            get
            {
                return _DeletedDateTimeStamp;
            }
            set
            {
                OnDeletedDateTimeStampChanging(value);
                ReportPropertyChanging("DeletedDateTimeStamp");
                _DeletedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDateTimeStamp");
                OnDeletedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedDateTimeStamp;
        partial void OnDeletedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedDateTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Restrictions_Users_CreatedByUserId", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Restrictions_Users_CreatedByUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Restrictions_Users_CreatedByUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_Restrictions_Users_CreatedByUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_Restrictions_Users_CreatedByUserId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Roles_Restrictions", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("HaveAVoice.Models.FK_Roles_Restrictions", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("HaveAVoice.Models.FK_Roles_Restrictions", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="defaultRole">Initial value of the DefaultRole property.</param>
        /// <param name="restrictionId">Initial value of the RestrictionId property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Boolean defaultRole, global::System.Int32 restrictionId, global::System.Boolean deleted)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            role.Description = description;
            role.DefaultRole = defaultRole;
            role.RestrictionId = restrictionId;
            role.Deleted = deleted;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DefaultRole
        {
            get
            {
                return _DefaultRole;
            }
            set
            {
                OnDefaultRoleChanging(value);
                ReportPropertyChanging("DefaultRole");
                _DefaultRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultRole");
                OnDefaultRoleChanged();
            }
        }
        private global::System.Boolean _DefaultRole;
        partial void OnDefaultRoleChanging(global::System.Boolean value);
        partial void OnDefaultRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RestrictionId
        {
            get
            {
                return _RestrictionId;
            }
            set
            {
                OnRestrictionIdChanging(value);
                ReportPropertyChanging("RestrictionId");
                _RestrictionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestrictionId");
                OnRestrictionIdChanged();
            }
        }
        private global::System.Int32 _RestrictionId;
        partial void OnRestrictionIdChanging(global::System.Int32 value);
        partial void OnRestrictionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EditedByUserId
        {
            get
            {
                return _EditedByUserId;
            }
            set
            {
                OnEditedByUserIdChanging(value);
                ReportPropertyChanging("EditedByUserId");
                _EditedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedByUserId");
                OnEditedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EditedByUserId;
        partial void OnEditedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnEditedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Roles_Restrictions", "Restriction")]
        public Restriction Restriction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restriction>("HaveAVoice.Models.FK_Roles_Restrictions", "Restriction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restriction>("HaveAVoice.Models.FK_Roles_Restrictions", "Restriction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Restriction> RestrictionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restriction>("HaveAVoice.Models.FK_Roles_Restrictions", "Restriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Restriction>("HaveAVoice.Models.FK_Roles_Restrictions", "Restriction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_RolePermissions_Roles", "RolePermission")]
        public EntityCollection<RolePermission> RolePermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolePermission>("HaveAVoice.Models.FK_RolePermissions_Roles", "RolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolePermission>("HaveAVoice.Models.FK_RolePermissions_Roles", "RolePermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserRoles_Roles", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("HaveAVoice.Models.FK_UserRoles_Roles", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("HaveAVoice.Models.FK_UserRoles_Roles", "UserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="RolePermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolePermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RolePermission object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="permissionId">Initial value of the PermissionId property.</param>
        public static RolePermission CreateRolePermission(global::System.Int32 id, global::System.Int32 roleId, global::System.Int32 permissionId)
        {
            RolePermission rolePermission = new RolePermission();
            rolePermission.Id = id;
            rolePermission.RoleId = roleId;
            rolePermission.PermissionId = permissionId;
            return rolePermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                OnPermissionIdChanging(value);
                ReportPropertyChanging("PermissionId");
                _PermissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionId");
                OnPermissionIdChanged();
            }
        }
        private global::System.Int32 _PermissionId;
        partial void OnPermissionIdChanging(global::System.Int32 value);
        partial void OnPermissionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_RolePermissions_Permissions", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("HaveAVoice.Models.FK_RolePermissions_Permissions", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("HaveAVoice.Models.FK_RolePermissions_Permissions", "Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("HaveAVoice.Models.FK_RolePermissions_Permissions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("HaveAVoice.Models.FK_RolePermissions_Permissions", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_RolePermissions_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HaveAVoice.Models.FK_RolePermissions_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HaveAVoice.Models.FK_RolePermissions_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HaveAVoice.Models.FK_RolePermissions_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("HaveAVoice.Models.FK_RolePermissions_Roles", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="Timezone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Timezone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Timezone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="region">Initial value of the Region property.</param>
        /// <param name="uTCOffset">Initial value of the UTCOffset property.</param>
        public static Timezone CreateTimezone(global::System.Int32 id, global::System.String region, global::System.Int32 uTCOffset)
        {
            Timezone timezone = new Timezone();
            timezone.Id = id;
            timezone.Region = region;
            timezone.UTCOffset = uTCOffset;
            return timezone;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Region
        {
            get
            {
                return _Region;
            }
            set
            {
                OnRegionChanging(value);
                ReportPropertyChanging("Region");
                _Region = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Region");
                OnRegionChanged();
            }
        }
        private global::System.String _Region;
        partial void OnRegionChanging(global::System.String value);
        partial void OnRegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UTCOffset
        {
            get
            {
                return _UTCOffset;
            }
            set
            {
                OnUTCOffsetChanging(value);
                ReportPropertyChanging("UTCOffset");
                _UTCOffset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UTCOffset");
                OnUTCOffsetChanged();
            }
        }
        private global::System.Int32 _UTCOffset;
        partial void OnUTCOffsetChanging(global::System.Int32 value);
        partial void OnUTCOffsetChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="lastLogin">Initial value of the LastLogin property.</param>
        /// <param name="registrationDate">Initial value of the RegistrationDate property.</param>
        /// <param name="registrationIp">Initial value of the RegistrationIp property.</param>
        /// <param name="newsletter">Initial value of the Newsletter property.</param>
        /// <param name="uTCOffset">Initial value of the UTCOffset property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String email, global::System.String password, global::System.String firstName, global::System.String lastName, global::System.String city, global::System.String state, global::System.DateTime dateOfBirth, global::System.DateTime lastLogin, global::System.DateTime registrationDate, global::System.String registrationIp, global::System.Boolean newsletter, global::System.String uTCOffset)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.Email = email;
            user.Password = password;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.City = city;
            user.State = state;
            user.DateOfBirth = dateOfBirth;
            user.LastLogin = lastLogin;
            user.RegistrationDate = registrationDate;
            user.RegistrationIp = registrationIp;
            user.Newsletter = newsletter;
            user.UTCOffset = uTCOffset;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private global::System.DateTime _LastLogin;
        partial void OnLastLoginChanging(global::System.DateTime value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private global::System.DateTime _RegistrationDate;
        partial void OnRegistrationDateChanging(global::System.DateTime value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegistrationIp
        {
            get
            {
                return _RegistrationIp;
            }
            set
            {
                OnRegistrationIpChanging(value);
                ReportPropertyChanging("RegistrationIp");
                _RegistrationIp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegistrationIp");
                OnRegistrationIpChanged();
            }
        }
        private global::System.String _RegistrationIp;
        partial void OnRegistrationIpChanging(global::System.String value);
        partial void OnRegistrationIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Newsletter
        {
            get
            {
                return _Newsletter;
            }
            set
            {
                OnNewsletterChanging(value);
                ReportPropertyChanging("Newsletter");
                _Newsletter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Newsletter");
                OnNewsletterChanged();
            }
        }
        private global::System.Boolean _Newsletter;
        partial void OnNewsletterChanging(global::System.Boolean value);
        partial void OnNewsletterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UTCOffset
        {
            get
            {
                return _UTCOffset;
            }
            set
            {
                OnUTCOffsetChanging(value);
                ReportPropertyChanging("UTCOffset");
                _UTCOffset = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UTCOffset");
                OnUTCOffsetChanged();
            }
        }
        private global::System.String _UTCOffset;
        partial void OnUTCOffsetChanging(global::System.String value);
        partial void OnUTCOffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AboutMe
        {
            get
            {
                return _AboutMe;
            }
            set
            {
                OnAboutMeChanging(value);
                ReportPropertyChanging("AboutMe");
                _AboutMe = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AboutMe");
                OnAboutMeChanged();
            }
        }
        private global::System.String _AboutMe;
        partial void OnAboutMeChanging(global::System.String value);
        partial void OnAboutMeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CookieHash
        {
            get
            {
                return _CookieHash;
            }
            set
            {
                OnCookieHashChanging(value);
                ReportPropertyChanging("CookieHash");
                _CookieHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CookieHash");
                OnCookieHashChanged();
            }
        }
        private global::System.String _CookieHash;
        partial void OnCookieHashChanging(global::System.String value);
        partial void OnCookieHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CookieCreationDate
        {
            get
            {
                return _CookieCreationDate;
            }
            set
            {
                OnCookieCreationDateChanging(value);
                ReportPropertyChanging("CookieCreationDate");
                _CookieCreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CookieCreationDate");
                OnCookieCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CookieCreationDate;
        partial void OnCookieCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCookieCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivationCode
        {
            get
            {
                return _ActivationCode;
            }
            set
            {
                OnActivationCodeChanging(value);
                ReportPropertyChanging("ActivationCode");
                _ActivationCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActivationCode");
                OnActivationCodeChanged();
            }
        }
        private global::System.String _ActivationCode;
        partial void OnActivationCodeChanging(global::System.String value);
        partial void OnActivationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ForgotPasswordHash
        {
            get
            {
                return _ForgotPasswordHash;
            }
            set
            {
                OnForgotPasswordHashChanging(value);
                ReportPropertyChanging("ForgotPasswordHash");
                _ForgotPasswordHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ForgotPasswordHash");
                OnForgotPasswordHashChanged();
            }
        }
        private global::System.String _ForgotPasswordHash;
        partial void OnForgotPasswordHashChanging(global::System.String value);
        partial void OnForgotPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ForgotPasswordHashDateTimeStamp
        {
            get
            {
                return _ForgotPasswordHashDateTimeStamp;
            }
            set
            {
                OnForgotPasswordHashDateTimeStampChanging(value);
                ReportPropertyChanging("ForgotPasswordHashDateTimeStamp");
                _ForgotPasswordHashDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForgotPasswordHashDateTimeStamp");
                OnForgotPasswordHashDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _ForgotPasswordHashDateTimeStamp;
        partial void OnForgotPasswordHashDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnForgotPasswordHashDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private Nullable<global::System.Int32> _Zip;
        partial void OnZipChanging(Nullable<global::System.Int32> value);
        partial void OnZipChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditBoard_Users", "AuditBoard")]
        public EntityCollection<AuditBoard> AuditBoards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditBoard>("HaveAVoice.Models.FK_AuditBoard_Users", "AuditBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditBoard>("HaveAVoice.Models.FK_AuditBoard_Users", "AuditBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditBoardReplies_Users", "AuditBoardReply")]
        public EntityCollection<AuditBoardReply> AuditBoardReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditBoardReply>("HaveAVoice.Models.FK_AuditBoardReplies_Users", "AuditBoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditBoardReply>("HaveAVoice.Models.FK_AuditBoardReplies_Users", "AuditBoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssueReplyComments_Users", "AuditIssueReplyComment")]
        public EntityCollection<AuditIssueReplyComment> AuditIssueReplyComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditIssueReplyComment>("HaveAVoice.Models.FK_AuditIssueReplyComments_Users", "AuditIssueReplyComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditIssueReplyComment>("HaveAVoice.Models.FK_AuditIssueReplyComments_Users", "AuditIssueReplyComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssueReplys_Users", "AuditIssueReply")]
        public EntityCollection<AuditIssueReply> AuditIssueReplys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditIssueReply>("HaveAVoice.Models.FK_AuditIssueReplys_Users", "AuditIssueReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditIssueReply>("HaveAVoice.Models.FK_AuditIssueReplys_Users", "AuditIssueReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuditIssues_Users", "AuditIssue")]
        public EntityCollection<AuditIssue> AuditIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditIssue>("HaveAVoice.Models.FK_AuditIssues_Users", "AuditIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditIssue>("HaveAVoice.Models.FK_AuditIssues_Users", "AuditIssue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Board_OwnerUserId_Users", "Board")]
        public EntityCollection<Board> Boards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Board>("HaveAVoice.Models.FK_Board_OwnerUserId_Users", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Board>("HaveAVoice.Models.FK_Board_OwnerUserId_Users", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Board_PostedUserId_Users", "Board")]
        public EntityCollection<Board> BoardsPostedTo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Board>("HaveAVoice.Models.FK_Board_PostedUserId_Users", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Board>("HaveAVoice.Models.FK_Board_PostedUserId_Users", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_BoardReply_Users", "BoardReply")]
        public EntityCollection<BoardReply> BoardReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardReply>("HaveAVoice.Models.FK_BoardReply_Users", "BoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardReply>("HaveAVoice.Models.FK_BoardReply_Users", "BoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_ErrorLog_Users", "ErrorLog")]
        public EntityCollection<ErrorLog> ErrorLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ErrorLog>("HaveAVoice.Models.FK_ErrorLog_Users", "ErrorLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ErrorLog>("HaveAVoice.Models.FK_ErrorLog_Users", "ErrorLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Events_Users", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("HaveAVoice.Models.FK_Events_Users", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("HaveAVoice.Models.FK_Events_Users", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Feedback_Users", "Feedback")]
        public EntityCollection<Feedback> Feedbacks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Feedback>("HaveAVoice.Models.FK_Feedback_Users", "Feedback");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Feedback>("HaveAVoice.Models.FK_Feedback_Users", "Feedback", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_FilteredCityState_Users", "FilteredCityState")]
        public EntityCollection<FilteredCityState> FilteredCityStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FilteredCityState>("HaveAVoice.Models.FK_FilteredCityState_Users", "FilteredCityState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FilteredCityState>("HaveAVoice.Models.FK_FilteredCityState_Users", "FilteredCityState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_FilteredZipCode_Users", "FilteredZipCode")]
        public EntityCollection<FilteredZipCode> FilteredZipCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FilteredZipCode>("HaveAVoice.Models.FK_FilteredZipCode_Users", "FilteredZipCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FilteredZipCode>("HaveAVoice.Models.FK_FilteredZipCode_Users", "FilteredZipCode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueComplaints_FiledByUserId_Users", "IssueComplaint")]
        public EntityCollection<IssueComplaint> IssueComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueComplaint>("HaveAVoice.Models.FK_IssueComplaints_FiledByUserId_Users", "IssueComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueComplaint>("HaveAVoice.Models.FK_IssueComplaints_FiledByUserId_Users", "IssueComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueDisposition_Users", "IssueDisposition")]
        public EntityCollection<IssueDisposition> IssueDispositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueDisposition>("HaveAVoice.Models.FK_IssueDisposition_Users", "IssueDisposition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueDisposition>("HaveAVoice.Models.FK_IssueDisposition_Users", "IssueDisposition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyCommentComplaints_FiledByUserId_Users", "IssueReplyCommentComplaint")]
        public EntityCollection<IssueReplyCommentComplaint> IssueReplyCommentComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReplyCommentComplaint>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_FiledByUserId_Users", "IssueReplyCommentComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReplyCommentComplaint>("HaveAVoice.Models.FK_IssueReplyCommentComplaints_FiledByUserId_Users", "IssueReplyCommentComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyComments_Users", "IssueReplyComment")]
        public EntityCollection<IssueReplyComment> IssueReplyComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReplyComment>("HaveAVoice.Models.FK_IssueReplyComments_Users", "IssueReplyComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReplyComment>("HaveAVoice.Models.FK_IssueReplyComments_Users", "IssueReplyComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyComplaints_FiledByUserId_Users", "IssueReplyComplaint")]
        public EntityCollection<IssueReplyComplaint> IssueReplyComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReplyComplaint>("HaveAVoice.Models.FK_IssueReplyComplaints_FiledByUserId_Users", "IssueReplyComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReplyComplaint>("HaveAVoice.Models.FK_IssueReplyComplaints_FiledByUserId_Users", "IssueReplyComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplyDisposition_Users", "IssueReplyDisposition")]
        public EntityCollection<IssueReplyDisposition> IssueReplyDispositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReplyDisposition>("HaveAVoice.Models.FK_IssueReplyDisposition_Users", "IssueReplyDisposition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReplyDisposition>("HaveAVoice.Models.FK_IssueReplyDisposition_Users", "IssueReplyDisposition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Message_Users_FromUserId", "Message")]
        public EntityCollection<Message> MessagesSent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("HaveAVoice.Models.FK_Message_Users_FromUserId", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("HaveAVoice.Models.FK_Message_Users_FromUserId", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Message_Users_ToUserId", "Message")]
        public EntityCollection<Message> MessagesReceived
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("HaveAVoice.Models.FK_Message_Users_ToUserId", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("HaveAVoice.Models.FK_Message_Users_ToUserId", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_ProfileComplaints_FiledByUserId_Users", "ProfileComplaint")]
        public EntityCollection<ProfileComplaint> ProfileComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProfileComplaint>("HaveAVoice.Models.FK_ProfileComplaints_FiledByUserId_Users", "ProfileComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProfileComplaint>("HaveAVoice.Models.FK_ProfileComplaints_FiledByUserId_Users", "ProfileComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_ProfileComplaints_TowardUserId_Users", "ProfileComplaint")]
        public EntityCollection<ProfileComplaint> ProfileComplaints1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProfileComplaint>("HaveAVoice.Models.FK_ProfileComplaints_TowardUserId_Users", "ProfileComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProfileComplaint>("HaveAVoice.Models.FK_ProfileComplaints_TowardUserId_Users", "ProfileComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Replys_User", "Reply")]
        public EntityCollection<Reply> Replys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reply>("HaveAVoice.Models.FK_Replys_User", "Reply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reply>("HaveAVoice.Models.FK_Replys_User", "Reply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Restrictions_Users_CreatedByUserId", "Restriction")]
        public EntityCollection<Restriction> Restrictions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Restriction>("HaveAVoice.Models.FK_Restrictions_Users_CreatedByUserId", "Restriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Restriction>("HaveAVoice.Models.FK_Restrictions_Users_CreatedByUserId", "Restriction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserRoles_Users", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("HaveAVoice.Models.FK_UserRoles_Users", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("HaveAVoice.Models.FK_UserRoles_Users", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_WhoIsOnline_Users", "WhoIsOnline")]
        public EntityCollection<WhoIsOnline> WhoIsOnlines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WhoIsOnline>("HaveAVoice.Models.FK_WhoIsOnline_Users", "WhoIsOnline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WhoIsOnline>("HaveAVoice.Models.FK_WhoIsOnline_Users", "WhoIsOnline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_BoardViewedState_Users", "BoardViewedState")]
        public EntityCollection<BoardViewedState> BoardViewedStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardViewedState>("HaveAVoice.Models.FK_BoardViewedState_Users", "BoardViewedState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardViewedState>("HaveAVoice.Models.FK_BoardViewedState_Users", "BoardViewedState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Issues_Users", "Issue")]
        public EntityCollection<Issue> Issues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Issue>("HaveAVoice.Models.FK_Issues_Users", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Issue>("HaveAVoice.Models.FK_Issues_Users", "Issue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_IssueReplys_Users", "IssueReply")]
        public EntityCollection<IssueReply> IssueReplys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IssueReply>("HaveAVoice.Models.FK_IssueReplys_Users", "IssueReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IssueReply>("HaveAVoice.Models.FK_IssueReplys_Users", "IssueReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Friends_FriendUserId_Users", "Friend")]
        public EntityCollection<Friend> Friends
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("HaveAVoice.Models.FK_Friends_FriendUserId_Users", "Friend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("HaveAVoice.Models.FK_Friends_FriendUserId_Users", "Friend", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Friends_SourceUserId_Users", "Friend")]
        public EntityCollection<Friend> FriendedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("HaveAVoice.Models.FK_Friends_SourceUserId_Users", "Friend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("HaveAVoice.Models.FK_Friends_SourceUserId_Users", "Friend", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_AuthorityVerification_Users", "AuthorityVerification")]
        public EntityCollection<AuthorityVerification> AuthorityVerifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuthorityVerification>("HaveAVoice.Models.FK_AuthorityVerification_Users", "AuthorityVerification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuthorityVerification>("HaveAVoice.Models.FK_AuthorityVerification_Users", "AuthorityVerification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_PhotoAlbum_Users", "PhotoAlbum")]
        public EntityCollection<PhotoAlbum> PhotoAlbums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhotoAlbum>("HaveAVoice.Models.FK_PhotoAlbum_Users", "PhotoAlbum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhotoAlbum>("HaveAVoice.Models.FK_PhotoAlbum_Users", "PhotoAlbum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Photos_Users", "Photo")]
        public EntityCollection<Photo> Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("HaveAVoice.Models.FK_Photos_Users", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("HaveAVoice.Models.FK_Photos_Users", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_PhotoComplaints_Users", "PhotoComplaint")]
        public EntityCollection<PhotoComplaint> PhotoComplaints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhotoComplaint>("HaveAVoice.Models.FK_PhotoComplaints_Users", "PhotoComplaint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhotoComplaint>("HaveAVoice.Models.FK_PhotoComplaints_Users", "PhotoComplaint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Fans_FanUserId_Users", "Fan")]
        public EntityCollection<Fan> Fans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fan>("HaveAVoice.Models.FK_Fans_FanUserId_Users", "Fan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fan>("HaveAVoice.Models.FK_Fans_FanUserId_Users", "Fan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_Fans_SourceUserId_Users", "Fan")]
        public EntityCollection<Fan> Fans1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fan>("HaveAVoice.Models.FK_Fans_SourceUserId_Users", "Fan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fan>("HaveAVoice.Models.FK_Fans_SourceUserId_Users", "Fan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_PrivacySettings_Users", "PrivacySetting")]
        public EntityCollection<PrivacySetting> PrivacySettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivacySetting>("HaveAVoice.Models.FK_PrivacySettings_Users", "PrivacySetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivacySetting>("HaveAVoice.Models.FK_PrivacySettings_Users", "PrivacySetting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserPrivacySettings_Users", "UserPrivacySetting")]
        public EntityCollection<UserPrivacySetting> UserPrivacySettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPrivacySetting>("HaveAVoice.Models.FK_UserPrivacySettings_Users", "UserPrivacySetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPrivacySetting>("HaveAVoice.Models.FK_UserPrivacySettings_Users", "UserPrivacySetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="UserPrivacyGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPrivacyGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPrivacyGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="privacySettingId">Initial value of the PrivacySettingId property.</param>
        /// <param name="privacyGroupId">Initial value of the PrivacyGroupId property.</param>
        public static UserPrivacyGroup CreateUserPrivacyGroup(global::System.Int32 id, global::System.Int32 privacySettingId, global::System.Int32 privacyGroupId)
        {
            UserPrivacyGroup userPrivacyGroup = new UserPrivacyGroup();
            userPrivacyGroup.Id = id;
            userPrivacyGroup.PrivacySettingId = privacySettingId;
            userPrivacyGroup.PrivacyGroupId = privacyGroupId;
            return userPrivacyGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrivacySettingId
        {
            get
            {
                return _PrivacySettingId;
            }
            set
            {
                OnPrivacySettingIdChanging(value);
                ReportPropertyChanging("PrivacySettingId");
                _PrivacySettingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivacySettingId");
                OnPrivacySettingIdChanged();
            }
        }
        private global::System.Int32 _PrivacySettingId;
        partial void OnPrivacySettingIdChanging(global::System.Int32 value);
        partial void OnPrivacySettingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrivacyGroupId
        {
            get
            {
                return _PrivacyGroupId;
            }
            set
            {
                OnPrivacyGroupIdChanging(value);
                ReportPropertyChanging("PrivacyGroupId");
                _PrivacyGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivacyGroupId");
                OnPrivacyGroupIdChanged();
            }
        }
        private global::System.Int32 _PrivacyGroupId;
        partial void OnPrivacyGroupIdChanging(global::System.Int32 value);
        partial void OnPrivacyGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserPrivacyGroups_PrivacyGroup1", "PrivacyGroup")]
        public PrivacyGroup PrivacyGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacyGroup>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacyGroup1", "PrivacyGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacyGroup>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacyGroup1", "PrivacyGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivacyGroup> PrivacyGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacyGroup>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacyGroup1", "PrivacyGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivacyGroup>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacyGroup1", "PrivacyGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserPrivacyGroups_PrivacySettings", "PrivacySetting")]
        public PrivacySetting PrivacySetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacySetting>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacySettings", "PrivacySetting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacySetting>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacySettings", "PrivacySetting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivacySetting> PrivacySettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacySetting>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacySettings", "PrivacySetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivacySetting>("HaveAVoice.Models.FK_UserPrivacyGroups_PrivacySettings", "PrivacySetting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacySetting")]
        public EntityCollection<UserPrivacySetting> UserPrivacySettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPrivacySetting>("HaveAVoice.Models.FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacySetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPrivacySetting>("HaveAVoice.Models.FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacySetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="UserPrivacySetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPrivacySetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPrivacySetting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userPrivacyGroupId">Initial value of the UserPrivacyGroupId property.</param>
        public static UserPrivacySetting CreateUserPrivacySetting(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 userPrivacyGroupId)
        {
            UserPrivacySetting userPrivacySetting = new UserPrivacySetting();
            userPrivacySetting.Id = id;
            userPrivacySetting.UserId = userId;
            userPrivacySetting.UserPrivacyGroupId = userPrivacyGroupId;
            return userPrivacySetting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserPrivacyGroupId
        {
            get
            {
                return _UserPrivacyGroupId;
            }
            set
            {
                OnUserPrivacyGroupIdChanging(value);
                ReportPropertyChanging("UserPrivacyGroupId");
                _UserPrivacyGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserPrivacyGroupId");
                OnUserPrivacyGroupIdChanged();
            }
        }
        private global::System.Int32 _UserPrivacyGroupId;
        partial void OnUserPrivacyGroupIdChanging(global::System.Int32 value);
        partial void OnUserPrivacyGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacyGroup")]
        public UserPrivacyGroup UserPrivacyGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserPrivacyGroup>("HaveAVoice.Models.FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacyGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserPrivacyGroup>("HaveAVoice.Models.FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacyGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserPrivacyGroup> UserPrivacyGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserPrivacyGroup>("HaveAVoice.Models.FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacyGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserPrivacyGroup>("HaveAVoice.Models.FK_UserPrivacySettings_UserPrivacyGroups", "UserPrivacyGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserPrivacySettings_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_UserPrivacySettings_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_UserPrivacySettings_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_UserPrivacySettings_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_UserPrivacySettings_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UserRole CreateUserRole(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 roleId)
        {
            UserRole userRole = new UserRole();
            userRole.Id = id;
            userRole.UserId = userId;
            userRole.RoleId = roleId;
            return userRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserRoles_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HaveAVoice.Models.FK_UserRoles_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HaveAVoice.Models.FK_UserRoles_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HaveAVoice.Models.FK_UserRoles_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("HaveAVoice.Models.FK_UserRoles_Roles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_UserRoles_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_UserRoles_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_UserRoles_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_UserRoles_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_UserRoles_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaveAVoice.Models", Name="WhoIsOnline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WhoIsOnline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WhoIsOnline object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="ipAddress">Initial value of the IpAddress property.</param>
        /// <param name="forceLogOut">Initial value of the ForceLogOut property.</param>
        public static WhoIsOnline CreateWhoIsOnline(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime dateTimeStamp, global::System.String ipAddress, global::System.Boolean forceLogOut)
        {
            WhoIsOnline whoIsOnline = new WhoIsOnline();
            whoIsOnline.Id = id;
            whoIsOnline.UserId = userId;
            whoIsOnline.DateTimeStamp = dateTimeStamp;
            whoIsOnline.IpAddress = ipAddress;
            whoIsOnline.ForceLogOut = forceLogOut;
            return whoIsOnline;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IpAddress
        {
            get
            {
                return _IpAddress;
            }
            set
            {
                OnIpAddressChanging(value);
                ReportPropertyChanging("IpAddress");
                _IpAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IpAddress");
                OnIpAddressChanged();
            }
        }
        private global::System.String _IpAddress;
        partial void OnIpAddressChanging(global::System.String value);
        partial void OnIpAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ForceLogOut
        {
            get
            {
                return _ForceLogOut;
            }
            set
            {
                OnForceLogOutChanging(value);
                ReportPropertyChanging("ForceLogOut");
                _ForceLogOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForceLogOut");
                OnForceLogOutChanged();
            }
        }
        private global::System.Boolean _ForceLogOut;
        partial void OnForceLogOutChanging(global::System.Boolean value);
        partial void OnForceLogOutChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaveAVoice.Models", "FK_WhoIsOnline_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_WhoIsOnline_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_WhoIsOnline_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HaveAVoice.Models.FK_WhoIsOnline_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HaveAVoice.Models.FK_WhoIsOnline_Users", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
