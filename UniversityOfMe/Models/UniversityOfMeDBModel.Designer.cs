//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_RolePermissions_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Role), "RolePermissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.RolePermission), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserRoles_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Role), "UserRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserRole), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserPrivacySettings_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "UserPrivacySetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserPrivacySetting), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserRoles_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserRole), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_WhoIsOnline_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "WhoIsOnline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.WhoIsOnline), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_RolePermissions_Permissions", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Permission), "RolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.RolePermission), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_PrivacySettings_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "PrivacySetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.PrivacySetting), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserPrivacySettings_PrivacySettings", "PrivacySetting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.PrivacySetting), "UserPrivacySetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserPrivacySetting), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UniversityEmails_Universities", "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.University), "UniversityEmail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UniversityEmail), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserUniversity_UniversityEmails", "UniversityEmail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.UniversityEmail), "UserUniversity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserUniversity), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserUniversity_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "UserUniversity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserUniversity), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Friends_FriendUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "Friend", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Friend), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Friends_SourceUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "Friend", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Friend), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Replys_Messages", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Message), "MessageReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.MessageReply), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Replys_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "MessageReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.MessageReply), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Message_Users_FromUserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Message), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Message_Users_ToUserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Message), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_PhotoAlbum_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "PhotoAlbum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.PhotoAlbum), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Photos_PhotoAlbum", "PhotoAlbum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.PhotoAlbum), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Photo), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Photos_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Photo), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_AuditBoard_Board", "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Board), "AuditBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.AuditBoard), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_AuditBoard_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "AuditBoard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.AuditBoard), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_AuditBoardReplies_BoardReply", "BoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.BoardReply), "AuditBoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.AuditBoardReply), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_AuditBoardReplies_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "AuditBoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.AuditBoardReply), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Board_OwnerUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Board), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Board_PostedUserId_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Board), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_BoardReply_Board", "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Board), "BoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.BoardReply), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_BoardViewedState_Board", "Board", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Board), "BoardViewedState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.BoardViewedState), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_BoardReply_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "BoardReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.BoardReply), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_BoardViewedState_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "BoardViewedState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.BoardViewedState), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_SendItems_User_FromUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "SendItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.SendItem), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_SendItems_Users_ToUser", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "SendItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.SendItem), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_PhotoComments_Photos", "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Photo), "PhotoComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.PhotoComment), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_PhotoComments_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "PhotoComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.PhotoComment), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_FeaturesEnabled_Features", "Feature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Feature), "FeaturesEnabled", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.FeaturesEnabled), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_FeaturesEnabled_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "FeaturesEnabled", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.FeaturesEnabled), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Users_RelationshipStatus", "RelationshipStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UniversityOfMe.Models.RelationshipStatu), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.User), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_ErrorLog_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UniversityOfMe.Models.User), "ErrorLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.ErrorLog), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserActions_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "UserAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserAction), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserBadges_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "UserBadge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserBadge), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserBadges_Badges", "Badge", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.Badge), "UserBadge", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserBadge), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_UserStatuses_Universities", "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.University), "UserStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserStatus), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Statuses_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "UserStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.UserStatus), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_TextBooks_TextBookConditions", "TextBookCondition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.TextBookCondition), "TextBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.TextBook), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_TextBooks_Universities", "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.University), "TextBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.TextBook), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_TextBooks_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "TextBook", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.TextBook), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_ItemsSelling_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "MarketplaceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.MarketplaceItem), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_ItemsSelling_ItemType", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.ItemType), "MarketplaceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.MarketplaceItem), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Classes_Universities", "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.University), "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Class), true)]
[assembly: EdmRelationshipAttribute("UniversityOfMeModel", "FK_Classes_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UniversityOfMe.Models.User), "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UniversityOfMe.Models.Class), true)]

#endregion

namespace UniversityOfMe.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UniversityOfMeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UniversityOfMeEntities object using the connection string found in the 'UniversityOfMeEntities' section of the application configuration file.
        /// </summary>
        public UniversityOfMeEntities() : base("name=UniversityOfMeEntities", "UniversityOfMeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UniversityOfMeEntities object.
        /// </summary>
        public UniversityOfMeEntities(string connectionString) : base(connectionString, "UniversityOfMeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UniversityOfMeEntities object.
        /// </summary>
        public UniversityOfMeEntities(EntityConnection connection) : base(connection, "UniversityOfMeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RolePermission> RolePermissions
        {
            get
            {
                if ((_RolePermissions == null))
                {
                    _RolePermissions = base.CreateObjectSet<RolePermission>("RolePermissions");
                }
                return _RolePermissions;
            }
        }
        private ObjectSet<RolePermission> _RolePermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPrivacySetting> UserPrivacySettings
        {
            get
            {
                if ((_UserPrivacySettings == null))
                {
                    _UserPrivacySettings = base.CreateObjectSet<UserPrivacySetting>("UserPrivacySettings");
                }
                return _UserPrivacySettings;
            }
        }
        private ObjectSet<UserPrivacySetting> _UserPrivacySettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WhoIsOnline> WhoIsOnlines
        {
            get
            {
                if ((_WhoIsOnlines == null))
                {
                    _WhoIsOnlines = base.CreateObjectSet<WhoIsOnline>("WhoIsOnlines");
                }
                return _WhoIsOnlines;
            }
        }
        private ObjectSet<WhoIsOnline> _WhoIsOnlines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivacySetting> PrivacySettings
        {
            get
            {
                if ((_PrivacySettings == null))
                {
                    _PrivacySettings = base.CreateObjectSet<PrivacySetting>("PrivacySettings");
                }
                return _PrivacySettings;
            }
        }
        private ObjectSet<PrivacySetting> _PrivacySettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<University> Universities
        {
            get
            {
                if ((_Universities == null))
                {
                    _Universities = base.CreateObjectSet<University>("Universities");
                }
                return _Universities;
            }
        }
        private ObjectSet<University> _Universities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UniversityEmail> UniversityEmails
        {
            get
            {
                if ((_UniversityEmails == null))
                {
                    _UniversityEmails = base.CreateObjectSet<UniversityEmail>("UniversityEmails");
                }
                return _UniversityEmails;
            }
        }
        private ObjectSet<UniversityEmail> _UniversityEmails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserUniversity> UserUniversities
        {
            get
            {
                if ((_UserUniversities == null))
                {
                    _UserUniversities = base.CreateObjectSet<UserUniversity>("UserUniversities");
                }
                return _UserUniversities;
            }
        }
        private ObjectSet<UserUniversity> _UserUniversities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TextBookCondition> TextBookConditions
        {
            get
            {
                if ((_TextBookConditions == null))
                {
                    _TextBookConditions = base.CreateObjectSet<TextBookCondition>("TextBookConditions");
                }
                return _TextBookConditions;
            }
        }
        private ObjectSet<TextBookCondition> _TextBookConditions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Friend> Friends
        {
            get
            {
                if ((_Friends == null))
                {
                    _Friends = base.CreateObjectSet<Friend>("Friends");
                }
                return _Friends;
            }
        }
        private ObjectSet<Friend> _Friends;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageReply> MessageReplies
        {
            get
            {
                if ((_MessageReplies == null))
                {
                    _MessageReplies = base.CreateObjectSet<MessageReply>("MessageReplies");
                }
                return _MessageReplies;
            }
        }
        private ObjectSet<MessageReply> _MessageReplies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhotoAlbum> PhotoAlbums
        {
            get
            {
                if ((_PhotoAlbums == null))
                {
                    _PhotoAlbums = base.CreateObjectSet<PhotoAlbum>("PhotoAlbums");
                }
                return _PhotoAlbums;
            }
        }
        private ObjectSet<PhotoAlbum> _PhotoAlbums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditBoard> AuditBoards
        {
            get
            {
                if ((_AuditBoards == null))
                {
                    _AuditBoards = base.CreateObjectSet<AuditBoard>("AuditBoards");
                }
                return _AuditBoards;
            }
        }
        private ObjectSet<AuditBoard> _AuditBoards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditBoardReply> AuditBoardReplies
        {
            get
            {
                if ((_AuditBoardReplies == null))
                {
                    _AuditBoardReplies = base.CreateObjectSet<AuditBoardReply>("AuditBoardReplies");
                }
                return _AuditBoardReplies;
            }
        }
        private ObjectSet<AuditBoardReply> _AuditBoardReplies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Board> Boards
        {
            get
            {
                if ((_Boards == null))
                {
                    _Boards = base.CreateObjectSet<Board>("Boards");
                }
                return _Boards;
            }
        }
        private ObjectSet<Board> _Boards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BoardReply> BoardReplies
        {
            get
            {
                if ((_BoardReplies == null))
                {
                    _BoardReplies = base.CreateObjectSet<BoardReply>("BoardReplies");
                }
                return _BoardReplies;
            }
        }
        private ObjectSet<BoardReply> _BoardReplies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BoardViewedState> BoardViewedStates
        {
            get
            {
                if ((_BoardViewedStates == null))
                {
                    _BoardViewedStates = base.CreateObjectSet<BoardViewedState>("BoardViewedStates");
                }
                return _BoardViewedStates;
            }
        }
        private ObjectSet<BoardViewedState> _BoardViewedStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SendItem> SendItems
        {
            get
            {
                if ((_SendItems == null))
                {
                    _SendItems = base.CreateObjectSet<SendItem>("SendItems");
                }
                return _SendItems;
            }
        }
        private ObjectSet<SendItem> _SendItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhotoComment> PhotoComments
        {
            get
            {
                if ((_PhotoComments == null))
                {
                    _PhotoComments = base.CreateObjectSet<PhotoComment>("PhotoComments");
                }
                return _PhotoComments;
            }
        }
        private ObjectSet<PhotoComment> _PhotoComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feature> Features
        {
            get
            {
                if ((_Features == null))
                {
                    _Features = base.CreateObjectSet<Feature>("Features");
                }
                return _Features;
            }
        }
        private ObjectSet<Feature> _Features;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturesEnabled> FeaturesEnableds
        {
            get
            {
                if ((_FeaturesEnableds == null))
                {
                    _FeaturesEnableds = base.CreateObjectSet<FeaturesEnabled>("FeaturesEnableds");
                }
                return _FeaturesEnableds;
            }
        }
        private ObjectSet<FeaturesEnabled> _FeaturesEnableds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelationshipStatu> RelationshipStatus
        {
            get
            {
                if ((_RelationshipStatus == null))
                {
                    _RelationshipStatus = base.CreateObjectSet<RelationshipStatu>("RelationshipStatus");
                }
                return _RelationshipStatus;
            }
        }
        private ObjectSet<RelationshipStatu> _RelationshipStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ErrorLog> ErrorLogs
        {
            get
            {
                if ((_ErrorLogs == null))
                {
                    _ErrorLogs = base.CreateObjectSet<ErrorLog>("ErrorLogs");
                }
                return _ErrorLogs;
            }
        }
        private ObjectSet<ErrorLog> _ErrorLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAction> UserActions
        {
            get
            {
                if ((_UserActions == null))
                {
                    _UserActions = base.CreateObjectSet<UserAction>("UserActions");
                }
                return _UserActions;
            }
        }
        private ObjectSet<UserAction> _UserActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserBadge> UserBadges
        {
            get
            {
                if ((_UserBadges == null))
                {
                    _UserBadges = base.CreateObjectSet<UserBadge>("UserBadges");
                }
                return _UserBadges;
            }
        }
        private ObjectSet<UserBadge> _UserBadges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Badge> Badges
        {
            get
            {
                if ((_Badges == null))
                {
                    _Badges = base.CreateObjectSet<Badge>("Badges");
                }
                return _Badges;
            }
        }
        private ObjectSet<Badge> _Badges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactUs> ContactUs
        {
            get
            {
                if ((_ContactUs == null))
                {
                    _ContactUs = base.CreateObjectSet<ContactUs>("ContactUs");
                }
                return _ContactUs;
            }
        }
        private ObjectSet<ContactUs> _ContactUs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailJob> EmailJobs
        {
            get
            {
                if ((_EmailJobs == null))
                {
                    _EmailJobs = base.CreateObjectSet<EmailJob>("EmailJobs");
                }
                return _EmailJobs;
            }
        }
        private ObjectSet<EmailJob> _EmailJobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserStatus> UserStatuses
        {
            get
            {
                if ((_UserStatuses == null))
                {
                    _UserStatuses = base.CreateObjectSet<UserStatus>("UserStatuses");
                }
                return _UserStatuses;
            }
        }
        private ObjectSet<UserStatus> _UserStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TextBook> TextBooks
        {
            get
            {
                if ((_TextBooks == null))
                {
                    _TextBooks = base.CreateObjectSet<TextBook>("TextBooks");
                }
                return _TextBooks;
            }
        }
        private ObjectSet<TextBook> _TextBooks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarketplaceItem> MarketplaceItems
        {
            get
            {
                if ((_MarketplaceItems == null))
                {
                    _MarketplaceItems = base.CreateObjectSet<MarketplaceItem>("MarketplaceItems");
                }
                return _MarketplaceItems;
            }
        }
        private ObjectSet<MarketplaceItem> _MarketplaceItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemType> ItemTypes
        {
            get
            {
                if ((_ItemTypes == null))
                {
                    _ItemTypes = base.CreateObjectSet<ItemType>("ItemTypes");
                }
                return _ItemTypes;
            }
        }
        private ObjectSet<ItemType> _ItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Classes
        {
            get
            {
                if ((_Classes == null))
                {
                    _Classes = base.CreateObjectSet<Class>("Classes");
                }
                return _Classes;
            }
        }
        private ObjectSet<Class> _Classes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RolePermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRolePermissions(RolePermission rolePermission)
        {
            base.AddObject("RolePermissions", rolePermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPrivacySettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPrivacySettings(UserPrivacySetting userPrivacySetting)
        {
            base.AddObject("UserPrivacySettings", userPrivacySetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WhoIsOnlines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWhoIsOnlines(WhoIsOnline whoIsOnline)
        {
            base.AddObject("WhoIsOnlines", whoIsOnline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivacySettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivacySettings(PrivacySetting privacySetting)
        {
            base.AddObject("PrivacySettings", privacySetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Universities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUniversities(University university)
        {
            base.AddObject("Universities", university);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UniversityEmails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUniversityEmails(UniversityEmail universityEmail)
        {
            base.AddObject("UniversityEmails", universityEmail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserUniversities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserUniversities(UserUniversity userUniversity)
        {
            base.AddObject("UserUniversities", userUniversity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TextBookConditions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTextBookConditions(TextBookCondition textBookCondition)
        {
            base.AddObject("TextBookConditions", textBookCondition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Friends EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFriends(Friend friend)
        {
            base.AddObject("Friends", friend);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageReplies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageReplies(MessageReply messageReply)
        {
            base.AddObject("MessageReplies", messageReply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhotoAlbums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotoAlbums(PhotoAlbum photoAlbum)
        {
            base.AddObject("PhotoAlbums", photoAlbum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditBoards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditBoards(AuditBoard auditBoard)
        {
            base.AddObject("AuditBoards", auditBoard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditBoardReplies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditBoardReplies(AuditBoardReply auditBoardReply)
        {
            base.AddObject("AuditBoardReplies", auditBoardReply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Boards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoards(Board board)
        {
            base.AddObject("Boards", board);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BoardReplies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoardReplies(BoardReply boardReply)
        {
            base.AddObject("BoardReplies", boardReply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BoardViewedStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoardViewedStates(BoardViewedState boardViewedState)
        {
            base.AddObject("BoardViewedStates", boardViewedState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SendItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSendItems(SendItem sendItem)
        {
            base.AddObject("SendItems", sendItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhotoComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotoComments(PhotoComment photoComment)
        {
            base.AddObject("PhotoComments", photoComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Features EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeatures(Feature feature)
        {
            base.AddObject("Features", feature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturesEnableds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturesEnableds(FeaturesEnabled featuresEnabled)
        {
            base.AddObject("FeaturesEnableds", featuresEnabled);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelationshipStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelationshipStatus(RelationshipStatu relationshipStatu)
        {
            base.AddObject("RelationshipStatus", relationshipStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ErrorLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToErrorLogs(ErrorLog errorLog)
        {
            base.AddObject("ErrorLogs", errorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserActions(UserAction userAction)
        {
            base.AddObject("UserActions", userAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserBadges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserBadges(UserBadge userBadge)
        {
            base.AddObject("UserBadges", userBadge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Badges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBadges(Badge badge)
        {
            base.AddObject("Badges", badge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactUs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactUs(ContactUs contactUs)
        {
            base.AddObject("ContactUs", contactUs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailJobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailJobs(EmailJob emailJob)
        {
            base.AddObject("EmailJobs", emailJob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserStatuses(UserStatus userStatus)
        {
            base.AddObject("UserStatuses", userStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TextBooks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTextBooks(TextBook textBook)
        {
            base.AddObject("TextBooks", textBook);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarketplaceItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarketplaceItems(MarketplaceItem marketplaceItem)
        {
            base.AddObject("MarketplaceItems", marketplaceItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTypes(ItemType itemType)
        {
            base.AddObject("ItemTypes", itemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClasses(Class @class)
        {
            base.AddObject("Classes", @class);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="AuditBoard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditBoard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditBoard object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="boardId">Initial value of the BoardId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="updatedByUserId">Initial value of the UpdatedByUserId property.</param>
        public static AuditBoard CreateAuditBoard(global::System.Int32 id, global::System.Int32 boardId, global::System.String message, global::System.DateTime dateTimeStamp, global::System.Int32 updatedByUserId)
        {
            AuditBoard auditBoard = new AuditBoard();
            auditBoard.Id = id;
            auditBoard.BoardId = boardId;
            auditBoard.Message = message;
            auditBoard.DateTimeStamp = dateTimeStamp;
            auditBoard.UpdatedByUserId = updatedByUserId;
            return auditBoard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardId
        {
            get
            {
                return _BoardId;
            }
            set
            {
                OnBoardIdChanging(value);
                ReportPropertyChanging("BoardId");
                _BoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardId");
                OnBoardIdChanged();
            }
        }
        private global::System.Int32 _BoardId;
        partial void OnBoardIdChanging(global::System.Int32 value);
        partial void OnBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnUpdatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_AuditBoard_Board", "Board")]
        public Board Board
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_AuditBoard_Board", "Board").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_AuditBoard_Board", "Board").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Board> BoardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_AuditBoard_Board", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Board>("UniversityOfMeModel.FK_AuditBoard_Board", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_AuditBoard_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_AuditBoard_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_AuditBoard_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_AuditBoard_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_AuditBoard_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="AuditBoardReply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditBoardReply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditBoardReply object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="boardReplyId">Initial value of the BoardReplyId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="updatedByUserId">Initial value of the UpdatedByUserId property.</param>
        public static AuditBoardReply CreateAuditBoardReply(global::System.Int32 id, global::System.Int32 boardReplyId, global::System.String message, global::System.DateTime dateTimeStamp, global::System.Int32 updatedByUserId)
        {
            AuditBoardReply auditBoardReply = new AuditBoardReply();
            auditBoardReply.Id = id;
            auditBoardReply.BoardReplyId = boardReplyId;
            auditBoardReply.Message = message;
            auditBoardReply.DateTimeStamp = dateTimeStamp;
            auditBoardReply.UpdatedByUserId = updatedByUserId;
            return auditBoardReply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardReplyId
        {
            get
            {
                return _BoardReplyId;
            }
            set
            {
                OnBoardReplyIdChanging(value);
                ReportPropertyChanging("BoardReplyId");
                _BoardReplyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardReplyId");
                OnBoardReplyIdChanged();
            }
        }
        private global::System.Int32 _BoardReplyId;
        partial void OnBoardReplyIdChanging(global::System.Int32 value);
        partial void OnBoardReplyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private global::System.Int32 _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(global::System.Int32 value);
        partial void OnUpdatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_AuditBoardReplies_BoardReply", "BoardReply")]
        public BoardReply BoardReply
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardReply>("UniversityOfMeModel.FK_AuditBoardReplies_BoardReply", "BoardReply").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardReply>("UniversityOfMeModel.FK_AuditBoardReplies_BoardReply", "BoardReply").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BoardReply> BoardReplyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BoardReply>("UniversityOfMeModel.FK_AuditBoardReplies_BoardReply", "BoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BoardReply>("UniversityOfMeModel.FK_AuditBoardReplies_BoardReply", "BoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_AuditBoardReplies_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_AuditBoardReplies_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_AuditBoardReplies_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_AuditBoardReplies_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_AuditBoardReplies_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Badge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Badge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Badge object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="oneHitPoints">Initial value of the OneHitPoints property.</param>
        /// <param name="totalPoints">Initial value of the TotalPoints property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="section">Initial value of the Section property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static Badge CreateBadge(global::System.String name, global::System.String description, global::System.String image, global::System.Int32 oneHitPoints, global::System.Int32 totalPoints, global::System.String action, global::System.String section, global::System.Int32 level)
        {
            Badge badge = new Badge();
            badge.Name = name;
            badge.Description = description;
            badge.Image = image;
            badge.OneHitPoints = oneHitPoints;
            badge.TotalPoints = totalPoints;
            badge.Action = action;
            badge.Section = section;
            badge.Level = level;
            return badge;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OneHitPoints
        {
            get
            {
                return _OneHitPoints;
            }
            set
            {
                OnOneHitPointsChanging(value);
                ReportPropertyChanging("OneHitPoints");
                _OneHitPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OneHitPoints");
                OnOneHitPointsChanged();
            }
        }
        private global::System.Int32 _OneHitPoints;
        partial void OnOneHitPointsChanging(global::System.Int32 value);
        partial void OnOneHitPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalPoints
        {
            get
            {
                return _TotalPoints;
            }
            set
            {
                OnTotalPointsChanging(value);
                ReportPropertyChanging("TotalPoints");
                _TotalPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPoints");
                OnTotalPointsChanged();
            }
        }
        private global::System.Int32 _TotalPoints;
        partial void OnTotalPointsChanging(global::System.Int32 value);
        partial void OnTotalPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Section
        {
            get
            {
                return _Section;
            }
            set
            {
                OnSectionChanging(value);
                ReportPropertyChanging("Section");
                _Section = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Section");
                OnSectionChanged();
            }
        }
        private global::System.String _Section;
        partial void OnSectionChanging(global::System.String value);
        partial void OnSectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserBadges_Badges", "UserBadge")]
        public EntityCollection<UserBadge> UserBadges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBadge>("UniversityOfMeModel.FK_UserBadges_Badges", "UserBadge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBadge>("UniversityOfMeModel.FK_UserBadges_Badges", "UserBadge", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Board")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Board : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Board object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ownerUserId">Initial value of the OwnerUserId property.</param>
        /// <param name="postedUserId">Initial value of the PostedUserId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Board CreateBoard(global::System.Int32 id, global::System.Int32 ownerUserId, global::System.Int32 postedUserId, global::System.String message, global::System.DateTime dateTimeStamp, global::System.Boolean deleted)
        {
            Board board = new Board();
            board.Id = id;
            board.OwnerUserId = ownerUserId;
            board.PostedUserId = postedUserId;
            board.Message = message;
            board.DateTimeStamp = dateTimeStamp;
            board.Deleted = deleted;
            return board;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerUserId
        {
            get
            {
                return _OwnerUserId;
            }
            set
            {
                OnOwnerUserIdChanging(value);
                ReportPropertyChanging("OwnerUserId");
                _OwnerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerUserId");
                OnOwnerUserIdChanged();
            }
        }
        private global::System.Int32 _OwnerUserId;
        partial void OnOwnerUserIdChanging(global::System.Int32 value);
        partial void OnOwnerUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostedUserId
        {
            get
            {
                return _PostedUserId;
            }
            set
            {
                OnPostedUserIdChanging(value);
                ReportPropertyChanging("PostedUserId");
                _PostedUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedUserId");
                OnPostedUserIdChanged();
            }
        }
        private global::System.Int32 _PostedUserId;
        partial void OnPostedUserIdChanging(global::System.Int32 value);
        partial void OnPostedUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDateTimeStamp
        {
            get
            {
                return _UpdatedDateTimeStamp;
            }
            set
            {
                OnUpdatedDateTimeStampChanging(value);
                ReportPropertyChanging("UpdatedDateTimeStamp");
                _UpdatedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDateTimeStamp");
                OnUpdatedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDateTimeStamp;
        partial void OnUpdatedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_AuditBoard_Board", "AuditBoard")]
        public EntityCollection<AuditBoard> AuditBoards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditBoard>("UniversityOfMeModel.FK_AuditBoard_Board", "AuditBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditBoard>("UniversityOfMeModel.FK_AuditBoard_Board", "AuditBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Board_OwnerUserId_Users", "User")]
        public User OwnerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Board_OwnerUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Board_OwnerUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> OwnerUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Board_OwnerUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Board_OwnerUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Board_PostedUserId_Users", "User")]
        public User PostedByUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Board_PostedUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Board_PostedUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> PostedByUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Board_PostedUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Board_PostedUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_BoardReply_Board", "BoardReply")]
        public EntityCollection<BoardReply> BoardReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardReply>("UniversityOfMeModel.FK_BoardReply_Board", "BoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardReply>("UniversityOfMeModel.FK_BoardReply_Board", "BoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_BoardViewedState_Board", "BoardViewedState")]
        public EntityCollection<BoardViewedState> BoardViewedStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardViewedState>("UniversityOfMeModel.FK_BoardViewedState_Board", "BoardViewedState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardViewedState>("UniversityOfMeModel.FK_BoardViewedState_Board", "BoardViewedState", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="BoardReply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BoardReply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BoardReply object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="boardId">Initial value of the BoardId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static BoardReply CreateBoardReply(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 boardId, global::System.String message, global::System.DateTime dateTimeStamp, global::System.Boolean deleted)
        {
            BoardReply boardReply = new BoardReply();
            boardReply.Id = id;
            boardReply.UserId = userId;
            boardReply.BoardId = boardId;
            boardReply.Message = message;
            boardReply.DateTimeStamp = dateTimeStamp;
            boardReply.Deleted = deleted;
            return boardReply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardId
        {
            get
            {
                return _BoardId;
            }
            set
            {
                OnBoardIdChanging(value);
                ReportPropertyChanging("BoardId");
                _BoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardId");
                OnBoardIdChanged();
            }
        }
        private global::System.Int32 _BoardId;
        partial void OnBoardIdChanging(global::System.Int32 value);
        partial void OnBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedByUserId
        {
            get
            {
                return _UpdatedByUserId;
            }
            set
            {
                OnUpdatedByUserIdChanging(value);
                ReportPropertyChanging("UpdatedByUserId");
                _UpdatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedByUserId");
                OnUpdatedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedByUserId;
        partial void OnUpdatedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDateTimeStamp
        {
            get
            {
                return _UpdatedDateTimeStamp;
            }
            set
            {
                OnUpdatedDateTimeStampChanging(value);
                ReportPropertyChanging("UpdatedDateTimeStamp");
                _UpdatedDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDateTimeStamp");
                OnUpdatedDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDateTimeStamp;
        partial void OnUpdatedDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_AuditBoardReplies_BoardReply", "AuditBoardReply")]
        public EntityCollection<AuditBoardReply> AuditBoardReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditBoardReply>("UniversityOfMeModel.FK_AuditBoardReplies_BoardReply", "AuditBoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditBoardReply>("UniversityOfMeModel.FK_AuditBoardReplies_BoardReply", "AuditBoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_BoardReply_Board", "Board")]
        public Board Board
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_BoardReply_Board", "Board").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_BoardReply_Board", "Board").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Board> BoardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_BoardReply_Board", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Board>("UniversityOfMeModel.FK_BoardReply_Board", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_BoardReply_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_BoardReply_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_BoardReply_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_BoardReply_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_BoardReply_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="BoardViewedState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BoardViewedState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BoardViewedState object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="boardId">Initial value of the BoardId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="viewed">Initial value of the Viewed property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        public static BoardViewedState CreateBoardViewedState(global::System.Int32 id, global::System.Int32 boardId, global::System.Int32 userId, global::System.Boolean viewed, global::System.DateTime dateTimeStamp)
        {
            BoardViewedState boardViewedState = new BoardViewedState();
            boardViewedState.Id = id;
            boardViewedState.BoardId = boardId;
            boardViewedState.UserId = userId;
            boardViewedState.Viewed = viewed;
            boardViewedState.DateTimeStamp = dateTimeStamp;
            return boardViewedState;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoardId
        {
            get
            {
                return _BoardId;
            }
            set
            {
                OnBoardIdChanging(value);
                ReportPropertyChanging("BoardId");
                _BoardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoardId");
                OnBoardIdChanged();
            }
        }
        private global::System.Int32 _BoardId;
        partial void OnBoardIdChanging(global::System.Int32 value);
        partial void OnBoardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Viewed
        {
            get
            {
                return _Viewed;
            }
            set
            {
                OnViewedChanging(value);
                ReportPropertyChanging("Viewed");
                _Viewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Viewed");
                OnViewedChanged();
            }
        }
        private global::System.Boolean _Viewed;
        partial void OnViewedChanging(global::System.Boolean value);
        partial void OnViewedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_BoardViewedState_Board", "Board")]
        public Board Board
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_BoardViewedState_Board", "Board").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_BoardViewedState_Board", "Board").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Board> BoardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Board>("UniversityOfMeModel.FK_BoardViewedState_Board", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Board>("UniversityOfMeModel.FK_BoardViewedState_Board", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_BoardViewedState_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_BoardViewedState_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_BoardViewedState_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_BoardViewedState_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_BoardViewedState_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="universityId">Initial value of the UniversityId property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="course">Initial value of the Course property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        public static Class CreateClass(global::System.Int32 id, global::System.String universityId, global::System.Int32 createdByUserId, global::System.String subject, global::System.String course, global::System.String title, global::System.DateTime dateTimeStamp)
        {
            Class @class = new Class();
            @class.Id = id;
            @class.UniversityId = universityId;
            @class.CreatedByUserId = createdByUserId;
            @class.Subject = subject;
            @class.Course = course;
            @class.Title = title;
            @class.DateTimeStamp = dateTimeStamp;
            return @class;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityId
        {
            get
            {
                return _UniversityId;
            }
            set
            {
                OnUniversityIdChanging(value);
                ReportPropertyChanging("UniversityId");
                _UniversityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityId");
                OnUniversityIdChanged();
            }
        }
        private global::System.String _UniversityId;
        partial void OnUniversityIdChanging(global::System.String value);
        partial void OnUniversityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private global::System.String _Course;
        partial void OnCourseChanging(global::System.String value);
        partial void OnCourseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Classes_Universities", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_Classes_Universities", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_Classes_Universities", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_Classes_Universities", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("UniversityOfMeModel.FK_Classes_Universities", "University", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Classes_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Classes_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Classes_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Classes_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Classes_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="ContactUs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactUs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactUs object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="inquiryType">Initial value of the InquiryType property.</param>
        /// <param name="inquiry">Initial value of the Inquiry property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        public static ContactUs CreateContactUs(global::System.Int32 id, global::System.String inquiryType, global::System.String inquiry, global::System.String email, global::System.DateTime dateTimeStamp)
        {
            ContactUs contactUs = new ContactUs();
            contactUs.Id = id;
            contactUs.InquiryType = inquiryType;
            contactUs.Inquiry = inquiry;
            contactUs.Email = email;
            contactUs.DateTimeStamp = dateTimeStamp;
            return contactUs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InquiryType
        {
            get
            {
                return _InquiryType;
            }
            set
            {
                OnInquiryTypeChanging(value);
                ReportPropertyChanging("InquiryType");
                _InquiryType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InquiryType");
                OnInquiryTypeChanged();
            }
        }
        private global::System.String _InquiryType;
        partial void OnInquiryTypeChanging(global::System.String value);
        partial void OnInquiryTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Inquiry
        {
            get
            {
                return _Inquiry;
            }
            set
            {
                OnInquiryChanging(value);
                ReportPropertyChanging("Inquiry");
                _Inquiry = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Inquiry");
                OnInquiryChanged();
            }
        }
        private global::System.String _Inquiry;
        partial void OnInquiryChanging(global::System.String value);
        partial void OnInquiryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="EmailJob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailJob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailJob object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emailDescription">Initial value of the EmailDescription property.</param>
        /// <param name="fromEmail">Initial value of the FromEmail property.</param>
        /// <param name="toEmail">Initial value of the ToEmail property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="presentSent">Initial value of the PresentSent property.</param>
        /// <param name="postsentSent">Initial value of the PostsentSent property.</param>
        public static EmailJob CreateEmailJob(global::System.Int32 id, global::System.String emailDescription, global::System.String fromEmail, global::System.String toEmail, global::System.String subject, global::System.String body, global::System.DateTime dateTimeStamp, global::System.Boolean presentSent, global::System.Boolean postsentSent)
        {
            EmailJob emailJob = new EmailJob();
            emailJob.Id = id;
            emailJob.EmailDescription = emailDescription;
            emailJob.FromEmail = fromEmail;
            emailJob.ToEmail = toEmail;
            emailJob.Subject = subject;
            emailJob.Body = body;
            emailJob.DateTimeStamp = dateTimeStamp;
            emailJob.PresentSent = presentSent;
            emailJob.PostsentSent = postsentSent;
            return emailJob;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailDescription
        {
            get
            {
                return _EmailDescription;
            }
            set
            {
                OnEmailDescriptionChanging(value);
                ReportPropertyChanging("EmailDescription");
                _EmailDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailDescription");
                OnEmailDescriptionChanged();
            }
        }
        private global::System.String _EmailDescription;
        partial void OnEmailDescriptionChanging(global::System.String value);
        partial void OnEmailDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FromEmail
        {
            get
            {
                return _FromEmail;
            }
            set
            {
                OnFromEmailChanging(value);
                ReportPropertyChanging("FromEmail");
                _FromEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FromEmail");
                OnFromEmailChanged();
            }
        }
        private global::System.String _FromEmail;
        partial void OnFromEmailChanging(global::System.String value);
        partial void OnFromEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToEmail
        {
            get
            {
                return _ToEmail;
            }
            set
            {
                OnToEmailChanging(value);
                ReportPropertyChanging("ToEmail");
                _ToEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ToEmail");
                OnToEmailChanged();
            }
        }
        private global::System.String _ToEmail;
        partial void OnToEmailChanging(global::System.String value);
        partial void OnToEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PresentSent
        {
            get
            {
                return _PresentSent;
            }
            set
            {
                OnPresentSentChanging(value);
                ReportPropertyChanging("PresentSent");
                _PresentSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentSent");
                OnPresentSentChanged();
            }
        }
        private global::System.Boolean _PresentSent;
        partial void OnPresentSentChanging(global::System.Boolean value);
        partial void OnPresentSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PostsentSent
        {
            get
            {
                return _PostsentSent;
            }
            set
            {
                OnPostsentSentChanging(value);
                ReportPropertyChanging("PostsentSent");
                _PostsentSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostsentSent");
                OnPostsentSentChanged();
            }
        }
        private global::System.Boolean _PostsentSent;
        partial void OnPostsentSentChanging(global::System.Boolean value);
        partial void OnPostsentSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTimeStampSent
        {
            get
            {
                return _DateTimeStampSent;
            }
            set
            {
                OnDateTimeStampSentChanging(value);
                ReportPropertyChanging("DateTimeStampSent");
                _DateTimeStampSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStampSent");
                OnDateTimeStampSentChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTimeStampSent;
        partial void OnDateTimeStampSentChanging(Nullable<global::System.DateTime> value);
        partial void OnDateTimeStampSentChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="ErrorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ErrorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ErrorLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="exception">Initial value of the Exception property.</param>
        /// <param name="innerException">Initial value of the InnerException property.</param>
        /// <param name="stackTrace">Initial value of the StackTrace property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="details">Initial value of the Details property.</param>
        public static ErrorLog CreateErrorLog(global::System.Int32 id, global::System.String exception, global::System.String innerException, global::System.String stackTrace, global::System.DateTime dateTimeStamp, global::System.String details)
        {
            ErrorLog errorLog = new ErrorLog();
            errorLog.Id = id;
            errorLog.Exception = exception;
            errorLog.InnerException = innerException;
            errorLog.StackTrace = stackTrace;
            errorLog.DateTimeStamp = dateTimeStamp;
            errorLog.Details = details;
            return errorLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Exception
        {
            get
            {
                return _Exception;
            }
            set
            {
                OnExceptionChanging(value);
                ReportPropertyChanging("Exception");
                _Exception = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Exception");
                OnExceptionChanged();
            }
        }
        private global::System.String _Exception;
        partial void OnExceptionChanging(global::System.String value);
        partial void OnExceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InnerException
        {
            get
            {
                return _InnerException;
            }
            set
            {
                OnInnerExceptionChanging(value);
                ReportPropertyChanging("InnerException");
                _InnerException = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InnerException");
                OnInnerExceptionChanged();
            }
        }
        private global::System.String _InnerException;
        partial void OnInnerExceptionChanging(global::System.String value);
        partial void OnInnerExceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StackTrace
        {
            get
            {
                return _StackTrace;
            }
            set
            {
                OnStackTraceChanging(value);
                ReportPropertyChanging("StackTrace");
                _StackTrace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StackTrace");
                OnStackTraceChanged();
            }
        }
        private global::System.String _StackTrace;
        partial void OnStackTraceChanging(global::System.String value);
        partial void OnStackTraceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_ErrorLog_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_ErrorLog_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_ErrorLog_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_ErrorLog_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_ErrorLog_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Feature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feature object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="listOrder">Initial value of the ListOrder property.</param>
        public static Feature CreateFeature(global::System.String name, global::System.String displayName, global::System.String description, global::System.Int32 listOrder)
        {
            Feature feature = new Feature();
            feature.Name = name;
            feature.DisplayName = displayName;
            feature.Description = description;
            feature.ListOrder = listOrder;
            return feature;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListOrder
        {
            get
            {
                return _ListOrder;
            }
            set
            {
                OnListOrderChanging(value);
                ReportPropertyChanging("ListOrder");
                _ListOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListOrder");
                OnListOrderChanged();
            }
        }
        private global::System.Int32 _ListOrder;
        partial void OnListOrderChanging(global::System.Int32 value);
        partial void OnListOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_FeaturesEnabled_Features", "FeaturesEnabled")]
        public EntityCollection<FeaturesEnabled> FeaturesEnableds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturesEnabled>("UniversityOfMeModel.FK_FeaturesEnabled_Features", "FeaturesEnabled");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturesEnabled>("UniversityOfMeModel.FK_FeaturesEnabled_Features", "FeaturesEnabled", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="FeaturesEnabled")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturesEnabled : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturesEnabled object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="featureName">Initial value of the FeatureName property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static FeaturesEnabled CreateFeaturesEnabled(global::System.Int32 id, global::System.Int32 userId, global::System.String featureName, global::System.Boolean enabled)
        {
            FeaturesEnabled featuresEnabled = new FeaturesEnabled();
            featuresEnabled.Id = id;
            featuresEnabled.UserId = userId;
            featuresEnabled.FeatureName = featureName;
            featuresEnabled.Enabled = enabled;
            return featuresEnabled;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FeatureName
        {
            get
            {
                return _FeatureName;
            }
            set
            {
                OnFeatureNameChanging(value);
                ReportPropertyChanging("FeatureName");
                _FeatureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FeatureName");
                OnFeatureNameChanged();
            }
        }
        private global::System.String _FeatureName;
        partial void OnFeatureNameChanging(global::System.String value);
        partial void OnFeatureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_FeaturesEnabled_Features", "Feature")]
        public Feature Feature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("UniversityOfMeModel.FK_FeaturesEnabled_Features", "Feature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("UniversityOfMeModel.FK_FeaturesEnabled_Features", "Feature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Feature> FeatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Feature>("UniversityOfMeModel.FK_FeaturesEnabled_Features", "Feature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Feature>("UniversityOfMeModel.FK_FeaturesEnabled_Features", "Feature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_FeaturesEnabled_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_FeaturesEnabled_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_FeaturesEnabled_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_FeaturesEnabled_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_FeaturesEnabled_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Friend")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Friend : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Friend object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="friendUserId">Initial value of the FriendUserId property.</param>
        /// <param name="sourceUserId">Initial value of the SourceUserId property.</param>
        /// <param name="approved">Initial value of the Approved property.</param>
        public static Friend CreateFriend(global::System.Int32 id, global::System.Int32 friendUserId, global::System.Int32 sourceUserId, global::System.Boolean approved)
        {
            Friend friend = new Friend();
            friend.Id = id;
            friend.FriendUserId = friendUserId;
            friend.SourceUserId = sourceUserId;
            friend.Approved = approved;
            return friend;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FriendUserId
        {
            get
            {
                return _FriendUserId;
            }
            set
            {
                OnFriendUserIdChanging(value);
                ReportPropertyChanging("FriendUserId");
                _FriendUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FriendUserId");
                OnFriendUserIdChanged();
            }
        }
        private global::System.Int32 _FriendUserId;
        partial void OnFriendUserIdChanging(global::System.Int32 value);
        partial void OnFriendUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceUserId
        {
            get
            {
                return _SourceUserId;
            }
            set
            {
                OnSourceUserIdChanging(value);
                ReportPropertyChanging("SourceUserId");
                _SourceUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceUserId");
                OnSourceUserIdChanged();
            }
        }
        private global::System.Int32 _SourceUserId;
        partial void OnSourceUserIdChanging(global::System.Int32 value);
        partial void OnSourceUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private global::System.Boolean _Approved;
        partial void OnApprovedChanging(global::System.Boolean value);
        partial void OnApprovedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Friends_FriendUserId_Users", "User")]
        public User FriendedUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Friends_FriendUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Friends_FriendUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FriendedUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Friends_FriendUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Friends_FriendUserId_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Friends_SourceUserId_Users", "User")]
        public User SourceFriend
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Friends_SourceUserId_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Friends_SourceUserId_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> SourceFriendReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Friends_SourceUserId_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Friends_SourceUserId_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="ItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        public static ItemType CreateItemType(global::System.String id, global::System.String displayName)
        {
            ItemType itemType = new ItemType();
            itemType.Id = id;
            itemType.DisplayName = displayName;
            return itemType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_ItemsSelling_ItemType", "MarketplaceItem")]
        public EntityCollection<MarketplaceItem> MarketplaceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarketplaceItem>("UniversityOfMeModel.FK_ItemsSelling_ItemType", "MarketplaceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarketplaceItem>("UniversityOfMeModel.FK_ItemsSelling_ItemType", "MarketplaceItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="MarketplaceItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarketplaceItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarketplaceItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="universityId">Initial value of the UniversityId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="itemTypeId">Initial value of the ItemTypeId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="expireListing">Initial value of the ExpireListing property.</param>
        /// <param name="sold">Initial value of the Sold property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static MarketplaceItem CreateMarketplaceItem(global::System.Int32 id, global::System.String universityId, global::System.Int32 userId, global::System.String itemTypeId, global::System.String title, global::System.String description, global::System.Double price, global::System.DateTime dateTimeStamp, global::System.DateTime expireListing, global::System.Boolean sold, global::System.Boolean deleted)
        {
            MarketplaceItem marketplaceItem = new MarketplaceItem();
            marketplaceItem.Id = id;
            marketplaceItem.UniversityId = universityId;
            marketplaceItem.UserId = userId;
            marketplaceItem.ItemTypeId = itemTypeId;
            marketplaceItem.Title = title;
            marketplaceItem.Description = description;
            marketplaceItem.Price = price;
            marketplaceItem.DateTimeStamp = dateTimeStamp;
            marketplaceItem.ExpireListing = expireListing;
            marketplaceItem.Sold = sold;
            marketplaceItem.Deleted = deleted;
            return marketplaceItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityId
        {
            get
            {
                return _UniversityId;
            }
            set
            {
                OnUniversityIdChanging(value);
                ReportPropertyChanging("UniversityId");
                _UniversityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityId");
                OnUniversityIdChanged();
            }
        }
        private global::System.String _UniversityId;
        partial void OnUniversityIdChanging(global::System.String value);
        partial void OnUniversityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeId
        {
            get
            {
                return _ItemTypeId;
            }
            set
            {
                OnItemTypeIdChanging(value);
                ReportPropertyChanging("ItemTypeId");
                _ItemTypeId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemTypeId");
                OnItemTypeIdChanged();
            }
        }
        private global::System.String _ItemTypeId;
        partial void OnItemTypeIdChanging(global::System.String value);
        partial void OnItemTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpireListing
        {
            get
            {
                return _ExpireListing;
            }
            set
            {
                OnExpireListingChanging(value);
                ReportPropertyChanging("ExpireListing");
                _ExpireListing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireListing");
                OnExpireListingChanged();
            }
        }
        private global::System.DateTime _ExpireListing;
        partial void OnExpireListingChanging(global::System.DateTime value);
        partial void OnExpireListingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sold
        {
            get
            {
                return _Sold;
            }
            set
            {
                OnSoldChanging(value);
                ReportPropertyChanging("Sold");
                _Sold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sold");
                OnSoldChanged();
            }
        }
        private global::System.Boolean _Sold;
        partial void OnSoldChanging(global::System.Boolean value);
        partial void OnSoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_ItemsSelling_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_ItemsSelling_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_ItemsSelling_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_ItemsSelling_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_ItemsSelling_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_ItemsSelling_ItemType", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("UniversityOfMeModel.FK_ItemsSelling_ItemType", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("UniversityOfMeModel.FK_ItemsSelling_ItemType", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("UniversityOfMeModel.FK_ItemsSelling_ItemType", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("UniversityOfMeModel.FK_ItemsSelling_ItemType", "ItemType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="toViewed">Initial value of the ToViewed property.</param>
        /// <param name="fromViewed">Initial value of the FromViewed property.</param>
        /// <param name="toDeleted">Initial value of the ToDeleted property.</param>
        /// <param name="fromDeleted">Initial value of the FromDeleted property.</param>
        /// <param name="repliedTo">Initial value of the RepliedTo property.</param>
        public static Message CreateMessage(global::System.Int32 id, global::System.Int32 toUserId, global::System.Int32 fromUserId, global::System.String subject, global::System.String body, global::System.DateTime dateTimeStamp, global::System.Boolean toViewed, global::System.Boolean fromViewed, global::System.Boolean toDeleted, global::System.Boolean fromDeleted, global::System.Boolean repliedTo)
        {
            Message message = new Message();
            message.Id = id;
            message.ToUserId = toUserId;
            message.FromUserId = fromUserId;
            message.Subject = subject;
            message.Body = body;
            message.DateTimeStamp = dateTimeStamp;
            message.ToViewed = toViewed;
            message.FromViewed = fromViewed;
            message.ToDeleted = toDeleted;
            message.FromDeleted = fromDeleted;
            message.RepliedTo = repliedTo;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int32 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int32 value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ToViewed
        {
            get
            {
                return _ToViewed;
            }
            set
            {
                OnToViewedChanging(value);
                ReportPropertyChanging("ToViewed");
                _ToViewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToViewed");
                OnToViewedChanged();
            }
        }
        private global::System.Boolean _ToViewed;
        partial void OnToViewedChanging(global::System.Boolean value);
        partial void OnToViewedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FromViewed
        {
            get
            {
                return _FromViewed;
            }
            set
            {
                OnFromViewedChanging(value);
                ReportPropertyChanging("FromViewed");
                _FromViewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromViewed");
                OnFromViewedChanged();
            }
        }
        private global::System.Boolean _FromViewed;
        partial void OnFromViewedChanging(global::System.Boolean value);
        partial void OnFromViewedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ToDeleted
        {
            get
            {
                return _ToDeleted;
            }
            set
            {
                OnToDeletedChanging(value);
                ReportPropertyChanging("ToDeleted");
                _ToDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDeleted");
                OnToDeletedChanged();
            }
        }
        private global::System.Boolean _ToDeleted;
        partial void OnToDeletedChanging(global::System.Boolean value);
        partial void OnToDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FromDeleted
        {
            get
            {
                return _FromDeleted;
            }
            set
            {
                OnFromDeletedChanging(value);
                ReportPropertyChanging("FromDeleted");
                _FromDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDeleted");
                OnFromDeletedChanged();
            }
        }
        private global::System.Boolean _FromDeleted;
        partial void OnFromDeletedChanging(global::System.Boolean value);
        partial void OnFromDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RepliedTo
        {
            get
            {
                return _RepliedTo;
            }
            set
            {
                OnRepliedToChanging(value);
                ReportPropertyChanging("RepliedTo");
                _RepliedTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RepliedTo");
                OnRepliedToChanged();
            }
        }
        private global::System.Boolean _RepliedTo;
        partial void OnRepliedToChanging(global::System.Boolean value);
        partial void OnRepliedToChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Replys_Messages", "MessageReply")]
        public EntityCollection<MessageReply> MessageReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageReply>("UniversityOfMeModel.FK_Replys_Messages", "MessageReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageReply>("UniversityOfMeModel.FK_Replys_Messages", "MessageReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Message_Users_FromUserId", "User")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Message_Users_FromUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Message_Users_FromUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Message_Users_FromUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Message_Users_FromUserId", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Message_Users_ToUserId", "User")]
        public User ToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Message_Users_ToUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Message_Users_ToUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ToUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Message_Users_ToUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Message_Users_ToUserId", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="MessageReply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageReply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageReply object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="replyUserId">Initial value of the ReplyUserId property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        public static MessageReply CreateMessageReply(global::System.Int32 id, global::System.Int32 replyUserId, global::System.Int32 messageId, global::System.String body, global::System.DateTime dateTimeStamp)
        {
            MessageReply messageReply = new MessageReply();
            messageReply.Id = id;
            messageReply.ReplyUserId = replyUserId;
            messageReply.MessageId = messageId;
            messageReply.Body = body;
            messageReply.DateTimeStamp = dateTimeStamp;
            return messageReply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReplyUserId
        {
            get
            {
                return _ReplyUserId;
            }
            set
            {
                OnReplyUserIdChanging(value);
                ReportPropertyChanging("ReplyUserId");
                _ReplyUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReplyUserId");
                OnReplyUserIdChanged();
            }
        }
        private global::System.Int32 _ReplyUserId;
        partial void OnReplyUserIdChanging(global::System.Int32 value);
        partial void OnReplyUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                OnMessageIdChanging(value);
                ReportPropertyChanging("MessageId");
                _MessageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageId");
                OnMessageIdChanged();
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Replys_Messages", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("UniversityOfMeModel.FK_Replys_Messages", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("UniversityOfMeModel.FK_Replys_Messages", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("UniversityOfMeModel.FK_Replys_Messages", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("UniversityOfMeModel.FK_Replys_Messages", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Replys_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Replys_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Replys_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Replys_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Replys_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Permission CreatePermission(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Boolean deleted)
        {
            Permission permission = new Permission();
            permission.Id = id;
            permission.Name = name;
            permission.Description = description;
            permission.Deleted = deleted;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EditByUserId
        {
            get
            {
                return _EditByUserId;
            }
            set
            {
                OnEditByUserIdChanging(value);
                ReportPropertyChanging("EditByUserId");
                _EditByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditByUserId");
                OnEditByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EditByUserId;
        partial void OnEditByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnEditByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_RolePermissions_Permissions", "RolePermission")]
        public EntityCollection<RolePermission> RolePermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolePermission>("UniversityOfMeModel.FK_RolePermissions_Permissions", "RolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolePermission>("UniversityOfMeModel.FK_RolePermissions_Permissions", "RolePermission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uploadedByUserId">Initial value of the UploadedByUserId property.</param>
        /// <param name="photoAlbumId">Initial value of the PhotoAlbumId property.</param>
        /// <param name="imageName">Initial value of the ImageName property.</param>
        /// <param name="profilePicture">Initial value of the ProfilePicture property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="albumCover">Initial value of the AlbumCover property.</param>
        public static Photo CreatePhoto(global::System.Int32 id, global::System.Int32 uploadedByUserId, global::System.Int32 photoAlbumId, global::System.String imageName, global::System.Boolean profilePicture, global::System.DateTime dateTimeStamp, global::System.Boolean albumCover)
        {
            Photo photo = new Photo();
            photo.Id = id;
            photo.UploadedByUserId = uploadedByUserId;
            photo.PhotoAlbumId = photoAlbumId;
            photo.ImageName = imageName;
            photo.ProfilePicture = profilePicture;
            photo.DateTimeStamp = dateTimeStamp;
            photo.AlbumCover = albumCover;
            return photo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UploadedByUserId
        {
            get
            {
                return _UploadedByUserId;
            }
            set
            {
                OnUploadedByUserIdChanging(value);
                ReportPropertyChanging("UploadedByUserId");
                _UploadedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadedByUserId");
                OnUploadedByUserIdChanged();
            }
        }
        private global::System.Int32 _UploadedByUserId;
        partial void OnUploadedByUserIdChanging(global::System.Int32 value);
        partial void OnUploadedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoAlbumId
        {
            get
            {
                return _PhotoAlbumId;
            }
            set
            {
                OnPhotoAlbumIdChanging(value);
                ReportPropertyChanging("PhotoAlbumId");
                _PhotoAlbumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoAlbumId");
                OnPhotoAlbumIdChanged();
            }
        }
        private global::System.Int32 _PhotoAlbumId;
        partial void OnPhotoAlbumIdChanging(global::System.Int32 value);
        partial void OnPhotoAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ProfilePicture
        {
            get
            {
                return _ProfilePicture;
            }
            set
            {
                OnProfilePictureChanging(value);
                ReportPropertyChanging("ProfilePicture");
                _ProfilePicture = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfilePicture");
                OnProfilePictureChanged();
            }
        }
        private global::System.Boolean _ProfilePicture;
        partial void OnProfilePictureChanging(global::System.Boolean value);
        partial void OnProfilePictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AlbumCover
        {
            get
            {
                return _AlbumCover;
            }
            set
            {
                OnAlbumCoverChanging(value);
                ReportPropertyChanging("AlbumCover");
                _AlbumCover = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumCover");
                OnAlbumCoverChanged();
            }
        }
        private global::System.Boolean _AlbumCover;
        partial void OnAlbumCoverChanging(global::System.Boolean value);
        partial void OnAlbumCoverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OriginalPhotoId
        {
            get
            {
                return _OriginalPhotoId;
            }
            set
            {
                OnOriginalPhotoIdChanging(value);
                ReportPropertyChanging("OriginalPhotoId");
                _OriginalPhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalPhotoId");
                OnOriginalPhotoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OriginalPhotoId;
        partial void OnOriginalPhotoIdChanging(Nullable<global::System.Int32> value);
        partial void OnOriginalPhotoIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Photos_PhotoAlbum", "PhotoAlbum")]
        public PhotoAlbum PhotoAlbum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("UniversityOfMeModel.FK_Photos_PhotoAlbum", "PhotoAlbum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("UniversityOfMeModel.FK_Photos_PhotoAlbum", "PhotoAlbum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhotoAlbum> PhotoAlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhotoAlbum>("UniversityOfMeModel.FK_Photos_PhotoAlbum", "PhotoAlbum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhotoAlbum>("UniversityOfMeModel.FK_Photos_PhotoAlbum", "PhotoAlbum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Photos_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Photos_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Photos_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Photos_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Photos_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_PhotoComments_Photos", "PhotoComment")]
        public EntityCollection<PhotoComment> PhotoComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhotoComment>("UniversityOfMeModel.FK_PhotoComments_Photos", "PhotoComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhotoComment>("UniversityOfMeModel.FK_PhotoComments_Photos", "PhotoComment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="PhotoAlbum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhotoAlbum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhotoAlbum object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        public static PhotoAlbum CreatePhotoAlbum(global::System.Int32 id, global::System.String name, global::System.Int32 createdByUserId)
        {
            PhotoAlbum photoAlbum = new PhotoAlbum();
            photoAlbum.Id = id;
            photoAlbum.Name = name;
            photoAlbum.CreatedByUserId = createdByUserId;
            return photoAlbum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_PhotoAlbum_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PhotoAlbum_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PhotoAlbum_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PhotoAlbum_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_PhotoAlbum_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Photos_PhotoAlbum", "Photo")]
        public EntityCollection<Photo> Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("UniversityOfMeModel.FK_Photos_PhotoAlbum", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("UniversityOfMeModel.FK_Photos_PhotoAlbum", "Photo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="PhotoComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhotoComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhotoComment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="photoId">Initial value of the PhotoId property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        public static PhotoComment CreatePhotoComment(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 photoId, global::System.String comment, global::System.DateTime dateTimeStamp)
        {
            PhotoComment photoComment = new PhotoComment();
            photoComment.Id = id;
            photoComment.UserId = userId;
            photoComment.PhotoId = photoId;
            photoComment.Comment = comment;
            photoComment.DateTimeStamp = dateTimeStamp;
            return photoComment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoId
        {
            get
            {
                return _PhotoId;
            }
            set
            {
                OnPhotoIdChanging(value);
                ReportPropertyChanging("PhotoId");
                _PhotoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoId");
                OnPhotoIdChanged();
            }
        }
        private global::System.Int32 _PhotoId;
        partial void OnPhotoIdChanging(global::System.Int32 value);
        partial void OnPhotoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_PhotoComments_Photos", "Photo")]
        public Photo Photo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("UniversityOfMeModel.FK_PhotoComments_Photos", "Photo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("UniversityOfMeModel.FK_PhotoComments_Photos", "Photo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Photo> PhotoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Photo>("UniversityOfMeModel.FK_PhotoComments_Photos", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Photo>("UniversityOfMeModel.FK_PhotoComments_Photos", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_PhotoComments_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PhotoComments_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PhotoComments_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PhotoComments_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_PhotoComments_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="PrivacySetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivacySetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivacySetting object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdByUserId">Initial value of the CreatedByUserId property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="privacyGroup">Initial value of the PrivacyGroup property.</param>
        /// <param name="listOrder">Initial value of the ListOrder property.</param>
        public static PrivacySetting CreatePrivacySetting(global::System.String name, global::System.Int32 createdByUserId, global::System.String displayName, global::System.String description, global::System.String privacyGroup, global::System.Int32 listOrder)
        {
            PrivacySetting privacySetting = new PrivacySetting();
            privacySetting.Name = name;
            privacySetting.CreatedByUserId = createdByUserId;
            privacySetting.DisplayName = displayName;
            privacySetting.Description = description;
            privacySetting.PrivacyGroup = privacyGroup;
            privacySetting.ListOrder = listOrder;
            return privacySetting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserId
        {
            get
            {
                return _CreatedByUserId;
            }
            set
            {
                OnCreatedByUserIdChanging(value);
                ReportPropertyChanging("CreatedByUserId");
                _CreatedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserId");
                OnCreatedByUserIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserId;
        partial void OnCreatedByUserIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrivacyGroup
        {
            get
            {
                return _PrivacyGroup;
            }
            set
            {
                OnPrivacyGroupChanging(value);
                ReportPropertyChanging("PrivacyGroup");
                _PrivacyGroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrivacyGroup");
                OnPrivacyGroupChanged();
            }
        }
        private global::System.String _PrivacyGroup;
        partial void OnPrivacyGroupChanging(global::System.String value);
        partial void OnPrivacyGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListOrder
        {
            get
            {
                return _ListOrder;
            }
            set
            {
                OnListOrderChanging(value);
                ReportPropertyChanging("ListOrder");
                _ListOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListOrder");
                OnListOrderChanged();
            }
        }
        private global::System.Int32 _ListOrder;
        partial void OnListOrderChanging(global::System.Int32 value);
        partial void OnListOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_PrivacySettings_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PrivacySettings_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PrivacySettings_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_PrivacySettings_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_PrivacySettings_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserPrivacySettings_PrivacySettings", "UserPrivacySetting")]
        public EntityCollection<UserPrivacySetting> UserPrivacySettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPrivacySetting>("UniversityOfMeModel.FK_UserPrivacySettings_PrivacySettings", "UserPrivacySetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPrivacySetting>("UniversityOfMeModel.FK_UserPrivacySettings_PrivacySettings", "UserPrivacySetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="RelationshipStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelationshipStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelationshipStatu object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        public static RelationshipStatu CreateRelationshipStatu(global::System.String name, global::System.String displayName)
        {
            RelationshipStatu relationshipStatu = new RelationshipStatu();
            relationshipStatu.Name = name;
            relationshipStatu.DisplayName = displayName;
            return relationshipStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Users_RelationshipStatus", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("UniversityOfMeModel.FK_Users_RelationshipStatus", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("UniversityOfMeModel.FK_Users_RelationshipStatus", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="defaultRole">Initial value of the DefaultRole property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Boolean defaultRole, global::System.Boolean deleted)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            role.Description = description;
            role.DefaultRole = defaultRole;
            role.Deleted = deleted;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DefaultRole
        {
            get
            {
                return _DefaultRole;
            }
            set
            {
                OnDefaultRoleChanging(value);
                ReportPropertyChanging("DefaultRole");
                _DefaultRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultRole");
                OnDefaultRoleChanged();
            }
        }
        private global::System.Boolean _DefaultRole;
        partial void OnDefaultRoleChanging(global::System.Boolean value);
        partial void OnDefaultRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EditedByUserId
        {
            get
            {
                return _EditedByUserId;
            }
            set
            {
                OnEditedByUserIdChanging(value);
                ReportPropertyChanging("EditedByUserId");
                _EditedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EditedByUserId");
                OnEditedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EditedByUserId;
        partial void OnEditedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnEditedByUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeletedByUserId
        {
            get
            {
                return _DeletedByUserId;
            }
            set
            {
                OnDeletedByUserIdChanging(value);
                ReportPropertyChanging("DeletedByUserId");
                _DeletedByUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedByUserId");
                OnDeletedByUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeletedByUserId;
        partial void OnDeletedByUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeletedByUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_RolePermissions_Roles", "RolePermissions")]
        public EntityCollection<RolePermission> RolePermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolePermission>("UniversityOfMeModel.FK_RolePermissions_Roles", "RolePermissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolePermission>("UniversityOfMeModel.FK_RolePermissions_Roles", "RolePermissions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserRoles_Roles", "UserRoles")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("UniversityOfMeModel.FK_UserRoles_Roles", "UserRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("UniversityOfMeModel.FK_UserRoles_Roles", "UserRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="RolePermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolePermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RolePermission object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="permissionId">Initial value of the PermissionId property.</param>
        public static RolePermission CreateRolePermission(global::System.Int32 id, global::System.Int32 roleId, global::System.Int32 permissionId)
        {
            RolePermission rolePermission = new RolePermission();
            rolePermission.Id = id;
            rolePermission.RoleId = roleId;
            rolePermission.PermissionId = permissionId;
            return rolePermission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                OnPermissionIdChanging(value);
                ReportPropertyChanging("PermissionId");
                _PermissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionId");
                OnPermissionIdChanged();
            }
        }
        private global::System.Int32 _PermissionId;
        partial void OnPermissionIdChanging(global::System.Int32 value);
        partial void OnPermissionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_RolePermissions_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("UniversityOfMeModel.FK_RolePermissions_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("UniversityOfMeModel.FK_RolePermissions_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("UniversityOfMeModel.FK_RolePermissions_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("UniversityOfMeModel.FK_RolePermissions_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_RolePermissions_Permissions", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("UniversityOfMeModel.FK_RolePermissions_Permissions", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("UniversityOfMeModel.FK_RolePermissions_Permissions", "Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("UniversityOfMeModel.FK_RolePermissions_Permissions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("UniversityOfMeModel.FK_RolePermissions_Permissions", "Permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="SendItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SendItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SendItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="toUserId">Initial value of the ToUserId property.</param>
        /// <param name="fromUserId">Initial value of the FromUserId property.</param>
        /// <param name="item">Initial value of the Item property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="seen">Initial value of the Seen property.</param>
        public static SendItem CreateSendItem(global::System.Int32 id, global::System.Int32 toUserId, global::System.Int32 fromUserId, global::System.Int32 item, global::System.DateTime dateTimeStamp, global::System.Boolean seen)
        {
            SendItem sendItem = new SendItem();
            sendItem.Id = id;
            sendItem.ToUserId = toUserId;
            sendItem.FromUserId = fromUserId;
            sendItem.Item = item;
            sendItem.DateTimeStamp = dateTimeStamp;
            sendItem.Seen = seen;
            return sendItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToUserId
        {
            get
            {
                return _ToUserId;
            }
            set
            {
                OnToUserIdChanging(value);
                ReportPropertyChanging("ToUserId");
                _ToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToUserId");
                OnToUserIdChanged();
            }
        }
        private global::System.Int32 _ToUserId;
        partial void OnToUserIdChanging(global::System.Int32 value);
        partial void OnToUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FromUserId
        {
            get
            {
                return _FromUserId;
            }
            set
            {
                OnFromUserIdChanging(value);
                ReportPropertyChanging("FromUserId");
                _FromUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromUserId");
                OnFromUserIdChanged();
            }
        }
        private global::System.Int32 _FromUserId;
        partial void OnFromUserIdChanging(global::System.Int32 value);
        partial void OnFromUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item
        {
            get
            {
                return _Item;
            }
            set
            {
                OnItemChanging(value);
                ReportPropertyChanging("Item");
                _Item = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item");
                OnItemChanged();
            }
        }
        private global::System.Int32 _Item;
        partial void OnItemChanging(global::System.Int32 value);
        partial void OnItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Seen
        {
            get
            {
                return _Seen;
            }
            set
            {
                OnSeenChanging(value);
                ReportPropertyChanging("Seen");
                _Seen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seen");
                OnSeenChanged();
            }
        }
        private global::System.Boolean _Seen;
        partial void OnSeenChanging(global::System.Boolean value);
        partial void OnSeenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_SendItems_User_FromUser", "User")]
        public User FromUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_SendItems_User_FromUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_SendItems_User_FromUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> FromUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_SendItems_User_FromUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_SendItems_User_FromUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_SendItems_Users_ToUser", "User")]
        public User ToUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_SendItems_Users_ToUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_SendItems_Users_ToUser", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> ToUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_SendItems_Users_ToUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_SendItems_Users_ToUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="TextBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextBook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextBook object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="universityId">Initial value of the UniversityId property.</param>
        /// <param name="textBookConditionId">Initial value of the TextBookConditionId property.</param>
        /// <param name="bookTitle">Initial value of the BookTitle property.</param>
        /// <param name="bookAuthor">Initial value of the BookAuthor property.</param>
        /// <param name="edition">Initial value of the Edition property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static TextBook CreateTextBook(global::System.Int32 id, global::System.Int32 userId, global::System.String universityId, global::System.String textBookConditionId, global::System.String bookTitle, global::System.String bookAuthor, global::System.Int32 edition, global::System.Double price, global::System.DateTime dateTimeStamp, global::System.Boolean active)
        {
            TextBook textBook = new TextBook();
            textBook.Id = id;
            textBook.UserId = userId;
            textBook.UniversityId = universityId;
            textBook.TextBookConditionId = textBookConditionId;
            textBook.BookTitle = bookTitle;
            textBook.BookAuthor = bookAuthor;
            textBook.Edition = edition;
            textBook.Price = price;
            textBook.DateTimeStamp = dateTimeStamp;
            textBook.Active = active;
            return textBook;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityId
        {
            get
            {
                return _UniversityId;
            }
            set
            {
                OnUniversityIdChanging(value);
                ReportPropertyChanging("UniversityId");
                _UniversityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityId");
                OnUniversityIdChanged();
            }
        }
        private global::System.String _UniversityId;
        partial void OnUniversityIdChanging(global::System.String value);
        partial void OnUniversityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TextBookConditionId
        {
            get
            {
                return _TextBookConditionId;
            }
            set
            {
                OnTextBookConditionIdChanging(value);
                ReportPropertyChanging("TextBookConditionId");
                _TextBookConditionId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TextBookConditionId");
                OnTextBookConditionIdChanged();
            }
        }
        private global::System.String _TextBookConditionId;
        partial void OnTextBookConditionIdChanging(global::System.String value);
        partial void OnTextBookConditionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BookTitle
        {
            get
            {
                return _BookTitle;
            }
            set
            {
                OnBookTitleChanging(value);
                ReportPropertyChanging("BookTitle");
                _BookTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BookTitle");
                OnBookTitleChanged();
            }
        }
        private global::System.String _BookTitle;
        partial void OnBookTitleChanging(global::System.String value);
        partial void OnBookTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BookAuthor
        {
            get
            {
                return _BookAuthor;
            }
            set
            {
                OnBookAuthorChanging(value);
                ReportPropertyChanging("BookAuthor");
                _BookAuthor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BookAuthor");
                OnBookAuthorChanged();
            }
        }
        private global::System.String _BookAuthor;
        partial void OnBookAuthorChanging(global::System.String value);
        partial void OnBookAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BookPicture
        {
            get
            {
                return _BookPicture;
            }
            set
            {
                OnBookPictureChanging(value);
                ReportPropertyChanging("BookPicture");
                _BookPicture = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BookPicture");
                OnBookPictureChanged();
            }
        }
        private global::System.String _BookPicture;
        partial void OnBookPictureChanging(global::System.String value);
        partial void OnBookPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassSubject
        {
            get
            {
                return _ClassSubject;
            }
            set
            {
                OnClassSubjectChanging(value);
                ReportPropertyChanging("ClassSubject");
                _ClassSubject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassSubject");
                OnClassSubjectChanged();
            }
        }
        private global::System.String _ClassSubject;
        partial void OnClassSubjectChanging(global::System.String value);
        partial void OnClassSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassCourse
        {
            get
            {
                return _ClassCourse;
            }
            set
            {
                OnClassCourseChanging(value);
                ReportPropertyChanging("ClassCourse");
                _ClassCourse = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassCourse");
                OnClassCourseChanged();
            }
        }
        private global::System.String _ClassCourse;
        partial void OnClassCourseChanging(global::System.String value);
        partial void OnClassCourseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Edition
        {
            get
            {
                return _Edition;
            }
            set
            {
                OnEditionChanging(value);
                ReportPropertyChanging("Edition");
                _Edition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Edition");
                OnEditionChanged();
            }
        }
        private global::System.Int32 _Edition;
        partial void OnEditionChanging(global::System.Int32 value);
        partial void OnEditionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                OnISBNChanging(value);
                ReportPropertyChanging("ISBN");
                _ISBN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISBN");
                OnISBNChanged();
            }
        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_TextBooks_TextBookConditions", "TextBookCondition")]
        public TextBookCondition TextBookCondition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextBookCondition>("UniversityOfMeModel.FK_TextBooks_TextBookConditions", "TextBookCondition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextBookCondition>("UniversityOfMeModel.FK_TextBooks_TextBookConditions", "TextBookCondition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TextBookCondition> TextBookConditionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextBookCondition>("UniversityOfMeModel.FK_TextBooks_TextBookConditions", "TextBookCondition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TextBookCondition>("UniversityOfMeModel.FK_TextBooks_TextBookConditions", "TextBookCondition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_TextBooks_Universities", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_TextBooks_Universities", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_TextBooks_Universities", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_TextBooks_Universities", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("UniversityOfMeModel.FK_TextBooks_Universities", "University", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_TextBooks_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_TextBooks_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_TextBooks_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_TextBooks_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_TextBooks_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="TextBookCondition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextBookCondition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextBookCondition object.
        /// </summary>
        /// <param name="conditionId">Initial value of the ConditionId property.</param>
        /// <param name="display">Initial value of the Display property.</param>
        public static TextBookCondition CreateTextBookCondition(global::System.String conditionId, global::System.String display)
        {
            TextBookCondition textBookCondition = new TextBookCondition();
            textBookCondition.ConditionId = conditionId;
            textBookCondition.Display = display;
            return textBookCondition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConditionId
        {
            get
            {
                return _ConditionId;
            }
            set
            {
                if (_ConditionId != value)
                {
                    OnConditionIdChanging(value);
                    ReportPropertyChanging("ConditionId");
                    _ConditionId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ConditionId");
                    OnConditionIdChanged();
                }
            }
        }
        private global::System.String _ConditionId;
        partial void OnConditionIdChanging(global::System.String value);
        partial void OnConditionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Display
        {
            get
            {
                return _Display;
            }
            set
            {
                OnDisplayChanging(value);
                ReportPropertyChanging("Display");
                _Display = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Display");
                OnDisplayChanged();
            }
        }
        private global::System.String _Display;
        partial void OnDisplayChanging(global::System.String value);
        partial void OnDisplayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_TextBooks_TextBookConditions", "TextBook")]
        public EntityCollection<TextBook> TextBooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TextBook>("UniversityOfMeModel.FK_TextBooks_TextBookConditions", "TextBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TextBook>("UniversityOfMeModel.FK_TextBooks_TextBookConditions", "TextBook", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="University")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class University : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new University object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="universityName">Initial value of the UniversityName property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        public static University CreateUniversity(global::System.String id, global::System.String universityName, global::System.String image)
        {
            University university = new University();
            university.Id = id;
            university.UniversityName = universityName;
            university.Image = image;
            return university;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityName
        {
            get
            {
                return _UniversityName;
            }
            set
            {
                OnUniversityNameChanging(value);
                ReportPropertyChanging("UniversityName");
                _UniversityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityName");
                OnUniversityNameChanged();
            }
        }
        private global::System.String _UniversityName;
        partial void OnUniversityNameChanging(global::System.String value);
        partial void OnUniversityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UniversityEmails_Universities", "UniversityEmail")]
        public EntityCollection<UniversityEmail> UniversityEmails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UniversityEmail>("UniversityOfMeModel.FK_UniversityEmails_Universities", "UniversityEmail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UniversityEmail>("UniversityOfMeModel.FK_UniversityEmails_Universities", "UniversityEmail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserStatuses_Universities", "UserStatus")]
        public EntityCollection<UserStatus> UserStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserStatus>("UniversityOfMeModel.FK_UserStatuses_Universities", "UserStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserStatus>("UniversityOfMeModel.FK_UserStatuses_Universities", "UserStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_TextBooks_Universities", "TextBook")]
        public EntityCollection<TextBook> TextBooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TextBook>("UniversityOfMeModel.FK_TextBooks_Universities", "TextBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TextBook>("UniversityOfMeModel.FK_TextBooks_Universities", "TextBook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Classes_Universities", "Class")]
        public EntityCollection<Class> Classes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("UniversityOfMeModel.FK_Classes_Universities", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("UniversityOfMeModel.FK_Classes_Universities", "Class", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="UniversityEmail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UniversityEmail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UniversityEmail object.
        /// </summary>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="universityId">Initial value of the UniversityId property.</param>
        public static UniversityEmail CreateUniversityEmail(global::System.String email, global::System.String universityId)
        {
            UniversityEmail universityEmail = new UniversityEmail();
            universityEmail.Email = email;
            universityEmail.UniversityId = universityId;
            return universityEmail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                if (_Email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _Email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityId
        {
            get
            {
                return _UniversityId;
            }
            set
            {
                OnUniversityIdChanging(value);
                ReportPropertyChanging("UniversityId");
                _UniversityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityId");
                OnUniversityIdChanged();
            }
        }
        private global::System.String _UniversityId;
        partial void OnUniversityIdChanging(global::System.String value);
        partial void OnUniversityIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UniversityEmails_Universities", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_UniversityEmails_Universities", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_UniversityEmails_Universities", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_UniversityEmails_Universities", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("UniversityOfMeModel.FK_UniversityEmails_Universities", "University", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserUniversity_UniversityEmails", "UserUniversity")]
        public EntityCollection<UserUniversity> UserUniversities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserUniversity>("UniversityOfMeModel.FK_UserUniversity_UniversityEmails", "UserUniversity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserUniversity>("UniversityOfMeModel.FK_UserUniversity_UniversityEmails", "UserUniversity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="lastLogin">Initial value of the LastLogin property.</param>
        /// <param name="registrationDate">Initial value of the RegistrationDate property.</param>
        /// <param name="registrationIp">Initial value of the RegistrationIp property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String email, global::System.String password, global::System.String firstName, global::System.String lastName, global::System.DateTime lastLogin, global::System.DateTime registrationDate, global::System.String registrationIp)
        {
            User user = new User();
            user.Id = id;
            user.Email = email;
            user.Password = password;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.LastLogin = lastLogin;
            user.RegistrationDate = registrationDate;
            user.RegistrationIp = registrationIp;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private Nullable<global::System.Int32> _Zip;
        partial void OnZipChanging(Nullable<global::System.Int32> value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private global::System.DateTime _LastLogin;
        partial void OnLastLoginChanging(global::System.DateTime value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private global::System.DateTime _RegistrationDate;
        partial void OnRegistrationDateChanging(global::System.DateTime value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegistrationIp
        {
            get
            {
                return _RegistrationIp;
            }
            set
            {
                OnRegistrationIpChanging(value);
                ReportPropertyChanging("RegistrationIp");
                _RegistrationIp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegistrationIp");
                OnRegistrationIpChanged();
            }
        }
        private global::System.String _RegistrationIp;
        partial void OnRegistrationIpChanging(global::System.String value);
        partial void OnRegistrationIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AboutMe
        {
            get
            {
                return _AboutMe;
            }
            set
            {
                OnAboutMeChanging(value);
                ReportPropertyChanging("AboutMe");
                _AboutMe = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AboutMe");
                OnAboutMeChanged();
            }
        }
        private global::System.String _AboutMe;
        partial void OnAboutMeChanging(global::System.String value);
        partial void OnAboutMeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CookieHash
        {
            get
            {
                return _CookieHash;
            }
            set
            {
                OnCookieHashChanging(value);
                ReportPropertyChanging("CookieHash");
                _CookieHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CookieHash");
                OnCookieHashChanged();
            }
        }
        private global::System.String _CookieHash;
        partial void OnCookieHashChanging(global::System.String value);
        partial void OnCookieHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CookieCreationDate
        {
            get
            {
                return _CookieCreationDate;
            }
            set
            {
                OnCookieCreationDateChanging(value);
                ReportPropertyChanging("CookieCreationDate");
                _CookieCreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CookieCreationDate");
                OnCookieCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CookieCreationDate;
        partial void OnCookieCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCookieCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivationCode
        {
            get
            {
                return _ActivationCode;
            }
            set
            {
                OnActivationCodeChanging(value);
                ReportPropertyChanging("ActivationCode");
                _ActivationCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActivationCode");
                OnActivationCodeChanged();
            }
        }
        private global::System.String _ActivationCode;
        partial void OnActivationCodeChanging(global::System.String value);
        partial void OnActivationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ForgotPasswordHash
        {
            get
            {
                return _ForgotPasswordHash;
            }
            set
            {
                OnForgotPasswordHashChanging(value);
                ReportPropertyChanging("ForgotPasswordHash");
                _ForgotPasswordHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ForgotPasswordHash");
                OnForgotPasswordHashChanged();
            }
        }
        private global::System.String _ForgotPasswordHash;
        partial void OnForgotPasswordHashChanging(global::System.String value);
        partial void OnForgotPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ForgotPasswordHashDateTimeStamp
        {
            get
            {
                return _ForgotPasswordHashDateTimeStamp;
            }
            set
            {
                OnForgotPasswordHashDateTimeStampChanging(value);
                ReportPropertyChanging("ForgotPasswordHashDateTimeStamp");
                _ForgotPasswordHashDateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForgotPasswordHashDateTimeStamp");
                OnForgotPasswordHashDateTimeStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _ForgotPasswordHashDateTimeStamp;
        partial void OnForgotPasswordHashDateTimeStampChanging(Nullable<global::System.DateTime> value);
        partial void OnForgotPasswordHashDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortUrl
        {
            get
            {
                return _ShortUrl;
            }
            set
            {
                OnShortUrlChanging(value);
                ReportPropertyChanging("ShortUrl");
                _ShortUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortUrl");
                OnShortUrlChanged();
            }
        }
        private global::System.String _ShortUrl;
        partial void OnShortUrlChanging(global::System.String value);
        partial void OnShortUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewEmail
        {
            get
            {
                return _NewEmail;
            }
            set
            {
                OnNewEmailChanging(value);
                ReportPropertyChanging("NewEmail");
                _NewEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewEmail");
                OnNewEmailChanged();
            }
        }
        private global::System.String _NewEmail;
        partial void OnNewEmailChanging(global::System.String value);
        partial void OnNewEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewEmailHash
        {
            get
            {
                return _NewEmailHash;
            }
            set
            {
                OnNewEmailHashChanging(value);
                ReportPropertyChanging("NewEmailHash");
                _NewEmailHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewEmailHash");
                OnNewEmailHashChanged();
            }
        }
        private global::System.String _NewEmailHash;
        partial void OnNewEmailHashChanging(global::System.String value);
        partial void OnNewEmailHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelationshipStatus
        {
            get
            {
                return _RelationshipStatus;
            }
            set
            {
                OnRelationshipStatusChanging(value);
                ReportPropertyChanging("RelationshipStatus");
                _RelationshipStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelationshipStatus");
                OnRelationshipStatusChanged();
            }
        }
        private global::System.String _RelationshipStatus;
        partial void OnRelationshipStatusChanging(global::System.String value);
        partial void OnRelationshipStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ActivationCodeUsed
        {
            get
            {
                return _ActivationCodeUsed;
            }
            set
            {
                OnActivationCodeUsedChanging(value);
                ReportPropertyChanging("ActivationCodeUsed");
                _ActivationCodeUsed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivationCodeUsed");
                OnActivationCodeUsedChanged();
            }
        }
        private Nullable<global::System.Boolean> _ActivationCodeUsed;
        partial void OnActivationCodeUsedChanging(Nullable<global::System.Boolean> value);
        partial void OnActivationCodeUsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Job
        {
            get
            {
                return _Job;
            }
            set
            {
                OnJobChanging(value);
                ReportPropertyChanging("Job");
                _Job = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Job");
                OnJobChanged();
            }
        }
        private global::System.String _Job;
        partial void OnJobChanging(global::System.String value);
        partial void OnJobChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserPrivacySettings_Users", "UserPrivacySetting")]
        public EntityCollection<UserPrivacySetting> UserPrivacySettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPrivacySetting>("UniversityOfMeModel.FK_UserPrivacySettings_Users", "UserPrivacySetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPrivacySetting>("UniversityOfMeModel.FK_UserPrivacySettings_Users", "UserPrivacySetting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserRoles_Users", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("UniversityOfMeModel.FK_UserRoles_Users", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("UniversityOfMeModel.FK_UserRoles_Users", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_WhoIsOnline_Users", "WhoIsOnline")]
        public EntityCollection<WhoIsOnline> WhoIsOnlines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WhoIsOnline>("UniversityOfMeModel.FK_WhoIsOnline_Users", "WhoIsOnline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WhoIsOnline>("UniversityOfMeModel.FK_WhoIsOnline_Users", "WhoIsOnline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_PrivacySettings_Users", "PrivacySetting")]
        public EntityCollection<PrivacySetting> PrivacySettings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivacySetting>("UniversityOfMeModel.FK_PrivacySettings_Users", "PrivacySetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivacySetting>("UniversityOfMeModel.FK_PrivacySettings_Users", "PrivacySetting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserUniversity_Users", "UserUniversity")]
        public EntityCollection<UserUniversity> UserUniversities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserUniversity>("UniversityOfMeModel.FK_UserUniversity_Users", "UserUniversity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserUniversity>("UniversityOfMeModel.FK_UserUniversity_Users", "UserUniversity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Friends_FriendUserId_Users", "Friend")]
        public EntityCollection<Friend> Friends
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("UniversityOfMeModel.FK_Friends_FriendUserId_Users", "Friend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("UniversityOfMeModel.FK_Friends_FriendUserId_Users", "Friend", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Friends_SourceUserId_Users", "Friend")]
        public EntityCollection<Friend> AsSourceUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Friend>("UniversityOfMeModel.FK_Friends_SourceUserId_Users", "Friend");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Friend>("UniversityOfMeModel.FK_Friends_SourceUserId_Users", "Friend", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Replys_User", "MessageReply")]
        public EntityCollection<MessageReply> MessageReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageReply>("UniversityOfMeModel.FK_Replys_User", "MessageReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageReply>("UniversityOfMeModel.FK_Replys_User", "MessageReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Message_Users_FromUserId", "Message")]
        public EntityCollection<Message> MessagesSent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("UniversityOfMeModel.FK_Message_Users_FromUserId", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("UniversityOfMeModel.FK_Message_Users_FromUserId", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Message_Users_ToUserId", "Message")]
        public EntityCollection<Message> MessagesReceived
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("UniversityOfMeModel.FK_Message_Users_ToUserId", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("UniversityOfMeModel.FK_Message_Users_ToUserId", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_PhotoAlbum_Users", "PhotoAlbum")]
        public EntityCollection<PhotoAlbum> PhotoAlbums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhotoAlbum>("UniversityOfMeModel.FK_PhotoAlbum_Users", "PhotoAlbum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhotoAlbum>("UniversityOfMeModel.FK_PhotoAlbum_Users", "PhotoAlbum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Photos_Users", "Photo")]
        public EntityCollection<Photo> Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("UniversityOfMeModel.FK_Photos_Users", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("UniversityOfMeModel.FK_Photos_Users", "Photo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_AuditBoard_Users", "AuditBoard")]
        public EntityCollection<AuditBoard> AuditBoards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditBoard>("UniversityOfMeModel.FK_AuditBoard_Users", "AuditBoard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditBoard>("UniversityOfMeModel.FK_AuditBoard_Users", "AuditBoard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_AuditBoardReplies_Users", "AuditBoardReply")]
        public EntityCollection<AuditBoardReply> AuditBoardReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditBoardReply>("UniversityOfMeModel.FK_AuditBoardReplies_Users", "AuditBoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditBoardReply>("UniversityOfMeModel.FK_AuditBoardReplies_Users", "AuditBoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Board_OwnerUserId_Users", "Board")]
        public EntityCollection<Board> Boards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Board>("UniversityOfMeModel.FK_Board_OwnerUserId_Users", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Board>("UniversityOfMeModel.FK_Board_OwnerUserId_Users", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Board_PostedUserId_Users", "Board")]
        public EntityCollection<Board> BoardsPostedOn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Board>("UniversityOfMeModel.FK_Board_PostedUserId_Users", "Board");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Board>("UniversityOfMeModel.FK_Board_PostedUserId_Users", "Board", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_BoardReply_Users", "BoardReply")]
        public EntityCollection<BoardReply> BoardReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardReply>("UniversityOfMeModel.FK_BoardReply_Users", "BoardReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardReply>("UniversityOfMeModel.FK_BoardReply_Users", "BoardReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_BoardViewedState_Users", "BoardViewedState")]
        public EntityCollection<BoardViewedState> BoardViewedStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BoardViewedState>("UniversityOfMeModel.FK_BoardViewedState_Users", "BoardViewedState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BoardViewedState>("UniversityOfMeModel.FK_BoardViewedState_Users", "BoardViewedState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_SendItems_User_FromUser", "SendItem")]
        public EntityCollection<SendItem> ItemsSent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SendItem>("UniversityOfMeModel.FK_SendItems_User_FromUser", "SendItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SendItem>("UniversityOfMeModel.FK_SendItems_User_FromUser", "SendItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_SendItems_Users_ToUser", "SendItem")]
        public EntityCollection<SendItem> ItemsReceived
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SendItem>("UniversityOfMeModel.FK_SendItems_Users_ToUser", "SendItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SendItem>("UniversityOfMeModel.FK_SendItems_Users_ToUser", "SendItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_PhotoComments_Users", "PhotoComment")]
        public EntityCollection<PhotoComment> PhotoComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhotoComment>("UniversityOfMeModel.FK_PhotoComments_Users", "PhotoComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhotoComment>("UniversityOfMeModel.FK_PhotoComments_Users", "PhotoComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_FeaturesEnabled_Users", "FeaturesEnabled")]
        public EntityCollection<FeaturesEnabled> FeaturesEnableds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturesEnabled>("UniversityOfMeModel.FK_FeaturesEnabled_Users", "FeaturesEnabled");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturesEnabled>("UniversityOfMeModel.FK_FeaturesEnabled_Users", "FeaturesEnabled", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Users_RelationshipStatus", "RelationshipStatu")]
        public RelationshipStatu RelationshipStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipStatu>("UniversityOfMeModel.FK_Users_RelationshipStatus", "RelationshipStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipStatu>("UniversityOfMeModel.FK_Users_RelationshipStatus", "RelationshipStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelationshipStatu> RelationshipStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipStatu>("UniversityOfMeModel.FK_Users_RelationshipStatus", "RelationshipStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelationshipStatu>("UniversityOfMeModel.FK_Users_RelationshipStatus", "RelationshipStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_ErrorLog_Users", "ErrorLog")]
        public EntityCollection<ErrorLog> ErrorLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ErrorLog>("UniversityOfMeModel.FK_ErrorLog_Users", "ErrorLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ErrorLog>("UniversityOfMeModel.FK_ErrorLog_Users", "ErrorLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserActions_Users", "UserAction")]
        public EntityCollection<UserAction> UserActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAction>("UniversityOfMeModel.FK_UserActions_Users", "UserAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAction>("UniversityOfMeModel.FK_UserActions_Users", "UserAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserBadges_Users", "UserBadge")]
        public EntityCollection<UserBadge> UserBadges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserBadge>("UniversityOfMeModel.FK_UserBadges_Users", "UserBadge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserBadge>("UniversityOfMeModel.FK_UserBadges_Users", "UserBadge", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Statuses_Users", "UserStatus")]
        public EntityCollection<UserStatus> UserStatuses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserStatus>("UniversityOfMeModel.FK_Statuses_Users", "UserStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserStatus>("UniversityOfMeModel.FK_Statuses_Users", "UserStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_TextBooks_Users", "TextBook")]
        public EntityCollection<TextBook> TextBooks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TextBook>("UniversityOfMeModel.FK_TextBooks_Users", "TextBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TextBook>("UniversityOfMeModel.FK_TextBooks_Users", "TextBook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_ItemsSelling_Users", "MarketplaceItem")]
        public EntityCollection<MarketplaceItem> MarketplaceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarketplaceItem>("UniversityOfMeModel.FK_ItemsSelling_Users", "MarketplaceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarketplaceItem>("UniversityOfMeModel.FK_ItemsSelling_Users", "MarketplaceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Classes_Users", "Class")]
        public EntityCollection<Class> Classes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Class>("UniversityOfMeModel.FK_Classes_Users", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Class>("UniversityOfMeModel.FK_Classes_Users", "Class", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="UserAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="actionName">Initial value of the ActionName property.</param>
        /// <param name="sectionName">Initial value of the SectionName property.</param>
        /// <param name="sectionId">Initial value of the SectionId property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        public static UserAction CreateUserAction(global::System.Int32 id, global::System.Int32 userId, global::System.String actionName, global::System.String sectionName, global::System.Int32 sectionId, global::System.DateTime dateTimeStamp)
        {
            UserAction userAction = new UserAction();
            userAction.Id = id;
            userAction.UserId = userId;
            userAction.ActionName = actionName;
            userAction.SectionName = sectionName;
            userAction.SectionId = sectionId;
            userAction.DateTimeStamp = dateTimeStamp;
            return userAction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionName
        {
            get
            {
                return _ActionName;
            }
            set
            {
                OnActionNameChanging(value);
                ReportPropertyChanging("ActionName");
                _ActionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionName");
                OnActionNameChanged();
            }
        }
        private global::System.String _ActionName;
        partial void OnActionNameChanging(global::System.String value);
        partial void OnActionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SectionName
        {
            get
            {
                return _SectionName;
            }
            set
            {
                OnSectionNameChanging(value);
                ReportPropertyChanging("SectionName");
                _SectionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SectionName");
                OnSectionNameChanged();
            }
        }
        private global::System.String _SectionName;
        partial void OnSectionNameChanging(global::System.String value);
        partial void OnSectionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SectionId
        {
            get
            {
                return _SectionId;
            }
            set
            {
                OnSectionIdChanging(value);
                ReportPropertyChanging("SectionId");
                _SectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SectionId");
                OnSectionIdChanged();
            }
        }
        private global::System.Int32 _SectionId;
        partial void OnSectionIdChanging(global::System.Int32 value);
        partial void OnSectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserActions_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserActions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserActions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserActions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_UserActions_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="UserBadge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserBadge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserBadge object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="badgeName">Initial value of the BadgeName property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="currentPoints">Initial value of the CurrentPoints property.</param>
        /// <param name="received">Initial value of the Received property.</param>
        /// <param name="seen">Initial value of the Seen property.</param>
        public static UserBadge CreateUserBadge(global::System.Int32 id, global::System.Int32 userId, global::System.String badgeName, global::System.DateTime dateTimeStamp, global::System.Int32 currentPoints, global::System.Boolean received, global::System.Boolean seen)
        {
            UserBadge userBadge = new UserBadge();
            userBadge.Id = id;
            userBadge.UserId = userId;
            userBadge.BadgeName = badgeName;
            userBadge.DateTimeStamp = dateTimeStamp;
            userBadge.CurrentPoints = currentPoints;
            userBadge.Received = received;
            userBadge.Seen = seen;
            return userBadge;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BadgeName
        {
            get
            {
                return _BadgeName;
            }
            set
            {
                OnBadgeNameChanging(value);
                ReportPropertyChanging("BadgeName");
                _BadgeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BadgeName");
                OnBadgeNameChanged();
            }
        }
        private global::System.String _BadgeName;
        partial void OnBadgeNameChanging(global::System.String value);
        partial void OnBadgeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentPoints
        {
            get
            {
                return _CurrentPoints;
            }
            set
            {
                OnCurrentPointsChanging(value);
                ReportPropertyChanging("CurrentPoints");
                _CurrentPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPoints");
                OnCurrentPointsChanged();
            }
        }
        private global::System.Int32 _CurrentPoints;
        partial void OnCurrentPointsChanging(global::System.Int32 value);
        partial void OnCurrentPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Received
        {
            get
            {
                return _Received;
            }
            set
            {
                OnReceivedChanging(value);
                ReportPropertyChanging("Received");
                _Received = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Received");
                OnReceivedChanged();
            }
        }
        private global::System.Boolean _Received;
        partial void OnReceivedChanging(global::System.Boolean value);
        partial void OnReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Seen
        {
            get
            {
                return _Seen;
            }
            set
            {
                OnSeenChanging(value);
                ReportPropertyChanging("Seen");
                _Seen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seen");
                OnSeenChanged();
            }
        }
        private global::System.Boolean _Seen;
        partial void OnSeenChanging(global::System.Boolean value);
        partial void OnSeenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserBadges_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserBadges_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserBadges_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserBadges_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_UserBadges_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserBadges_Badges", "Badge")]
        public Badge Badge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Badge>("UniversityOfMeModel.FK_UserBadges_Badges", "Badge").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Badge>("UniversityOfMeModel.FK_UserBadges_Badges", "Badge").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Badge> BadgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Badge>("UniversityOfMeModel.FK_UserBadges_Badges", "Badge");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Badge>("UniversityOfMeModel.FK_UserBadges_Badges", "Badge", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="UserPrivacySetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPrivacySetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPrivacySetting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="privacySettingName">Initial value of the PrivacySettingName property.</param>
        public static UserPrivacySetting CreateUserPrivacySetting(global::System.Int32 id, global::System.Int32 userId, global::System.String privacySettingName)
        {
            UserPrivacySetting userPrivacySetting = new UserPrivacySetting();
            userPrivacySetting.Id = id;
            userPrivacySetting.UserId = userId;
            userPrivacySetting.PrivacySettingName = privacySettingName;
            return userPrivacySetting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrivacySettingName
        {
            get
            {
                return _PrivacySettingName;
            }
            set
            {
                OnPrivacySettingNameChanging(value);
                ReportPropertyChanging("PrivacySettingName");
                _PrivacySettingName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrivacySettingName");
                OnPrivacySettingNameChanged();
            }
        }
        private global::System.String _PrivacySettingName;
        partial void OnPrivacySettingNameChanging(global::System.String value);
        partial void OnPrivacySettingNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserPrivacySettings_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserPrivacySettings_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserPrivacySettings_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserPrivacySettings_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_UserPrivacySettings_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserPrivacySettings_PrivacySettings", "PrivacySetting")]
        public PrivacySetting PrivacySetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacySetting>("UniversityOfMeModel.FK_UserPrivacySettings_PrivacySettings", "PrivacySetting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacySetting>("UniversityOfMeModel.FK_UserPrivacySettings_PrivacySettings", "PrivacySetting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivacySetting> PrivacySettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacySetting>("UniversityOfMeModel.FK_UserPrivacySettings_PrivacySettings", "PrivacySetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivacySetting>("UniversityOfMeModel.FK_UserPrivacySettings_PrivacySettings", "PrivacySetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UserRole CreateUserRole(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 roleId)
        {
            UserRole userRole = new UserRole();
            userRole.Id = id;
            userRole.UserId = userId;
            userRole.RoleId = roleId;
            return userRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserRoles_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("UniversityOfMeModel.FK_UserRoles_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("UniversityOfMeModel.FK_UserRoles_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("UniversityOfMeModel.FK_UserRoles_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("UniversityOfMeModel.FK_UserRoles_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserRoles_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserRoles_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserRoles_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserRoles_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_UserRoles_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="UserStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="universityId">Initial value of the UniversityId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="everyone">Initial value of the Everyone property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static UserStatus CreateUserStatus(global::System.Int32 id, global::System.Int32 userId, global::System.String universityId, global::System.String status, global::System.Boolean everyone, global::System.DateTime dateTimeStamp, global::System.Boolean deleted)
        {
            UserStatus userStatus = new UserStatus();
            userStatus.Id = id;
            userStatus.UserId = userId;
            userStatus.UniversityId = universityId;
            userStatus.Status = status;
            userStatus.Everyone = everyone;
            userStatus.DateTimeStamp = dateTimeStamp;
            userStatus.Deleted = deleted;
            return userStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityId
        {
            get
            {
                return _UniversityId;
            }
            set
            {
                OnUniversityIdChanging(value);
                ReportPropertyChanging("UniversityId");
                _UniversityId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityId");
                OnUniversityIdChanged();
            }
        }
        private global::System.String _UniversityId;
        partial void OnUniversityIdChanging(global::System.String value);
        partial void OnUniversityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Everyone
        {
            get
            {
                return _Everyone;
            }
            set
            {
                OnEveryoneChanging(value);
                ReportPropertyChanging("Everyone");
                _Everyone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Everyone");
                OnEveryoneChanged();
            }
        }
        private global::System.Boolean _Everyone;
        partial void OnEveryoneChanging(global::System.Boolean value);
        partial void OnEveryoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserStatuses_Universities", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_UserStatuses_Universities", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_UserStatuses_Universities", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("UniversityOfMeModel.FK_UserStatuses_Universities", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("UniversityOfMeModel.FK_UserStatuses_Universities", "University", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_Statuses_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Statuses_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Statuses_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_Statuses_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_Statuses_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="UserUniversity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserUniversity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserUniversity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="universityEmailId">Initial value of the UniversityEmailId property.</param>
        public static UserUniversity CreateUserUniversity(global::System.Int32 id, global::System.Int32 userId, global::System.String universityEmailId)
        {
            UserUniversity userUniversity = new UserUniversity();
            userUniversity.Id = id;
            userUniversity.UserId = userId;
            userUniversity.UniversityEmailId = universityEmailId;
            return userUniversity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UniversityEmailId
        {
            get
            {
                return _UniversityEmailId;
            }
            set
            {
                OnUniversityEmailIdChanging(value);
                ReportPropertyChanging("UniversityEmailId");
                _UniversityEmailId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UniversityEmailId");
                OnUniversityEmailIdChanged();
            }
        }
        private global::System.String _UniversityEmailId;
        partial void OnUniversityEmailIdChanging(global::System.String value);
        partial void OnUniversityEmailIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserUniversity_UniversityEmails", "UniversityEmail")]
        public UniversityEmail UniversityEmail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UniversityEmail>("UniversityOfMeModel.FK_UserUniversity_UniversityEmails", "UniversityEmail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UniversityEmail>("UniversityOfMeModel.FK_UserUniversity_UniversityEmails", "UniversityEmail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UniversityEmail> UniversityEmailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UniversityEmail>("UniversityOfMeModel.FK_UserUniversity_UniversityEmails", "UniversityEmail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UniversityEmail>("UniversityOfMeModel.FK_UserUniversity_UniversityEmails", "UniversityEmail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_UserUniversity_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserUniversity_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserUniversity_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_UserUniversity_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_UserUniversity_Users", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UniversityOfMeModel", Name="WhoIsOnline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WhoIsOnline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WhoIsOnline object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="dateTimeStamp">Initial value of the DateTimeStamp property.</param>
        /// <param name="ipAddress">Initial value of the IpAddress property.</param>
        /// <param name="forceLogOut">Initial value of the ForceLogOut property.</param>
        public static WhoIsOnline CreateWhoIsOnline(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime dateTimeStamp, global::System.String ipAddress, global::System.Boolean forceLogOut)
        {
            WhoIsOnline whoIsOnline = new WhoIsOnline();
            whoIsOnline.Id = id;
            whoIsOnline.UserId = userId;
            whoIsOnline.DateTimeStamp = dateTimeStamp;
            whoIsOnline.IpAddress = ipAddress;
            whoIsOnline.ForceLogOut = forceLogOut;
            return whoIsOnline;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeStamp
        {
            get
            {
                return _DateTimeStamp;
            }
            set
            {
                OnDateTimeStampChanging(value);
                ReportPropertyChanging("DateTimeStamp");
                _DateTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeStamp");
                OnDateTimeStampChanged();
            }
        }
        private global::System.DateTime _DateTimeStamp;
        partial void OnDateTimeStampChanging(global::System.DateTime value);
        partial void OnDateTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IpAddress
        {
            get
            {
                return _IpAddress;
            }
            set
            {
                OnIpAddressChanging(value);
                ReportPropertyChanging("IpAddress");
                _IpAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IpAddress");
                OnIpAddressChanged();
            }
        }
        private global::System.String _IpAddress;
        partial void OnIpAddressChanging(global::System.String value);
        partial void OnIpAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ForceLogOut
        {
            get
            {
                return _ForceLogOut;
            }
            set
            {
                OnForceLogOutChanging(value);
                ReportPropertyChanging("ForceLogOut");
                _ForceLogOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForceLogOut");
                OnForceLogOutChanged();
            }
        }
        private global::System.Boolean _ForceLogOut;
        partial void OnForceLogOutChanging(global::System.Boolean value);
        partial void OnForceLogOutChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UniversityOfMeModel", "FK_WhoIsOnline_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_WhoIsOnline_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_WhoIsOnline_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UniversityOfMeModel.FK_WhoIsOnline_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UniversityOfMeModel.FK_WhoIsOnline_Users", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
